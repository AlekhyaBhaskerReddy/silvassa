<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1415" passed="1361" failed="54" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-01T14:08:26 IST" name="SampleTestSuite" finished-at="2024-02-01T15:22:15 IST" duration-ms="4428627">
    <groups>
    </groups>
    <test started-at="2024-02-01T14:08:26 IST" name="Dashboard" finished-at="2024-02-01T14:11:13 IST" duration-ms="166830">
      <class name="com.selenium.Dashboard">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:08:26 IST" name="setUp" finished-at="2024-02-01T14:08:29 IST" duration-ms="3048" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:08:29 IST" name="login" finished-at="2024-02-01T14:08:37 IST" duration-ms="7978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:08:37 IST" name="getResult" finished-at="2024-02-01T14:08:37 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=Dashboard.login()[pri:1, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:08:37 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:08:42 IST" duration-ms="5229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:08:42 IST" name="getResult" finished-at="2024-02-01T14:08:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=Dashboard.revenueDashboardOpen()[pri:2, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getSummaryCards()[pri:3, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:08:42 IST" name="getSummaryCards" finished-at="2024-02-01T14:08:43 IST" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSummaryCards -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:08:43 IST" name="getResult" finished-at="2024-02-01T14:08:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSummaryCards status=SUCCESS method=Dashboard.getSummaryCards()[pri:3, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDatesEnabled()[pri:4, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:08:43 IST" name="revenueDatesEnabled" finished-at="2024-02-01T14:08:44 IST" duration-ms="1037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDatesEnabled -->
        <test-method signature="getMonthRevenue()[pri:5, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:08:44 IST" name="getMonthRevenue" finished-at="2024-02-01T14:08:48 IST" duration-ms="4269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMonthRevenue -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:08:44 IST" name="getResult" finished-at="2024-02-01T14:08:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDatesEnabled status=SUCCESS method=Dashboard.revenueDatesEnabled()[pri:4, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:08:48 IST" name="getResult" finished-at="2024-02-01T14:08:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getMonthRevenue status=SUCCESS method=Dashboard.getMonthRevenue()[pri:5, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getWeekRevenue()[pri:6, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:08:48 IST" name="getWeekRevenue" finished-at="2024-02-01T14:08:51 IST" duration-ms="3317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWeekRevenue -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:08:51 IST" name="getResult" finished-at="2024-02-01T14:08:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getWeekRevenue status=SUCCESS method=Dashboard.getWeekRevenue()[pri:6, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getDayRevenue()[pri:7, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:08:51 IST" name="getDayRevenue" finished-at="2024-02-01T14:08:55 IST" duration-ms="4271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDayRevenue -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:08:55 IST" name="getResult" finished-at="2024-02-01T14:08:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getDayRevenue status=SUCCESS method=Dashboard.getDayRevenue()[pri:7, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectCountDashboard()[pri:8, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:08:55 IST" name="selectCountDashboard" finished-at="2024-02-01T14:09:04 IST" duration-ms="8351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountDashboard -->
        <test-method signature="selectDashboardStartDate()[pri:9, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:04 IST" name="selectDashboardStartDate" finished-at="2024-02-01T14:09:13 IST" duration-ms="8891" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectDashboardStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:04 IST" name="getResult" finished-at="2024-02-01T14:09:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountDashboard status=SUCCESS method=Dashboard.selectCountDashboard()[pri:8, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:13 IST" name="getResult" finished-at="2024-02-01T14:09:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectDashboardStartDate status=SUCCESS method=Dashboard.selectDashboardStartDate()[pri:9, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectDashboardEndDate()[pri:10, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:13 IST" name="selectDashboardEndDate" finished-at="2024-02-01T14:09:24 IST" duration-ms="11627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectDashboardEndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:24 IST" name="getResult" finished-at="2024-02-01T14:09:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectDashboardEndDate status=SUCCESS method=Dashboard.selectDashboardEndDate()[pri:10, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="sitenamesDashboard()[pri:11, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:24 IST" name="sitenamesDashboard" finished-at="2024-02-01T14:09:25 IST" duration-ms="708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sitenamesDashboard -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:25 IST" name="getResult" finished-at="2024-02-01T14:09:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sitenamesDashboard status=SUCCESS method=Dashboard.sitenamesDashboard()[pri:11, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateRevenue()[pri:12, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:25 IST" name="validateRevenue" finished-at="2024-02-01T14:09:25 IST" duration-ms="457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRevenue -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:25 IST" name="getResult" finished-at="2024-02-01T14:09:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRevenue status=SUCCESS method=Dashboard.validateRevenue()[pri:12, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchSiteName()[pri:13, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:25 IST" name="searchSiteName" finished-at="2024-02-01T14:09:34 IST" duration-ms="8181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchSiteName -->
        <test-method signature="cityRevenueViewButton()[pri:14, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:34 IST" name="cityRevenueViewButton" finished-at="2024-02-01T14:09:36 IST" duration-ms="2546" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cityRevenueViewButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:34 IST" name="getResult" finished-at="2024-02-01T14:09:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchSiteName status=SUCCESS method=Dashboard.searchSiteName()[pri:13, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:36 IST" name="getResult" finished-at="2024-02-01T14:09:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cityRevenueViewButton status=SUCCESS method=Dashboard.cityRevenueViewButton()[pri:14, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="count_InViewDetails()[pri:15, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:36 IST" name="count_InViewDetails" finished-at="2024-02-01T14:09:44 IST" duration-ms="8238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- count_InViewDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:44 IST" name="getResult" finished-at="2024-02-01T14:09:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=count_InViewDetails status=SUCCESS method=Dashboard.count_InViewDetails()[pri:15, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchSiteName_InVieDetails()[pri:16, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:44 IST" name="searchSiteName_InVieDetails" finished-at="2024-02-01T14:09:53 IST" duration-ms="8135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchSiteName_InVieDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:53 IST" name="getResult" finished-at="2024-02-01T14:09:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchSiteName_InVieDetails status=SUCCESS method=Dashboard.searchSiteName_InVieDetails()[pri:16, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="cityRevenueCSVButton()[pri:17, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:53 IST" name="cityRevenueCSVButton" finished-at="2024-02-01T14:09:55 IST" duration-ms="2268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cityRevenueCSVButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:55 IST" name="getResult" finished-at="2024-02-01T14:09:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cityRevenueCSVButton status=SUCCESS method=Dashboard.cityRevenueCSVButton()[pri:17, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="cityRevenuePDFButton()[pri:18, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:55 IST" name="cityRevenuePDFButton" finished-at="2024-02-01T14:09:57 IST" duration-ms="2454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cityRevenuePDFButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:57 IST" name="getResult" finished-at="2024-02-01T14:09:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cityRevenuePDFButton status=SUCCESS method=Dashboard.cityRevenuePDFButton()[pri:18, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="cityRevenuePopUpClose()[pri:19, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:09:57 IST" name="cityRevenuePopUpClose" finished-at="2024-02-01T14:10:00 IST" duration-ms="2244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cityRevenuePopUpClose -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:00 IST" name="getResult" finished-at="2024-02-01T14:10:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cityRevenuePopUpClose status=SUCCESS method=Dashboard.cityRevenuePopUpClose()[pri:19, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="cityRevenueColumnFilterBtn()[pri:20, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:00 IST" name="cityRevenueColumnFilterBtn" finished-at="2024-02-01T14:10:02 IST" duration-ms="2244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cityRevenueColumnFilterBtn -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:02 IST" name="getResult" finished-at="2024-02-01T14:10:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cityRevenueColumnFilterBtn status=SUCCESS method=Dashboard.cityRevenueColumnFilterBtn()[pri:20, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="columnFilterSelectVehicleTypes()[pri:21, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:02 IST" name="columnFilterSelectVehicleTypes" finished-at="2024-02-01T14:10:37 IST" duration-ms="35449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- columnFilterSelectVehicleTypes -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:37 IST" name="getResult" finished-at="2024-02-01T14:10:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=columnFilterSelectVehicleTypes status=SUCCESS method=Dashboard.columnFilterSelectVehicleTypes()[pri:21, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="columnFilterPopUpClose()[pri:22, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:37 IST" name="columnFilterPopUpClose" finished-at="2024-02-01T14:10:39 IST" duration-ms="2241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- columnFilterPopUpClose -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:39 IST" name="getResult" finished-at="2024-02-01T14:10:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=columnFilterPopUpClose status=SUCCESS method=Dashboard.columnFilterPopUpClose()[pri:22, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="occupancyTabDashboard()[pri:23, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:39 IST" name="occupancyTabDashboard" finished-at="2024-02-01T14:10:42 IST" duration-ms="2132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- occupancyTabDashboard -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:42 IST" name="getResult" finished-at="2024-02-01T14:10:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=occupancyTabDashboard status=SUCCESS method=Dashboard.occupancyTabDashboard()[pri:23, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getOccupancyPercentage()[pri:24, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:42 IST" name="getOccupancyPercentage" finished-at="2024-02-01T14:10:42 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOccupancyPercentage -->
        <test-method signature="getOperatingSitesPercentage()[pri:25, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:42 IST" name="getOperatingSitesPercentage" finished-at="2024-02-01T14:10:42 IST" duration-ms="236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOperatingSitesPercentage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:42 IST" name="getResult" finished-at="2024-02-01T14:10:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getOccupancyPercentage status=SUCCESS method=Dashboard.getOccupancyPercentage()[pri:24, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:42 IST" name="getResult" finished-at="2024-02-01T14:10:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getOperatingSitesPercentage status=SUCCESS method=Dashboard.getOperatingSitesPercentage()[pri:25, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="operatingsSitesSelectCount()[pri:26, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:42 IST" name="operatingsSitesSelectCount" finished-at="2024-02-01T14:10:46 IST" duration-ms="4276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- operatingsSitesSelectCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:46 IST" name="getResult" finished-at="2024-02-01T14:10:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=operatingsSitesSelectCount status=SUCCESS method=Dashboard.operatingsSitesSelectCount()[pri:26, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchSiteStatus_OperationalTab()[pri:28, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:46 IST" name="searchSiteStatus_OperationalTab" finished-at="2024-02-01T14:10:54 IST" duration-ms="8153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchSiteStatus_OperationalTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:54 IST" name="getResult" finished-at="2024-02-01T14:10:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchSiteStatus_OperationalTab status=SUCCESS method=Dashboard.searchSiteStatus_OperationalTab()[pri:28, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="operatingsitesList()[pri:29, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:54 IST" name="operatingsitesList" finished-at="2024-02-01T14:10:57 IST" duration-ms="2277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- operatingsitesList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:57 IST" name="getResult" finished-at="2024-02-01T14:10:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=operatingsitesList status=SUCCESS method=Dashboard.operatingsitesList()[pri:29, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="deviceStatusTab()[pri:30, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:57 IST" name="deviceStatusTab" finished-at="2024-02-01T14:10:57 IST" duration-ms="244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deviceStatusTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:57 IST" name="getResult" finished-at="2024-02-01T14:10:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deviceStatusTab status=SUCCESS method=Dashboard.deviceStatusTab()[pri:30, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectCountDeviceStatus()[pri:31, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:10:57 IST" name="selectCountDeviceStatus" finished-at="2024-02-01T14:11:01 IST" duration-ms="4286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountDeviceStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:11:01 IST" name="getResult" finished-at="2024-02-01T14:11:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountDeviceStatus status=SUCCESS method=Dashboard.selectCountDeviceStatus()[pri:31, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="deviceStatusPercentage()[pri:32, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:11:01 IST" name="deviceStatusPercentage" finished-at="2024-02-01T14:11:04 IST" duration-ms="3047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deviceStatusPercentage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:11:04 IST" name="getResult" finished-at="2024-02-01T14:11:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deviceStatusPercentage status=SUCCESS method=Dashboard.deviceStatusPercentage()[pri:32, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="devicesStatusTable()[pri:33, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:11:04 IST" name="devicesStatusTable" finished-at="2024-02-01T14:11:04 IST" duration-ms="285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- devicesStatusTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:11:04 IST" name="getResult" finished-at="2024-02-01T14:11:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=devicesStatusTable status=SUCCESS method=Dashboard.devicesStatusTable()[pri:33, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="alertsTab()[pri:34, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:11:04 IST" name="alertsTab" finished-at="2024-02-01T14:11:05 IST" duration-ms="486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertsTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:11:05 IST" name="getResult" finished-at="2024-02-01T14:11:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alertsTab status=SUCCESS method=Dashboard.alertsTab()[pri:34, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="alertsCount()[pri:35, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:11:05 IST" name="alertsCount" finished-at="2024-02-01T14:11:10 IST" duration-ms="5025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertsCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:11:10 IST" name="getResult" finished-at="2024-02-01T14:11:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alertsCount status=SUCCESS method=Dashboard.alertsCount()[pri:35, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:36, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:11:10 IST" name="logout" finished-at="2024-02-01T14:11:12 IST" duration-ms="2293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:11:12 IST" name="getResult" finished-at="2024-02-01T14:11:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=Dashboard.logout()[pri:36, instance:com.selenium.Dashboard@124c278f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.Dashboard@124c278f]" started-at="2024-02-01T14:11:12 IST" name="tearDown" finished-at="2024-02-01T14:11:13 IST" duration-ms="773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.Dashboard -->
    </test> <!-- Dashboard -->
    <test started-at="2024-02-01T14:11:13 IST" name="ReservationReports" finished-at="2024-02-01T14:12:32 IST" duration-ms="78514">
      <class name="com.selenium.ReservationReports">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:11:13 IST" name="setUp" finished-at="2024-02-01T14:11:16 IST" duration-ms="2804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:11:16 IST" name="login" finished-at="2024-02-01T14:11:22 IST" duration-ms="6486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:11:22 IST" name="getResult" finished-at="2024-02-01T14:11:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=ReservationReports.login()[pri:1, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:11:22 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:11:28 IST" duration-ms="5210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method signature="redirectReservationReportsPage()[pri:3, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:11:28 IST" name="redirectReservationReportsPage" finished-at="2024-02-01T14:11:32 IST" duration-ms="4352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectReservationReportsPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:11:28 IST" name="getResult" finished-at="2024-02-01T14:11:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=ReservationReports.revenueDashboardOpen()[pri:2, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:11:32 IST" name="getResult" finished-at="2024-02-01T14:11:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectReservationReportsPage status=SUCCESS method=ReservationReports.redirectReservationReportsPage()[pri:3, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectReservationSitesList()[pri:4, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:11:32 IST" name="selectReservationSitesList" finished-at="2024-02-01T14:11:32 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectReservationSitesList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:11:32 IST" name="getResult" finished-at="2024-02-01T14:11:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectReservationSitesList status=SUCCESS method=ReservationReports.selectReservationSitesList()[pri:4, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="reservationReportDateEnabled()[pri:5, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:11:32 IST" name="reservationReportDateEnabled" finished-at="2024-02-01T14:11:37 IST" duration-ms="4853" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reservationReportDateEnabled -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:11:37 IST" name="getResult" finished-at="2024-02-01T14:11:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=reservationReportDateEnabled status=SUCCESS method=ReservationReports.reservationReportDateEnabled()[pri:5, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectReservationStartDate()[pri:6, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:11:37 IST" name="selectReservationStartDate" finished-at="2024-02-01T14:11:46 IST" duration-ms="8795" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectReservationStartDate -->
        <test-method signature="selectReservationEndDate()[pri:7, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:11:46 IST" name="selectReservationEndDate" finished-at="2024-02-01T14:11:57 IST" duration-ms="11495" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectReservationEndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:11:46 IST" name="getResult" finished-at="2024-02-01T14:11:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectReservationStartDate status=SUCCESS method=ReservationReports.selectReservationStartDate()[pri:6, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:11:57 IST" name="getResult" finished-at="2024-02-01T14:11:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectReservationEndDate status=SUCCESS method=ReservationReports.selectReservationEndDate()[pri:7, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectCountReservations()[pri:8, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:11:57 IST" name="selectCountReservations" finished-at="2024-02-01T14:11:59 IST" duration-ms="2265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountReservations -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:11:59 IST" name="getResult" finished-at="2024-02-01T14:11:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountReservations status=SUCCESS method=ReservationReports.selectCountReservations()[pri:8, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectReservations()[pri:9, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:11:59 IST" name="selectReservations" finished-at="2024-02-01T14:12:01 IST" duration-ms="2028" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectReservations -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:01 IST" name="getResult" finished-at="2024-02-01T14:12:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectReservations status=SUCCESS method=ReservationReports.selectReservations()[pri:9, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getreservationsList()[pri:10, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:01 IST" name="getreservationsList" finished-at="2024-02-01T14:12:01 IST" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getreservationsList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:01 IST" name="getResult" finished-at="2024-02-01T14:12:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getreservationsList status=SUCCESS method=ReservationReports.getreservationsList()[pri:10, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="compareRerservationsReserveExpiryTime()[pri:11, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:01 IST" name="compareRerservationsReserveExpiryTime" finished-at="2024-02-01T14:12:02 IST" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareRerservationsReserveExpiryTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:02 IST" name="getResult" finished-at="2024-02-01T14:12:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=compareRerservationsReserveExpiryTime status=SUCCESS method=ReservationReports.compareRerservationsReserveExpiryTime()[pri:11, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectPasses()[pri:13, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:02 IST" name="selectPasses" finished-at="2024-02-01T14:12:06 IST" duration-ms="4073" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPasses -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:06 IST" name="getResult" finished-at="2024-02-01T14:12:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectPasses status=SUCCESS method=ReservationReports.selectPasses()[pri:13, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getPassesList()[pri:14, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:06 IST" name="getPassesList" finished-at="2024-02-01T14:12:07 IST" duration-ms="1335" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPassesList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:07 IST" name="getResult" finished-at="2024-02-01T14:12:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getPassesList status=SUCCESS method=ReservationReports.getPassesList()[pri:14, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="comparePassesReserveExpiryTime()[pri:15, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:07 IST" name="comparePassesReserveExpiryTime" finished-at="2024-02-01T14:12:07 IST" duration-ms="440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- comparePassesReserveExpiryTime -->
        <test-method signature="selectGuestpasses()[pri:17, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:07 IST" name="selectGuestpasses" finished-at="2024-02-01T14:12:11 IST" duration-ms="4043" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectGuestpasses -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:07 IST" name="getResult" finished-at="2024-02-01T14:12:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=comparePassesReserveExpiryTime status=SUCCESS method=ReservationReports.comparePassesReserveExpiryTime()[pri:15, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:11 IST" name="getResult" finished-at="2024-02-01T14:12:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectGuestpasses status=SUCCESS method=ReservationReports.selectGuestpasses()[pri:17, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getGuestPassesList()[pri:21, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:11 IST" name="getGuestPassesList" finished-at="2024-02-01T14:12:16 IST" duration-ms="5024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getGuestPassesList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:16 IST" name="getResult" finished-at="2024-02-01T14:12:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getGuestPassesList status=SUCCESS method=ReservationReports.getGuestPassesList()[pri:21, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="compareEntryExitDateTime()[pri:22, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:16 IST" name="compareEntryExitDateTime" finished-at="2024-02-01T14:12:22 IST" duration-ms="5025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareEntryExitDateTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:22 IST" name="getResult" finished-at="2024-02-01T14:12:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=compareEntryExitDateTime status=SUCCESS method=ReservationReports.compareEntryExitDateTime()[pri:22, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="guestPassesViewButton()[pri:24, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:22 IST" name="guestPassesViewButton" finished-at="2024-02-01T14:12:24 IST" duration-ms="2011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestPassesViewButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:24 IST" name="getResult" finished-at="2024-02-01T14:12:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestPassesViewButton status=SUCCESS method=ReservationReports.guestPassesViewButton()[pri:24, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="guestPassPopUpClose()[pri:25, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:24 IST" name="guestPassPopUpClose" finished-at="2024-02-01T14:12:26 IST" duration-ms="2011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- guestPassPopUpClose -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:26 IST" name="getResult" finished-at="2024-02-01T14:12:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=guestPassPopUpClose status=SUCCESS method=ReservationReports.guestPassPopUpClose()[pri:25, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:26, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:26 IST" name="logout" finished-at="2024-02-01T14:12:31 IST" duration-ms="5301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:31 IST" name="getResult" finished-at="2024-02-01T14:12:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=ReservationReports.logout()[pri:26, instance:com.selenium.ReservationReports@7adda9cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.ReservationReports@7adda9cc]" started-at="2024-02-01T14:12:31 IST" name="tearDown" finished-at="2024-02-01T14:12:32 IST" duration-ms="705" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.ReservationReports -->
    </test> <!-- ReservationReports -->
    <test started-at="2024-02-01T14:12:32 IST" name="PosHourlyReport" finished-at="2024-02-01T14:14:21 IST" duration-ms="109653">
      <class name="com.selenium.PosHourlyReport">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:12:32 IST" name="setUp" finished-at="2024-02-01T14:12:34 IST" duration-ms="2310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:12:34 IST" name="login" finished-at="2024-02-01T14:12:39 IST" duration-ms="5648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:12:39 IST" name="getResult" finished-at="2024-02-01T14:12:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=PosHourlyReport.login()[pri:1, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:12:40 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:12:45 IST" duration-ms="5176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method signature="redirectPosHourlyReportPage()[pri:3, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:12:45 IST" name="redirectPosHourlyReportPage" finished-at="2024-02-01T14:12:49 IST" duration-ms="4584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectPosHourlyReportPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:12:45 IST" name="getResult" finished-at="2024-02-01T14:12:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=PosHourlyReport.revenueDashboardOpen()[pri:2, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:12:49 IST" name="getResult" finished-at="2024-02-01T14:12:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectPosHourlyReportPage status=SUCCESS method=PosHourlyReport.redirectPosHourlyReportPage()[pri:3, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectSite()[pri:4, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:12:49 IST" name="selectSite" finished-at="2024-02-01T14:12:56 IST" duration-ms="6693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectSite -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:12:56 IST" name="getResult" finished-at="2024-02-01T14:12:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectSite status=SUCCESS method=PosHourlyReport.selectSite()[pri:4, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectPOSNumber()[pri:5, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:12:56 IST" name="selectPOSNumber" finished-at="2024-02-01T14:13:03 IST" duration-ms="6602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPOSNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:03 IST" name="getResult" finished-at="2024-02-01T14:13:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectPOSNumber status=SUCCESS method=PosHourlyReport.selectPOSNumber()[pri:5, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="hourlyReportVehicleType()[pri:6, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:03 IST" name="hourlyReportVehicleType" finished-at="2024-02-01T14:13:05 IST" duration-ms="2011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hourlyReportVehicleType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:05 IST" name="getResult" finished-at="2024-02-01T14:13:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hourlyReportVehicleType status=SUCCESS method=PosHourlyReport.hourlyReportVehicleType()[pri:6, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectDateRange()[pri:7, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:05 IST" name="selectDateRange" finished-at="2024-02-01T14:13:10 IST" duration-ms="5236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectDateRange -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:10 IST" name="getResult" finished-at="2024-02-01T14:13:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectDateRange status=SUCCESS method=PosHourlyReport.selectDateRange()[pri:7, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectStartDate()[pri:8, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:10 IST" name="selectStartDate" finished-at="2024-02-01T14:13:15 IST" duration-ms="5009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:15 IST" name="getResult" finished-at="2024-02-01T14:13:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStartDate status=SUCCESS method=PosHourlyReport.selectStartDate()[pri:8, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectEndDate()[pri:9, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:15 IST" name="selectEndDate" finished-at="2024-02-01T14:13:21 IST" duration-ms="5712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectEndDate -->
        <test-method signature="selectStartHour()[pri:10, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:21 IST" name="selectStartHour" finished-at="2024-02-01T14:13:26 IST" duration-ms="5276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStartHour -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:21 IST" name="getResult" finished-at="2024-02-01T14:13:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectEndDate status=SUCCESS method=PosHourlyReport.selectEndDate()[pri:9, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:26 IST" name="getResult" finished-at="2024-02-01T14:13:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStartHour status=SUCCESS method=PosHourlyReport.selectStartHour()[pri:10, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectStartMinutes()[pri:11, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:26 IST" name="selectStartMinutes" finished-at="2024-02-01T14:13:31 IST" duration-ms="5283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStartMinutes -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:31 IST" name="getResult" finished-at="2024-02-01T14:13:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStartMinutes status=SUCCESS method=PosHourlyReport.selectStartMinutes()[pri:11, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectStartHourAM()[pri:12, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:31 IST" name="selectStartHourAM" finished-at="2024-02-01T14:13:33 IST" duration-ms="2289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStartHourAM -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:33 IST" name="getResult" finished-at="2024-02-01T14:13:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStartHourAM status=SUCCESS method=PosHourlyReport.selectStartHourAM()[pri:12, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectEndHour()[pri:13, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:33 IST" name="selectEndHour" finished-at="2024-02-01T14:13:35 IST" duration-ms="2003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectEndHour -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:35 IST" name="getResult" finished-at="2024-02-01T14:13:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectEndHour status=SUCCESS method=PosHourlyReport.selectEndHour()[pri:13, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectEndMinutes()[pri:14, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:35 IST" name="selectEndMinutes" finished-at="2024-02-01T14:13:37 IST" duration-ms="2008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectEndMinutes -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:37 IST" name="getResult" finished-at="2024-02-01T14:13:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectEndMinutes status=SUCCESS method=PosHourlyReport.selectEndMinutes()[pri:14, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectEndHourPM()[pri:15, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:37 IST" name="selectEndHourPM" finished-at="2024-02-01T14:13:39 IST" duration-ms="2010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectEndHourPM -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:39 IST" name="getResult" finished-at="2024-02-01T14:13:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectEndHourPM status=SUCCESS method=PosHourlyReport.selectEndHourPM()[pri:15, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickApplyDatesButton()[pri:16, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:39 IST" name="clickApplyDatesButton" finished-at="2024-02-01T14:13:42 IST" duration-ms="3007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickApplyDatesButton -->
        <test-method signature="submitHourlyReportTwoW()[pri:17, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:42 IST" name="submitHourlyReportTwoW" finished-at="2024-02-01T14:13:45 IST" duration-ms="2240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitHourlyReportTwoW -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:42 IST" name="getResult" finished-at="2024-02-01T14:13:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickApplyDatesButton status=SUCCESS method=PosHourlyReport.clickApplyDatesButton()[pri:16, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:45 IST" name="getResult" finished-at="2024-02-01T14:13:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitHourlyReportTwoW status=SUCCESS method=PosHourlyReport.submitHourlyReportTwoW()[pri:17, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downloadPosHourlyTwoWCSV()[pri:18, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:45 IST" name="downloadPosHourlyTwoWCSV" finished-at="2024-02-01T14:13:47 IST" duration-ms="2269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadPosHourlyTwoWCSV -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:47 IST" name="getResult" finished-at="2024-02-01T14:13:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadPosHourlyTwoWCSV status=SUCCESS method=PosHourlyReport.downloadPosHourlyTwoWCSV()[pri:18, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downloadPosHourlyTwoWPDF()[pri:19, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:47 IST" name="downloadPosHourlyTwoWPDF" finished-at="2024-02-01T14:13:49 IST" duration-ms="2037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadPosHourlyTwoWPDF -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:49 IST" name="getResult" finished-at="2024-02-01T14:13:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadPosHourlyTwoWPDF status=SUCCESS method=PosHourlyReport.downloadPosHourlyTwoWPDF()[pri:19, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchTwoWTimeRange()[pri:20, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:49 IST" name="searchTwoWTimeRange" finished-at="2024-02-01T14:13:56 IST" duration-ms="7067" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTwoWTimeRange -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:56 IST" name="getResult" finished-at="2024-02-01T14:13:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchTwoWTimeRange status=SUCCESS method=PosHourlyReport.searchTwoWTimeRange()[pri:20, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="hourlyReportCount()[pri:21, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:13:56 IST" name="hourlyReportCount" finished-at="2024-02-01T14:14:00 IST" duration-ms="4065" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hourlyReportCount -->
        <test-method signature="posHourlyReportTwoWTable()[pri:22, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:00 IST" name="posHourlyReportTwoWTable" finished-at="2024-02-01T14:14:00 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- posHourlyReportTwoWTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:00 IST" name="getResult" finished-at="2024-02-01T14:14:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hourlyReportCount status=SUCCESS method=PosHourlyReport.hourlyReportCount()[pri:21, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:00 IST" name="getResult" finished-at="2024-02-01T14:14:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=posHourlyReportTwoWTable status=SUCCESS method=PosHourlyReport.posHourlyReportTwoWTable()[pri:22, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateTwoWDateFormat()[pri:23, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:00 IST" name="validateTwoWDateFormat" finished-at="2024-02-01T14:14:00 IST" duration-ms="14" status="FAIL">
          <exception class="java.text.ParseException">
            <message>
              <![CDATA[Unparseable date: "No User data available"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.text.ParseException: Unparseable date: "No User data available"
at java.base/java.text.DateFormat.parse(DateFormat.java:399)
at com.selenium.PosHourlyReport.validateTwoWDateFormat(PosHourlyReport.java:513)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.text.ParseException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTwoWDateFormat -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:00 IST" name="getResult" finished-at="2024-02-01T14:14:00 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTwoWDateFormat status=FAILURE method=PosHourlyReport.validateTwoWDateFormat()[pri:23, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateAmountsTwoW()[pri:24, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:00 IST" name="validateAmountsTwoW" finished-at="2024-02-01T14:14:00 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAmountsTwoW -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:00 IST" name="getResult" finished-at="2024-02-01T14:14:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAmountsTwoW status=SUCCESS method=PosHourlyReport.validateAmountsTwoW()[pri:24, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="hourlyReportVehicleTypeFourW()[pri:25, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:00 IST" name="hourlyReportVehicleTypeFourW" finished-at="2024-02-01T14:14:02 IST" duration-ms="2041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hourlyReportVehicleTypeFourW -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:02 IST" name="getResult" finished-at="2024-02-01T14:14:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hourlyReportVehicleTypeFourW status=SUCCESS method=PosHourlyReport.hourlyReportVehicleTypeFourW()[pri:25, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="submitHourlyReportFourW()[pri:26, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:02 IST" name="submitHourlyReportFourW" finished-at="2024-02-01T14:14:04 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitHourlyReportFourW -->
        <test-method signature="downloadPosHourlyFourWCSV()[pri:27, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:04 IST" name="downloadPosHourlyFourWCSV" finished-at="2024-02-01T14:14:06 IST" duration-ms="2012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadPosHourlyFourWCSV -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:04 IST" name="getResult" finished-at="2024-02-01T14:14:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitHourlyReportFourW status=SUCCESS method=PosHourlyReport.submitHourlyReportFourW()[pri:26, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:06 IST" name="getResult" finished-at="2024-02-01T14:14:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadPosHourlyFourWCSV status=SUCCESS method=PosHourlyReport.downloadPosHourlyFourWCSV()[pri:27, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downloadPosHourlyFourWPDF()[pri:28, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:06 IST" name="downloadPosHourlyFourWPDF" finished-at="2024-02-01T14:14:08 IST" duration-ms="2030" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadPosHourlyFourWPDF -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:08 IST" name="getResult" finished-at="2024-02-01T14:14:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadPosHourlyFourWPDF status=SUCCESS method=PosHourlyReport.downloadPosHourlyFourWPDF()[pri:28, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchFourWTimeRange()[pri:29, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:08 IST" name="searchFourWTimeRange" finished-at="2024-02-01T14:14:15 IST" duration-ms="7037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchFourWTimeRange -->
        <test-method signature="posHourlyReportFourWTable()[pri:30, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:15 IST" name="posHourlyReportFourWTable" finished-at="2024-02-01T14:14:15 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- posHourlyReportFourWTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:15 IST" name="getResult" finished-at="2024-02-01T14:14:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchFourWTimeRange status=SUCCESS method=PosHourlyReport.searchFourWTimeRange()[pri:29, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateFourWDateFormat()[pri:31, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:15 IST" name="validateFourWDateFormat" finished-at="2024-02-01T14:14:15 IST" duration-ms="18" status="FAIL">
          <exception class="java.text.ParseException">
            <message>
              <![CDATA[Unparseable date: "No User data available"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.text.ParseException: Unparseable date: "No User data available"
at java.base/java.text.DateFormat.parse(DateFormat.java:399)
at com.selenium.PosHourlyReport.validateTwoWDateFormat(PosHourlyReport.java:513)
at com.selenium.PosHourlyReport.validateFourWDateFormat(PosHourlyReport.java:632)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.text.ParseException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFourWDateFormat -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:15 IST" name="getResult" finished-at="2024-02-01T14:14:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=posHourlyReportFourWTable status=SUCCESS method=PosHourlyReport.posHourlyReportFourWTable()[pri:30, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:15 IST" name="getResult" finished-at="2024-02-01T14:14:15 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFourWDateFormat status=FAILURE method=PosHourlyReport.validateFourWDateFormat()[pri:31, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateAmountsFourW()[pri:32, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:15 IST" name="validateAmountsFourW" finished-at="2024-02-01T14:14:15 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAmountsFourW -->
        <test-method signature="logout()[pri:33, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:15 IST" name="logout" finished-at="2024-02-01T14:14:20 IST" duration-ms="5006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:15 IST" name="getResult" finished-at="2024-02-01T14:14:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAmountsFourW status=SUCCESS method=PosHourlyReport.validateAmountsFourW()[pri:32, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:20 IST" name="getResult" finished-at="2024-02-01T14:14:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=PosHourlyReport.logout()[pri:33, instance:com.selenium.PosHourlyReport@69b2283a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.PosHourlyReport@69b2283a]" started-at="2024-02-01T14:14:20 IST" name="tearDown" finished-at="2024-02-01T14:14:21 IST" duration-ms="855" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.PosHourlyReport -->
    </test> <!-- PosHourlyReport -->
    <test started-at="2024-02-01T14:14:21 IST" name="MobileReports" finished-at="2024-02-01T14:18:02 IST" duration-ms="220722">
      <class name="com.selenium.MobileReports">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:21 IST" name="setUp" finished-at="2024-02-01T14:14:24 IST" duration-ms="2884" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:24 IST" name="login" finished-at="2024-02-01T14:14:30 IST" duration-ms="5537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:30 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:14:35 IST" duration-ms="5198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:30 IST" name="getResult" finished-at="2024-02-01T14:14:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=MobileReports.login()[pri:1, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:35 IST" name="getResult" finished-at="2024-02-01T14:14:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=MobileReports.revenueDashboardOpen()[pri:2, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="reportsAnalyticsPage()[pri:3, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:35 IST" name="reportsAnalyticsPage" finished-at="2024-02-01T14:14:37 IST" duration-ms="2034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportsAnalyticsPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:37 IST" name="getResult" finished-at="2024-02-01T14:14:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=reportsAnalyticsPage status=SUCCESS method=MobileReports.reportsAnalyticsPage()[pri:3, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileReportsPage()[pri:4, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:37 IST" name="mobileReportsPage" finished-at="2024-02-01T14:14:39 IST" duration-ms="2010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileReportsPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:39 IST" name="getResult" finished-at="2024-02-01T14:14:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileReportsPage status=SUCCESS method=MobileReports.mobileReportsPage()[pri:4, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileReportsOneDay()[pri:5, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:39 IST" name="mobileReportsOneDay" finished-at="2024-02-01T14:14:40 IST" duration-ms="1217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileReportsOneDay -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:40 IST" name="getResult" finished-at="2024-02-01T14:14:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileReportsOneDay status=SUCCESS method=MobileReports.mobileReportsOneDay()[pri:5, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectAndroid()[pri:6, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:40 IST" name="selectAndroid" finished-at="2024-02-01T14:14:42 IST" duration-ms="2004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAndroid -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:42 IST" name="getResult" finished-at="2024-02-01T14:14:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAndroid status=SUCCESS method=MobileReports.selectAndroid()[pri:6, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectOneDayVehicleTypeAll()[pri:7, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:42 IST" name="selectOneDayVehicleTypeAll" finished-at="2024-02-01T14:14:47 IST" duration-ms="5077" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOneDayVehicleTypeAll -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:47 IST" name="getResult" finished-at="2024-02-01T14:14:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectOneDayVehicleTypeAll status=SUCCESS method=MobileReports.selectOneDayVehicleTypeAll()[pri:7, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayRSubmitButton()[pri:8, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:47 IST" name="dayRSubmitButton" finished-at="2024-02-01T14:14:47 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayRSubmitButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:47 IST" name="getResult" finished-at="2024-02-01T14:14:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayRSubmitButton status=SUCCESS method=MobileReports.dayRSubmitButton()[pri:8, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileDayRViewDetails()[pri:9, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:47 IST" name="mobileDayRViewDetails" finished-at="2024-02-01T14:14:47 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileDayRViewDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:47 IST" name="getResult" finished-at="2024-02-01T14:14:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileDayRViewDetails status=SUCCESS method=MobileReports.mobileDayRViewDetails()[pri:9, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayRPopUPClose()[pri:10, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:47 IST" name="dayRPopUPClose" finished-at="2024-02-01T14:14:49 IST" duration-ms="2018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayRPopUPClose -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:49 IST" name="getResult" finished-at="2024-02-01T14:14:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayRPopUPClose status=SUCCESS method=MobileReports.dayRPopUPClose()[pri:10, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getDayMobileRevenue()[pri:11, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:49 IST" name="getDayMobileRevenue" finished-at="2024-02-01T14:14:49 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDayMobileRevenue -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:49 IST" name="getResult" finished-at="2024-02-01T14:14:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getDayMobileRevenue status=SUCCESS method=MobileReports.getDayMobileRevenue()[pri:11, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectVehicleTypeTwo()[pri:12, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:49 IST" name="selectVehicleTypeTwo" finished-at="2024-02-01T14:14:54 IST" duration-ms="5057" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectVehicleTypeTwo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:54 IST" name="getResult" finished-at="2024-02-01T14:14:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectVehicleTypeTwo status=SUCCESS method=MobileReports.selectVehicleTypeTwo()[pri:12, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayRSubmitButtonTwo()[pri:13, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:54 IST" name="dayRSubmitButtonTwo" finished-at="2024-02-01T14:14:54 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayRSubmitButtonTwo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:54 IST" name="getResult" finished-at="2024-02-01T14:14:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayRSubmitButtonTwo status=SUCCESS method=MobileReports.dayRSubmitButtonTwo()[pri:13, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayRevenueViewDetailsTWO()[pri:14, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:54 IST" name="dayRevenueViewDetailsTWO" finished-at="2024-02-01T14:14:54 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayRevenueViewDetailsTWO -->
        <test-method signature="dayRPopUPCloseTWO()[pri:15, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:54 IST" name="dayRPopUPCloseTWO" finished-at="2024-02-01T14:14:56 IST" duration-ms="2016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayRPopUPCloseTWO -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:54 IST" name="getResult" finished-at="2024-02-01T14:14:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayRevenueViewDetailsTWO status=SUCCESS method=MobileReports.dayRevenueViewDetailsTWO()[pri:14, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:56 IST" name="getResult" finished-at="2024-02-01T14:14:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayRPopUPCloseTWO status=SUCCESS method=MobileReports.dayRPopUPCloseTWO()[pri:15, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getDayRevenueTWO()[pri:16, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:56 IST" name="getDayRevenueTWO" finished-at="2024-02-01T14:14:56 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDayRevenueTWO -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:56 IST" name="getResult" finished-at="2024-02-01T14:14:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getDayRevenueTWO status=SUCCESS method=MobileReports.getDayRevenueTWO()[pri:16, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectVehicleTypeFOUR()[pri:17, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:14:56 IST" name="selectVehicleTypeFOUR" finished-at="2024-02-01T14:15:01 IST" duration-ms="5037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectVehicleTypeFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:01 IST" name="getResult" finished-at="2024-02-01T14:15:01 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectVehicleTypeFOUR status=SUCCESS method=MobileReports.selectVehicleTypeFOUR()[pri:17, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayRSubmitButtonFOUR()[pri:18, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:01 IST" name="dayRSubmitButtonFOUR" finished-at="2024-02-01T14:15:01 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayRSubmitButtonFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:01 IST" name="getResult" finished-at="2024-02-01T14:15:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayRSubmitButtonFOUR status=SUCCESS method=MobileReports.dayRSubmitButtonFOUR()[pri:18, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayRViewDetailsFOUR()[pri:19, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:01 IST" name="dayRViewDetailsFOUR" finished-at="2024-02-01T14:15:01 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayRViewDetailsFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:01 IST" name="getResult" finished-at="2024-02-01T14:15:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayRViewDetailsFOUR status=SUCCESS method=MobileReports.dayRViewDetailsFOUR()[pri:19, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayRevenuePopUPCloseFOUR()[pri:20, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:01 IST" name="dayRevenuePopUPCloseFOUR" finished-at="2024-02-01T14:15:03 IST" duration-ms="2017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayRevenuePopUPCloseFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:03 IST" name="getResult" finished-at="2024-02-01T14:15:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayRevenuePopUPCloseFOUR status=SUCCESS method=MobileReports.dayRevenuePopUPCloseFOUR()[pri:20, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getDayRevenueFOUR()[pri:21, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:03 IST" name="getDayRevenueFOUR" finished-at="2024-02-01T14:15:03 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDayRevenueFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:03 IST" name="getResult" finished-at="2024-02-01T14:15:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getDayRevenueFOUR status=SUCCESS method=MobileReports.getDayRevenueFOUR()[pri:21, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectIOS()[pri:22, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:03 IST" name="selectIOS" finished-at="2024-02-01T14:15:05 IST" duration-ms="2004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectIOS -->
        <test-method signature="selectIOSAll()[pri:23, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:05 IST" name="selectIOSAll" finished-at="2024-02-01T14:15:10 IST" duration-ms="5055" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectIOSAll -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:05 IST" name="getResult" finished-at="2024-02-01T14:15:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectIOS status=SUCCESS method=MobileReports.selectIOS()[pri:22, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:10 IST" name="getResult" finished-at="2024-02-01T14:15:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectIOSAll status=SUCCESS method=MobileReports.selectIOSAll()[pri:23, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayRSubmitButtonIOS()[pri:24, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:10 IST" name="dayRSubmitButtonIOS" finished-at="2024-02-01T14:15:10 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayRSubmitButtonIOS -->
        <test-method signature="dayRViewDetailsIOS()[pri:25, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:10 IST" name="dayRViewDetailsIOS" finished-at="2024-02-01T14:15:10 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayRViewDetailsIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:10 IST" name="getResult" finished-at="2024-02-01T14:15:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayRSubmitButtonIOS status=SUCCESS method=MobileReports.dayRSubmitButtonIOS()[pri:24, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayRevenuePopUPCloseIOS()[pri:26, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:10 IST" name="dayRevenuePopUPCloseIOS" finished-at="2024-02-01T14:15:12 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayRevenuePopUPCloseIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:10 IST" name="getResult" finished-at="2024-02-01T14:15:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayRViewDetailsIOS status=SUCCESS method=MobileReports.dayRViewDetailsIOS()[pri:25, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getDayMobileRevenueIOS()[pri:27, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:12 IST" name="getDayMobileRevenueIOS" finished-at="2024-02-01T14:15:12 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDayMobileRevenueIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:12 IST" name="getResult" finished-at="2024-02-01T14:15:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayRevenuePopUPCloseIOS status=SUCCESS method=MobileReports.dayRevenuePopUPCloseIOS()[pri:26, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:12 IST" name="getResult" finished-at="2024-02-01T14:15:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getDayMobileRevenueIOS status=SUCCESS method=MobileReports.getDayMobileRevenueIOS()[pri:27, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectOneDayTypeTwoIOS()[pri:28, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:12 IST" name="selectOneDayTypeTwoIOS" finished-at="2024-02-01T14:15:18 IST" duration-ms="5061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOneDayTypeTwoIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:18 IST" name="getResult" finished-at="2024-02-01T14:15:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectOneDayTypeTwoIOS status=SUCCESS method=MobileReports.selectOneDayTypeTwoIOS()[pri:28, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayRSubmitButtonTwoIOS()[pri:29, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:18 IST" name="dayRSubmitButtonTwoIOS" finished-at="2024-02-01T14:15:18 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayRSubmitButtonTwoIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:18 IST" name="getResult" finished-at="2024-02-01T14:15:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayRSubmitButtonTwoIOS status=SUCCESS method=MobileReports.dayRSubmitButtonTwoIOS()[pri:29, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayRViewDetailsTWOIOS()[pri:30, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:18 IST" name="dayRViewDetailsTWOIOS" finished-at="2024-02-01T14:15:18 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayRViewDetailsTWOIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:18 IST" name="getResult" finished-at="2024-02-01T14:15:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayRViewDetailsTWOIOS status=SUCCESS method=MobileReports.dayRViewDetailsTWOIOS()[pri:30, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayRPopUPCloseTWOIOS()[pri:31, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:18 IST" name="dayRPopUPCloseTWOIOS" finished-at="2024-02-01T14:15:20 IST" duration-ms="2019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayRPopUPCloseTWOIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:20 IST" name="getResult" finished-at="2024-02-01T14:15:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayRPopUPCloseTWOIOS status=SUCCESS method=MobileReports.dayRPopUPCloseTWOIOS()[pri:31, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getDayRevenueTWOIOS()[pri:32, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:20 IST" name="getDayRevenueTWOIOS" finished-at="2024-02-01T14:15:20 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDayRevenueTWOIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:20 IST" name="getResult" finished-at="2024-02-01T14:15:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getDayRevenueTWOIOS status=SUCCESS method=MobileReports.getDayRevenueTWOIOS()[pri:32, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectOneDayTypeFOURIOS()[pri:33, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:20 IST" name="selectOneDayTypeFOURIOS" finished-at="2024-02-01T14:15:25 IST" duration-ms="5082" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOneDayTypeFOURIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:25 IST" name="getResult" finished-at="2024-02-01T14:15:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectOneDayTypeFOURIOS status=SUCCESS method=MobileReports.selectOneDayTypeFOURIOS()[pri:33, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayRSubmitButtonFOURIOS()[pri:34, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:25 IST" name="dayRSubmitButtonFOURIOS" finished-at="2024-02-01T14:15:25 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayRSubmitButtonFOURIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:25 IST" name="getResult" finished-at="2024-02-01T14:15:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayRSubmitButtonFOURIOS status=SUCCESS method=MobileReports.dayRSubmitButtonFOURIOS()[pri:34, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayViewDetailsFOURIOS()[pri:35, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:25 IST" name="dayViewDetailsFOURIOS" finished-at="2024-02-01T14:15:25 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayViewDetailsFOURIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:25 IST" name="getResult" finished-at="2024-02-01T14:15:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayViewDetailsFOURIOS status=SUCCESS method=MobileReports.dayViewDetailsFOURIOS()[pri:35, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayRPopUPCloseFOURIOS()[pri:36, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:25 IST" name="dayRPopUPCloseFOURIOS" finished-at="2024-02-01T14:15:27 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayRPopUPCloseFOURIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:27 IST" name="getResult" finished-at="2024-02-01T14:15:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayRPopUPCloseFOURIOS status=SUCCESS method=MobileReports.dayRPopUPCloseFOURIOS()[pri:36, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getDayRevenueFOURIOS()[pri:37, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:27 IST" name="getDayRevenueFOURIOS" finished-at="2024-02-01T14:15:27 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDayRevenueFOURIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:27 IST" name="getResult" finished-at="2024-02-01T14:15:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getDayRevenueFOURIOS status=SUCCESS method=MobileReports.getDayRevenueFOURIOS()[pri:37, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileReportsWEEK()[pri:38, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:27 IST" name="mobileReportsWEEK" finished-at="2024-02-01T14:15:28 IST" duration-ms="1237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileReportsWEEK -->
        <test-method signature="selectAndroidWEEK()[pri:39, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:28 IST" name="selectAndroidWEEK" finished-at="2024-02-01T14:15:30 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAndroidWEEK -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:28 IST" name="getResult" finished-at="2024-02-01T14:15:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileReportsWEEK status=SUCCESS method=MobileReports.mobileReportsWEEK()[pri:38, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:30 IST" name="getResult" finished-at="2024-02-01T14:15:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAndroidWEEK status=SUCCESS method=MobileReports.selectAndroidWEEK()[pri:39, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectAllWEEK()[pri:40, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:30 IST" name="selectAllWEEK" finished-at="2024-02-01T14:15:35 IST" duration-ms="5060" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAllWEEK -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:35 IST" name="getResult" finished-at="2024-02-01T14:15:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAllWEEK status=SUCCESS method=MobileReports.selectAllWEEK()[pri:40, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="weekRSubmitButton()[pri:41, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:35 IST" name="weekRSubmitButton" finished-at="2024-02-01T14:15:35 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weekRSubmitButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:35 IST" name="getResult" finished-at="2024-02-01T14:15:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weekRSubmitButton status=SUCCESS method=MobileReports.weekRSubmitButton()[pri:41, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="weekRViewDetails()[pri:42, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:35 IST" name="weekRViewDetails" finished-at="2024-02-01T14:15:35 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weekRViewDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:35 IST" name="getResult" finished-at="2024-02-01T14:15:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weekRViewDetails status=SUCCESS method=MobileReports.weekRViewDetails()[pri:42, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="weekRPopUPClose()[pri:43, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:35 IST" name="weekRPopUPClose" finished-at="2024-02-01T14:15:37 IST" duration-ms="2026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weekRPopUPClose -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:37 IST" name="getResult" finished-at="2024-02-01T14:15:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weekRPopUPClose status=SUCCESS method=MobileReports.weekRPopUPClose()[pri:43, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getWEEKMobileRevenueALL()[pri:44, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:37 IST" name="getWEEKMobileRevenueALL" finished-at="2024-02-01T14:15:37 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWEEKMobileRevenueALL -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:37 IST" name="getResult" finished-at="2024-02-01T14:15:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getWEEKMobileRevenueALL status=SUCCESS method=MobileReports.getWEEKMobileRevenueALL()[pri:44, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="weeklyAndroidTypeTwo()[pri:45, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:37 IST" name="weeklyAndroidTypeTwo" finished-at="2024-02-01T14:15:42 IST" duration-ms="5075" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weeklyAndroidTypeTwo -->
        <test-method signature="weekAndroidSubmitButtonTwo()[pri:46, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:42 IST" name="weekAndroidSubmitButtonTwo" finished-at="2024-02-01T14:15:42 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weekAndroidSubmitButtonTwo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:42 IST" name="getResult" finished-at="2024-02-01T14:15:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weeklyAndroidTypeTwo status=SUCCESS method=MobileReports.weeklyAndroidTypeTwo()[pri:45, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="weeklyAndroidViewDetailsTWO()[pri:47, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:42 IST" name="weeklyAndroidViewDetailsTWO" finished-at="2024-02-01T14:15:42 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weeklyAndroidViewDetailsTWO -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:42 IST" name="getResult" finished-at="2024-02-01T14:15:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weekAndroidSubmitButtonTwo status=SUCCESS method=MobileReports.weekAndroidSubmitButtonTwo()[pri:46, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:42 IST" name="getResult" finished-at="2024-02-01T14:15:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weeklyAndroidViewDetailsTWO status=SUCCESS method=MobileReports.weeklyAndroidViewDetailsTWO()[pri:47, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="weekRPopUPCloseTWO()[pri:48, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:42 IST" name="weekRPopUPCloseTWO" finished-at="2024-02-01T14:15:44 IST" duration-ms="2023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weekRPopUPCloseTWO -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:44 IST" name="getResult" finished-at="2024-02-01T14:15:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weekRPopUPCloseTWO status=SUCCESS method=MobileReports.weekRPopUPCloseTWO()[pri:48, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getWeekRevenueTWO()[pri:49, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:44 IST" name="getWeekRevenueTWO" finished-at="2024-02-01T14:15:44 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWeekRevenueTWO -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:44 IST" name="getResult" finished-at="2024-02-01T14:15:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getWeekRevenueTWO status=SUCCESS method=MobileReports.getWeekRevenueTWO()[pri:49, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="weeklyAndroidTypeFour()[pri:50, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:44 IST" name="weeklyAndroidTypeFour" finished-at="2024-02-01T14:15:49 IST" duration-ms="5071" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weeklyAndroidTypeFour -->
        <test-method signature="weeklyAndroidSubmitButtonFOUR()[pri:51, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:49 IST" name="weeklyAndroidSubmitButtonFOUR" finished-at="2024-02-01T14:15:49 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weeklyAndroidSubmitButtonFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:49 IST" name="getResult" finished-at="2024-02-01T14:15:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weeklyAndroidTypeFour status=SUCCESS method=MobileReports.weeklyAndroidTypeFour()[pri:50, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:49 IST" name="getResult" finished-at="2024-02-01T14:15:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weeklyAndroidSubmitButtonFOUR status=SUCCESS method=MobileReports.weeklyAndroidSubmitButtonFOUR()[pri:51, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="weeklyAndroidViewDetailsFOUR()[pri:52, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:49 IST" name="weeklyAndroidViewDetailsFOUR" finished-at="2024-02-01T14:15:49 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weeklyAndroidViewDetailsFOUR -->
        <test-method signature="weeklyAndroidPopUPCloseFOUR()[pri:53, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:49 IST" name="weeklyAndroidPopUPCloseFOUR" finished-at="2024-02-01T14:15:51 IST" duration-ms="2008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weeklyAndroidPopUPCloseFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:49 IST" name="getResult" finished-at="2024-02-01T14:15:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weeklyAndroidViewDetailsFOUR status=SUCCESS method=MobileReports.weeklyAndroidViewDetailsFOUR()[pri:52, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getWeekRevenueFOUR()[pri:54, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:51 IST" name="getWeekRevenueFOUR" finished-at="2024-02-01T14:15:51 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWeekRevenueFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:51 IST" name="getResult" finished-at="2024-02-01T14:15:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weeklyAndroidPopUPCloseFOUR status=SUCCESS method=MobileReports.weeklyAndroidPopUPCloseFOUR()[pri:53, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:51 IST" name="getResult" finished-at="2024-02-01T14:15:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getWeekRevenueFOUR status=SUCCESS method=MobileReports.getWeekRevenueFOUR()[pri:54, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectIOSWEEK()[pri:55, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:51 IST" name="selectIOSWEEK" finished-at="2024-02-01T14:15:53 IST" duration-ms="2007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectIOSWEEK -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:53 IST" name="getResult" finished-at="2024-02-01T14:15:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectIOSWEEK status=SUCCESS method=MobileReports.selectIOSWEEK()[pri:55, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="weekyIOSTypeAll()[pri:56, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:53 IST" name="weekyIOSTypeAll" finished-at="2024-02-01T14:15:58 IST" duration-ms="5068" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weekyIOSTypeAll -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:58 IST" name="getResult" finished-at="2024-02-01T14:15:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weekyIOSTypeAll status=SUCCESS method=MobileReports.weekyIOSTypeAll()[pri:56, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="weeklyIOSSubmitButtonAll()[pri:57, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:58 IST" name="weeklyIOSSubmitButtonAll" finished-at="2024-02-01T14:15:58 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weeklyIOSSubmitButtonAll -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:58 IST" name="getResult" finished-at="2024-02-01T14:15:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weeklyIOSSubmitButtonAll status=SUCCESS method=MobileReports.weeklyIOSSubmitButtonAll()[pri:57, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="weeklyIOSViewDetailsAll()[pri:58, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:58 IST" name="weeklyIOSViewDetailsAll" finished-at="2024-02-01T14:15:58 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weeklyIOSViewDetailsAll -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:58 IST" name="getResult" finished-at="2024-02-01T14:15:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weeklyIOSViewDetailsAll status=SUCCESS method=MobileReports.weeklyIOSViewDetailsAll()[pri:58, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="weeklyIOSPopUPCloseAll()[pri:59, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:15:58 IST" name="weeklyIOSPopUPCloseAll" finished-at="2024-02-01T14:16:00 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weeklyIOSPopUPCloseAll -->
        <test-method signature="getWeekMobileRevenueIOS()[pri:60, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:00 IST" name="getWeekMobileRevenueIOS" finished-at="2024-02-01T14:16:00 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWeekMobileRevenueIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:00 IST" name="getResult" finished-at="2024-02-01T14:16:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weeklyIOSPopUPCloseAll status=SUCCESS method=MobileReports.weeklyIOSPopUPCloseAll()[pri:59, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectWEEKTypeTwoIOS()[pri:61, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:00 IST" name="selectWEEKTypeTwoIOS" finished-at="2024-02-01T14:16:05 IST" duration-ms="5042" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectWEEKTypeTwoIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:00 IST" name="getResult" finished-at="2024-02-01T14:16:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getWeekMobileRevenueIOS status=SUCCESS method=MobileReports.getWeekMobileRevenueIOS()[pri:60, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:05 IST" name="getResult" finished-at="2024-02-01T14:16:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectWEEKTypeTwoIOS status=SUCCESS method=MobileReports.selectWEEKTypeTwoIOS()[pri:61, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="weeklyIOSSubmitButtonTwo()[pri:62, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:05 IST" name="weeklyIOSSubmitButtonTwo" finished-at="2024-02-01T14:16:05 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weeklyIOSSubmitButtonTwo -->
        <test-method signature="weeklyIOSViewDetailsTwo()[pri:63, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:05 IST" name="weeklyIOSViewDetailsTwo" finished-at="2024-02-01T14:16:05 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weeklyIOSViewDetailsTwo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:05 IST" name="getResult" finished-at="2024-02-01T14:16:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weeklyIOSSubmitButtonTwo status=SUCCESS method=MobileReports.weeklyIOSSubmitButtonTwo()[pri:62, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="weeklyIOSPopUPCloseTwo()[pri:64, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:05 IST" name="weeklyIOSPopUPCloseTwo" finished-at="2024-02-01T14:16:07 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weeklyIOSPopUPCloseTwo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:05 IST" name="getResult" finished-at="2024-02-01T14:16:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weeklyIOSViewDetailsTwo status=SUCCESS method=MobileReports.weeklyIOSViewDetailsTwo()[pri:63, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:07 IST" name="getResult" finished-at="2024-02-01T14:16:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weeklyIOSPopUPCloseTwo status=SUCCESS method=MobileReports.weeklyIOSPopUPCloseTwo()[pri:64, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getWeekRevenueTwoIOS()[pri:65, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:07 IST" name="getWeekRevenueTwoIOS" finished-at="2024-02-01T14:16:07 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWeekRevenueTwoIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:07 IST" name="getResult" finished-at="2024-02-01T14:16:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getWeekRevenueTwoIOS status=SUCCESS method=MobileReports.getWeekRevenueTwoIOS()[pri:65, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectWEEKTypeFOURIOS()[pri:66, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:07 IST" name="selectWEEKTypeFOURIOS" finished-at="2024-02-01T14:16:13 IST" duration-ms="5050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectWEEKTypeFOURIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:13 IST" name="getResult" finished-at="2024-02-01T14:16:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectWEEKTypeFOURIOS status=SUCCESS method=MobileReports.selectWEEKTypeFOURIOS()[pri:66, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="weeklyIOSSubmitButtonFOUR()[pri:67, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:13 IST" name="weeklyIOSSubmitButtonFOUR" finished-at="2024-02-01T14:16:13 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weeklyIOSSubmitButtonFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:13 IST" name="getResult" finished-at="2024-02-01T14:16:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weeklyIOSSubmitButtonFOUR status=SUCCESS method=MobileReports.weeklyIOSSubmitButtonFOUR()[pri:67, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="weeklyIOSViewDetailsFOUR()[pri:68, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:13 IST" name="weeklyIOSViewDetailsFOUR" finished-at="2024-02-01T14:16:13 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weeklyIOSViewDetailsFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:13 IST" name="getResult" finished-at="2024-02-01T14:16:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weeklyIOSViewDetailsFOUR status=SUCCESS method=MobileReports.weeklyIOSViewDetailsFOUR()[pri:68, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="weeklyIOSPopUPCloseFOUR()[pri:69, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:13 IST" name="weeklyIOSPopUPCloseFOUR" finished-at="2024-02-01T14:16:15 IST" duration-ms="2016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- weeklyIOSPopUPCloseFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:15 IST" name="getResult" finished-at="2024-02-01T14:16:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=weeklyIOSPopUPCloseFOUR status=SUCCESS method=MobileReports.weeklyIOSPopUPCloseFOUR()[pri:69, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getWeekRevenueFOURIOS()[pri:70, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:15 IST" name="getWeekRevenueFOURIOS" finished-at="2024-02-01T14:16:15 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWeekRevenueFOURIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:15 IST" name="getResult" finished-at="2024-02-01T14:16:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getWeekRevenueFOURIOS status=SUCCESS method=MobileReports.getWeekRevenueFOURIOS()[pri:70, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileReportsMonth()[pri:71, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:15 IST" name="mobileReportsMonth" finished-at="2024-02-01T14:16:16 IST" duration-ms="1230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileReportsMonth -->
        <test-method signature="selectMonthAndroid()[pri:72, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:16 IST" name="selectMonthAndroid" finished-at="2024-02-01T14:16:18 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMonthAndroid -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:16 IST" name="getResult" finished-at="2024-02-01T14:16:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileReportsMonth status=SUCCESS method=MobileReports.mobileReportsMonth()[pri:71, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:18 IST" name="getResult" finished-at="2024-02-01T14:16:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMonthAndroid status=SUCCESS method=MobileReports.selectMonthAndroid()[pri:72, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monthlyAndroidTypeAll()[pri:73, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:18 IST" name="monthlyAndroidTypeAll" finished-at="2024-02-01T14:16:23 IST" duration-ms="5059" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyAndroidTypeAll -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:23 IST" name="getResult" finished-at="2024-02-01T14:16:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyAndroidTypeAll status=SUCCESS method=MobileReports.monthlyAndroidTypeAll()[pri:73, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monthlyAndroidSubmitButtonAll()[pri:74, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:23 IST" name="monthlyAndroidSubmitButtonAll" finished-at="2024-02-01T14:16:23 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyAndroidSubmitButtonAll -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:23 IST" name="getResult" finished-at="2024-02-01T14:16:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyAndroidSubmitButtonAll status=SUCCESS method=MobileReports.monthlyAndroidSubmitButtonAll()[pri:74, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monthlyAndroidViewDetailsAll()[pri:75, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:23 IST" name="monthlyAndroidViewDetailsAll" finished-at="2024-02-01T14:16:23 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyAndroidViewDetailsAll -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:23 IST" name="getResult" finished-at="2024-02-01T14:16:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyAndroidViewDetailsAll status=SUCCESS method=MobileReports.monthlyAndroidViewDetailsAll()[pri:75, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monthlyAndroidPopUPCloseAll()[pri:76, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:23 IST" name="monthlyAndroidPopUPCloseAll" finished-at="2024-02-01T14:16:25 IST" duration-ms="2015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyAndroidPopUPCloseAll -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:25 IST" name="getResult" finished-at="2024-02-01T14:16:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyAndroidPopUPCloseAll status=SUCCESS method=MobileReports.monthlyAndroidPopUPCloseAll()[pri:76, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getMonthMobileRevenue()[pri:77, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:25 IST" name="getMonthMobileRevenue" finished-at="2024-02-01T14:16:25 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMonthMobileRevenue -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:25 IST" name="getResult" finished-at="2024-02-01T14:16:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getMonthMobileRevenue status=SUCCESS method=MobileReports.getMonthMobileRevenue()[pri:77, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monthlyAndroidTypeTwo()[pri:78, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:25 IST" name="monthlyAndroidTypeTwo" finished-at="2024-02-01T14:16:30 IST" duration-ms="5064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyAndroidTypeTwo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:30 IST" name="getResult" finished-at="2024-02-01T14:16:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyAndroidTypeTwo status=SUCCESS method=MobileReports.monthlyAndroidTypeTwo()[pri:78, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monthlyAndroidSubmitButtonTwo()[pri:79, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:30 IST" name="monthlyAndroidSubmitButtonTwo" finished-at="2024-02-01T14:16:30 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyAndroidSubmitButtonTwo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:30 IST" name="getResult" finished-at="2024-02-01T14:16:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyAndroidSubmitButtonTwo status=SUCCESS method=MobileReports.monthlyAndroidSubmitButtonTwo()[pri:79, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monthlyAndroidViewDetailsTwo()[pri:80, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:30 IST" name="monthlyAndroidViewDetailsTwo" finished-at="2024-02-01T14:16:30 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyAndroidViewDetailsTwo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:30 IST" name="getResult" finished-at="2024-02-01T14:16:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyAndroidViewDetailsTwo status=SUCCESS method=MobileReports.monthlyAndroidViewDetailsTwo()[pri:80, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monthlyAndroidPopUPCloseTwo()[pri:81, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:30 IST" name="monthlyAndroidPopUPCloseTwo" finished-at="2024-02-01T14:16:32 IST" duration-ms="2015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyAndroidPopUPCloseTwo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:32 IST" name="getResult" finished-at="2024-02-01T14:16:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyAndroidPopUPCloseTwo status=SUCCESS method=MobileReports.monthlyAndroidPopUPCloseTwo()[pri:81, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getMonthRevenueTWO()[pri:82, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:32 IST" name="getMonthRevenueTWO" finished-at="2024-02-01T14:16:32 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMonthRevenueTWO -->
        <test-method signature="selectMonthTypeFOUR()[pri:83, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:32 IST" name="selectMonthTypeFOUR" finished-at="2024-02-01T14:16:37 IST" duration-ms="5061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMonthTypeFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:32 IST" name="getResult" finished-at="2024-02-01T14:16:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getMonthRevenueTWO status=SUCCESS method=MobileReports.getMonthRevenueTWO()[pri:82, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:37 IST" name="getResult" finished-at="2024-02-01T14:16:37 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMonthTypeFOUR status=SUCCESS method=MobileReports.selectMonthTypeFOUR()[pri:83, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monthlyAndroidSubmitButtonFOUR()[pri:84, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:37 IST" name="monthlyAndroidSubmitButtonFOUR" finished-at="2024-02-01T14:16:37 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyAndroidSubmitButtonFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:37 IST" name="getResult" finished-at="2024-02-01T14:16:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyAndroidSubmitButtonFOUR status=SUCCESS method=MobileReports.monthlyAndroidSubmitButtonFOUR()[pri:84, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monthlyAndroidViewDetailsFOUR()[pri:85, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:37 IST" name="monthlyAndroidViewDetailsFOUR" finished-at="2024-02-01T14:16:37 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyAndroidViewDetailsFOUR -->
        <test-method signature="monthlyAndroidPopUPCloseFOUR()[pri:86, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:37 IST" name="monthlyAndroidPopUPCloseFOUR" finished-at="2024-02-01T14:16:39 IST" duration-ms="2016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyAndroidPopUPCloseFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:37 IST" name="getResult" finished-at="2024-02-01T14:16:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyAndroidViewDetailsFOUR status=SUCCESS method=MobileReports.monthlyAndroidViewDetailsFOUR()[pri:85, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:39 IST" name="getResult" finished-at="2024-02-01T14:16:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyAndroidPopUPCloseFOUR status=SUCCESS method=MobileReports.monthlyAndroidPopUPCloseFOUR()[pri:86, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getMonthRevenueFOUR()[pri:87, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:39 IST" name="getMonthRevenueFOUR" finished-at="2024-02-01T14:16:39 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMonthRevenueFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:39 IST" name="getResult" finished-at="2024-02-01T14:16:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getMonthRevenueFOUR status=SUCCESS method=MobileReports.getMonthRevenueFOUR()[pri:87, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectMonthIOS()[pri:88, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:39 IST" name="selectMonthIOS" finished-at="2024-02-01T14:16:41 IST" duration-ms="2005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMonthIOS -->
        <test-method signature="monthlyIOSTypeAll()[pri:89, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:41 IST" name="monthlyIOSTypeAll" finished-at="2024-02-01T14:16:46 IST" duration-ms="5070" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyIOSTypeAll -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:41 IST" name="getResult" finished-at="2024-02-01T14:16:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMonthIOS status=SUCCESS method=MobileReports.selectMonthIOS()[pri:88, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:46 IST" name="getResult" finished-at="2024-02-01T14:16:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyIOSTypeAll status=SUCCESS method=MobileReports.monthlyIOSTypeAll()[pri:89, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monthlyIOSSubmitButtonAll()[pri:90, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:46 IST" name="monthlyIOSSubmitButtonAll" finished-at="2024-02-01T14:16:46 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyIOSSubmitButtonAll -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:46 IST" name="getResult" finished-at="2024-02-01T14:16:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyIOSSubmitButtonAll status=SUCCESS method=MobileReports.monthlyIOSSubmitButtonAll()[pri:90, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monthlyIOSViewDetailsAll()[pri:91, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:46 IST" name="monthlyIOSViewDetailsAll" finished-at="2024-02-01T14:16:46 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyIOSViewDetailsAll -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:46 IST" name="getResult" finished-at="2024-02-01T14:16:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyIOSViewDetailsAll status=SUCCESS method=MobileReports.monthlyIOSViewDetailsAll()[pri:91, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monthlyIOSPopUPCloseAll()[pri:92, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:46 IST" name="monthlyIOSPopUPCloseAll" finished-at="2024-02-01T14:16:48 IST" duration-ms="2023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyIOSPopUPCloseAll -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:48 IST" name="getResult" finished-at="2024-02-01T14:16:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyIOSPopUPCloseAll status=SUCCESS method=MobileReports.monthlyIOSPopUPCloseAll()[pri:92, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getMonthMobileRevenueIOS()[pri:93, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:48 IST" name="getMonthMobileRevenueIOS" finished-at="2024-02-01T14:16:48 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMonthMobileRevenueIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:48 IST" name="getResult" finished-at="2024-02-01T14:16:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getMonthMobileRevenueIOS status=SUCCESS method=MobileReports.getMonthMobileRevenueIOS()[pri:93, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectMonthTypeTwoIOS()[pri:94, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:48 IST" name="selectMonthTypeTwoIOS" finished-at="2024-02-01T14:16:53 IST" duration-ms="5066" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMonthTypeTwoIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:53 IST" name="getResult" finished-at="2024-02-01T14:16:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMonthTypeTwoIOS status=SUCCESS method=MobileReports.selectMonthTypeTwoIOS()[pri:94, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monthlyIOSSubmitButtonTwo()[pri:95, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:53 IST" name="monthlyIOSSubmitButtonTwo" finished-at="2024-02-01T14:16:53 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyIOSSubmitButtonTwo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:53 IST" name="getResult" finished-at="2024-02-01T14:16:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyIOSSubmitButtonTwo status=SUCCESS method=MobileReports.monthlyIOSSubmitButtonTwo()[pri:95, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monthlyIOSViewDetailsTwo()[pri:96, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:53 IST" name="monthlyIOSViewDetailsTwo" finished-at="2024-02-01T14:16:53 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyIOSViewDetailsTwo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:53 IST" name="getResult" finished-at="2024-02-01T14:16:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyIOSViewDetailsTwo status=SUCCESS method=MobileReports.monthlyIOSViewDetailsTwo()[pri:96, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monthlyIOSPopUPCloseTwo()[pri:97, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:53 IST" name="monthlyIOSPopUPCloseTwo" finished-at="2024-02-01T14:16:55 IST" duration-ms="2017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyIOSPopUPCloseTwo -->
        <test-method signature="getMonthRevenueTWOIOS()[pri:98, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:55 IST" name="getMonthRevenueTWOIOS" finished-at="2024-02-01T14:16:55 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMonthRevenueTWOIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:55 IST" name="getResult" finished-at="2024-02-01T14:16:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyIOSPopUPCloseTwo status=SUCCESS method=MobileReports.monthlyIOSPopUPCloseTwo()[pri:97, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:55 IST" name="getResult" finished-at="2024-02-01T14:16:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getMonthRevenueTWOIOS status=SUCCESS method=MobileReports.getMonthRevenueTWOIOS()[pri:98, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectMonthTypeFOURIOS()[pri:99, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:16:55 IST" name="selectMonthTypeFOURIOS" finished-at="2024-02-01T14:17:00 IST" duration-ms="5055" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMonthTypeFOURIOS -->
        <test-method signature="monthlyIOSSubmitButtonFOUR()[pri:100, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:00 IST" name="monthlyIOSSubmitButtonFOUR" finished-at="2024-02-01T14:17:00 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyIOSSubmitButtonFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:00 IST" name="getResult" finished-at="2024-02-01T14:17:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMonthTypeFOURIOS status=SUCCESS method=MobileReports.selectMonthTypeFOURIOS()[pri:99, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monthlyIOSViewDetailsFOUR()[pri:101, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:00 IST" name="monthlyIOSViewDetailsFOUR" finished-at="2024-02-01T14:17:00 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyIOSViewDetailsFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:00 IST" name="getResult" finished-at="2024-02-01T14:17:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyIOSSubmitButtonFOUR status=SUCCESS method=MobileReports.monthlyIOSSubmitButtonFOUR()[pri:100, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monthlyIOSPopUPCloseFOUR()[pri:102, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:00 IST" name="monthlyIOSPopUPCloseFOUR" finished-at="2024-02-01T14:17:02 IST" duration-ms="2024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monthlyIOSPopUPCloseFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:00 IST" name="getResult" finished-at="2024-02-01T14:17:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyIOSViewDetailsFOUR status=SUCCESS method=MobileReports.monthlyIOSViewDetailsFOUR()[pri:101, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:02 IST" name="getResult" finished-at="2024-02-01T14:17:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monthlyIOSPopUPCloseFOUR status=SUCCESS method=MobileReports.monthlyIOSPopUPCloseFOUR()[pri:102, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getMonthRevenueFOURIOS()[pri:103, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:02 IST" name="getMonthRevenueFOURIOS" finished-at="2024-02-01T14:17:02 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMonthRevenueFOURIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:02 IST" name="getResult" finished-at="2024-02-01T14:17:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getMonthRevenueFOURIOS status=SUCCESS method=MobileReports.getMonthRevenueFOURIOS()[pri:103, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectMobileRevenueStartDate()[pri:104, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:02 IST" name="selectMobileRevenueStartDate" finished-at="2024-02-01T14:17:11 IST" duration-ms="8715" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMobileRevenueStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:11 IST" name="getResult" finished-at="2024-02-01T14:17:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMobileRevenueStartDate status=SUCCESS method=MobileReports.selectMobileRevenueStartDate()[pri:104, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectMobileRevenueEndDate()[pri:105, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:11 IST" name="selectMobileRevenueEndDate" finished-at="2024-02-01T14:17:23 IST" duration-ms="11492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMobileRevenueEndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:23 IST" name="getResult" finished-at="2024-02-01T14:17:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMobileRevenueEndDate status=SUCCESS method=MobileReports.selectMobileRevenueEndDate()[pri:105, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileTransactions()[pri:106, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:23 IST" name="mobileTransactions" finished-at="2024-02-01T14:17:25 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileTransactions -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:25 IST" name="getResult" finished-at="2024-02-01T14:17:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileTransactions status=SUCCESS method=MobileReports.mobileTransactions()[pri:106, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileTransactionDates()[pri:107, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:25 IST" name="mobileTransactionDates" finished-at="2024-02-01T14:17:27 IST" duration-ms="2008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileTransactionDates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:27 IST" name="getResult" finished-at="2024-02-01T14:17:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileTransactionDates status=SUCCESS method=MobileReports.mobileTransactionDates()[pri:107, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectTransactionsAndroid()[pri:108, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:27 IST" name="selectTransactionsAndroid" finished-at="2024-02-01T14:17:29 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTransactionsAndroid -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:29 IST" name="getResult" finished-at="2024-02-01T14:17:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectTransactionsAndroid status=SUCCESS method=MobileReports.selectTransactionsAndroid()[pri:108, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectTransactionsVehicleTypeTwo()[pri:109, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:29 IST" name="selectTransactionsVehicleTypeTwo" finished-at="2024-02-01T14:17:34 IST" duration-ms="5073" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTransactionsVehicleTypeTwo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:34 IST" name="getResult" finished-at="2024-02-01T14:17:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectTransactionsVehicleTypeTwo status=SUCCESS method=MobileReports.selectTransactionsVehicleTypeTwo()[pri:109, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="transSubmitBtnTwo()[pri:110, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:34 IST" name="transSubmitBtnTwo" finished-at="2024-02-01T14:17:34 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transSubmitBtnTwo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:34 IST" name="getResult" finished-at="2024-02-01T14:17:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transSubmitBtnTwo status=SUCCESS method=MobileReports.transSubmitBtnTwo()[pri:110, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="transViewDetailsTWO()[pri:111, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:34 IST" name="transViewDetailsTWO" finished-at="2024-02-01T14:17:34 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transViewDetailsTWO -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:34 IST" name="getResult" finished-at="2024-02-01T14:17:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transViewDetailsTWO status=SUCCESS method=MobileReports.transViewDetailsTWO()[pri:111, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayTransPopUPCloseTWO()[pri:112, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:34 IST" name="dayTransPopUPCloseTWO" finished-at="2024-02-01T14:17:36 IST" duration-ms="2005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayTransPopUPCloseTWO -->
        <test-method signature="selectTransactionsTypeFOUR()[pri:113, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:36 IST" name="selectTransactionsTypeFOUR" finished-at="2024-02-01T14:17:41 IST" duration-ms="5064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTransactionsTypeFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:36 IST" name="getResult" finished-at="2024-02-01T14:17:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayTransPopUPCloseTWO status=SUCCESS method=MobileReports.dayTransPopUPCloseTWO()[pri:112, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:41 IST" name="getResult" finished-at="2024-02-01T14:17:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectTransactionsTypeFOUR status=SUCCESS method=MobileReports.selectTransactionsTypeFOUR()[pri:113, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayTransSubmitBtnFOUR()[pri:114, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:41 IST" name="dayTransSubmitBtnFOUR" finished-at="2024-02-01T14:17:41 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayTransSubmitBtnFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:41 IST" name="getResult" finished-at="2024-02-01T14:17:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayTransSubmitBtnFOUR status=SUCCESS method=MobileReports.dayTransSubmitBtnFOUR()[pri:114, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayTransViewDetailsFOUR()[pri:115, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:41 IST" name="dayTransViewDetailsFOUR" finished-at="2024-02-01T14:17:41 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayTransViewDetailsFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:41 IST" name="getResult" finished-at="2024-02-01T14:17:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayTransViewDetailsFOUR status=SUCCESS method=MobileReports.dayTransViewDetailsFOUR()[pri:115, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayTransPopUPCloseFOUR()[pri:116, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:41 IST" name="dayTransPopUPCloseFOUR" finished-at="2024-02-01T14:17:43 IST" duration-ms="2007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayTransPopUPCloseFOUR -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:43 IST" name="getResult" finished-at="2024-02-01T14:17:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayTransPopUPCloseFOUR status=SUCCESS method=MobileReports.dayTransPopUPCloseFOUR()[pri:116, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectTransIOS()[pri:117, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:43 IST" name="selectTransIOS" finished-at="2024-02-01T14:17:45 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTransIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:45 IST" name="getResult" finished-at="2024-02-01T14:17:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectTransIOS status=SUCCESS method=MobileReports.selectTransIOS()[pri:117, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectTransactionsTypeTwoIOS()[pri:118, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:45 IST" name="selectTransactionsTypeTwoIOS" finished-at="2024-02-01T14:17:50 IST" duration-ms="5072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTransactionsTypeTwoIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:50 IST" name="getResult" finished-at="2024-02-01T14:17:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectTransactionsTypeTwoIOS status=SUCCESS method=MobileReports.selectTransactionsTypeTwoIOS()[pri:118, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="transSubmitBtnTwoIOS()[pri:119, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:50 IST" name="transSubmitBtnTwoIOS" finished-at="2024-02-01T14:17:50 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transSubmitBtnTwoIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:50 IST" name="getResult" finished-at="2024-02-01T14:17:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transSubmitBtnTwoIOS status=SUCCESS method=MobileReports.transSubmitBtnTwoIOS()[pri:119, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="transViewDetailsTWOIOS()[pri:120, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:50 IST" name="transViewDetailsTWOIOS" finished-at="2024-02-01T14:17:50 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transViewDetailsTWOIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:50 IST" name="getResult" finished-at="2024-02-01T14:17:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transViewDetailsTWOIOS status=SUCCESS method=MobileReports.transViewDetailsTWOIOS()[pri:120, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="transPopUPCloseTWOIOS()[pri:121, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:50 IST" name="transPopUPCloseTWOIOS" finished-at="2024-02-01T14:17:52 IST" duration-ms="2009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transPopUPCloseTWOIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:52 IST" name="getResult" finished-at="2024-02-01T14:17:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transPopUPCloseTWOIOS status=SUCCESS method=MobileReports.transPopUPCloseTWOIOS()[pri:121, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectTransactionsTypeFourIOS()[pri:122, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:52 IST" name="selectTransactionsTypeFourIOS" finished-at="2024-02-01T14:17:57 IST" duration-ms="5065" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTransactionsTypeFourIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:57 IST" name="getResult" finished-at="2024-02-01T14:17:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectTransactionsTypeFourIOS status=SUCCESS method=MobileReports.selectTransactionsTypeFourIOS()[pri:122, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="transSubmitBtnFourIOS()[pri:123, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:57 IST" name="transSubmitBtnFourIOS" finished-at="2024-02-01T14:17:57 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transSubmitBtnFourIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:57 IST" name="getResult" finished-at="2024-02-01T14:17:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transSubmitBtnFourIOS status=SUCCESS method=MobileReports.transSubmitBtnFourIOS()[pri:123, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="transViewDetailsFourIOS()[pri:124, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:57 IST" name="transViewDetailsFourIOS" finished-at="2024-02-01T14:17:57 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transViewDetailsFourIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:57 IST" name="getResult" finished-at="2024-02-01T14:17:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transViewDetailsFourIOS status=SUCCESS method=MobileReports.transViewDetailsFourIOS()[pri:124, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="transPopUPCloseFourIOS()[pri:125, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:57 IST" name="transPopUPCloseFourIOS" finished-at="2024-02-01T14:17:59 IST" duration-ms="2007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transPopUPCloseFourIOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:59 IST" name="getResult" finished-at="2024-02-01T14:17:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transPopUPCloseFourIOS status=SUCCESS method=MobileReports.transPopUPCloseFourIOS()[pri:125, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:126, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:17:59 IST" name="logout" finished-at="2024-02-01T14:18:01 IST" duration-ms="2329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:18:01 IST" name="getResult" finished-at="2024-02-01T14:18:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=MobileReports.logout()[pri:126, instance:com.selenium.MobileReports@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.MobileReports@56620197]" started-at="2024-02-01T14:18:01 IST" name="tearDown" finished-at="2024-02-01T14:18:02 IST" duration-ms="518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.MobileReports -->
    </test> <!-- MobileReports -->
    <test started-at="2024-02-01T14:18:02 IST" name="MobileNumberSearch" finished-at="2024-02-01T14:21:06 IST" duration-ms="184049">
      <class name="com.selenium.MobileNumberSearch">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:02 IST" name="setUp" finished-at="2024-02-01T14:18:04 IST" duration-ms="2431" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:04 IST" name="login" finished-at="2024-02-01T14:18:10 IST" duration-ms="5553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:10 IST" name="getResult" finished-at="2024-02-01T14:18:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=MobileNumberSearch.login()[pri:1, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:10 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:18:15 IST" duration-ms="5112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:15 IST" name="getResult" finished-at="2024-02-01T14:18:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=MobileNumberSearch.revenueDashboardOpen()[pri:2, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="redirectMobileNumberSearchPage()[pri:3, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:15 IST" name="redirectMobileNumberSearchPage" finished-at="2024-02-01T14:18:20 IST" duration-ms="5436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectMobileNumberSearchPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:20 IST" name="getResult" finished-at="2024-02-01T14:18:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectMobileNumberSearchPage status=SUCCESS method=MobileNumberSearch.redirectMobileNumberSearchPage()[pri:3, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileNumberEnter()[pri:4, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:20 IST" name="mobileNumberEnter" finished-at="2024-02-01T14:18:23 IST" duration-ms="2064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberEnter -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:23 IST" name="getResult" finished-at="2024-02-01T14:18:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberEnter status=SUCCESS method=MobileNumberSearch.mobileNumberEnter()[pri:4, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileNumberSubmit()[pri:5, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:23 IST" name="mobileNumberSubmit" finished-at="2024-02-01T14:18:25 IST" duration-ms="2274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberSubmit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:25 IST" name="getResult" finished-at="2024-02-01T14:18:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberSubmit status=SUCCESS method=MobileNumberSearch.mobileNumberSubmit()[pri:5, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileNumberTransactions()[pri:6, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:25 IST" name="mobileNumberTransactions" finished-at="2024-02-01T14:18:26 IST" duration-ms="975" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberTransactions -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:26 IST" name="getResult" finished-at="2024-02-01T14:18:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberTransactions status=SUCCESS method=MobileNumberSearch.mobileNumberTransactions()[pri:6, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileNumberTransactionsDates()[pri:7, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:26 IST" name="mobileNumberTransactionsDates" finished-at="2024-02-01T14:18:31 IST" duration-ms="4737" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberTransactionsDates -->
        <test-method signature="selectStartDateTransactions()[pri:8, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:31 IST" name="selectStartDateTransactions" finished-at="2024-02-01T14:18:37 IST" duration-ms="6419" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStartDateTransactions -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:31 IST" name="getResult" finished-at="2024-02-01T14:18:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberTransactionsDates status=SUCCESS method=MobileNumberSearch.mobileNumberTransactionsDates()[pri:7, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:37 IST" name="getResult" finished-at="2024-02-01T14:18:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStartDateTransactions status=SUCCESS method=MobileNumberSearch.selectStartDateTransactions()[pri:8, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectEndDateTransactions()[pri:9, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:37 IST" name="selectEndDateTransactions" finished-at="2024-02-01T14:18:44 IST" duration-ms="7216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectEndDateTransactions -->
        <test-method signature="selectTransactionCount()[pri:10, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:44 IST" name="selectTransactionCount" finished-at="2024-02-01T14:18:48 IST" duration-ms="4295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTransactionCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:44 IST" name="getResult" finished-at="2024-02-01T14:18:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectEndDateTransactions status=SUCCESS method=MobileNumberSearch.selectEndDateTransactions()[pri:9, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:48 IST" name="getResult" finished-at="2024-02-01T14:18:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectTransactionCount status=SUCCESS method=MobileNumberSearch.selectTransactionCount()[pri:10, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileNumberTransactionsTable()[pri:11, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:48 IST" name="mobileNumberTransactionsTable" finished-at="2024-02-01T14:18:55 IST" duration-ms="6027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberTransactionsTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="getResult" finished-at="2024-02-01T14:18:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberTransactionsTable status=SUCCESS method=MobileNumberSearch.mobileNumberTransactionsTable()[pri:11, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateTransactionSiteName()[pri:12, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="validateTransactionSiteName" finished-at="2024-02-01T14:18:55 IST" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTransactionSiteName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="getResult" finished-at="2024-02-01T14:18:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTransactionSiteName status=SUCCESS method=MobileNumberSearch.validateTransactionSiteName()[pri:12, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateTransactionVehicleNumber()[pri:13, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="validateTransactionVehicleNumber" finished-at="2024-02-01T14:18:55 IST" duration-ms="22" status="FAIL">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index 1 out of bounds for length 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index 1 out of bounds for length 1
at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)
at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)
at java.base/java.util.Objects.checkIndex(Objects.java:359)
at java.base/java.util.ArrayList.get(ArrayList.java:427)
at com.selenium.MobileNumberSearch.validateTransactionVehicleNumber(MobileNumberSearch.java:290)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTransactionVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="getResult" finished-at="2024-02-01T14:18:55 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTransactionVehicleNumber status=FAILURE method=MobileNumberSearch.validateTransactionVehicleNumber()[pri:13, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateTransactionVehicleType()[pri:14, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="validateTransactionVehicleType" finished-at="2024-02-01T14:18:55 IST" duration-ms="22" status="FAIL">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index 2 out of bounds for length 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index 2 out of bounds for length 1
at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)
at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)
at java.base/java.util.Objects.checkIndex(Objects.java:359)
at java.base/java.util.ArrayList.get(ArrayList.java:427)
at com.selenium.MobileNumberSearch.validateTransactionVehicleType(MobileNumberSearch.java:321)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTransactionVehicleType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="getResult" finished-at="2024-02-01T14:18:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTransactionVehicleType status=FAILURE method=MobileNumberSearch.validateTransactionVehicleType()[pri:14, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateTransactionType()[pri:15, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="validateTransactionType" finished-at="2024-02-01T14:18:55 IST" duration-ms="21" status="FAIL">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index 3 out of bounds for length 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index 3 out of bounds for length 1
at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)
at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)
at java.base/java.util.Objects.checkIndex(Objects.java:359)
at java.base/java.util.ArrayList.get(ArrayList.java:427)
at com.selenium.MobileNumberSearch.validateTransactionType(MobileNumberSearch.java:351)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTransactionType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="getResult" finished-at="2024-02-01T14:18:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTransactionType status=FAILURE method=MobileNumberSearch.validateTransactionType()[pri:15, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCreatedDateTimeHeader()[pri:16, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="validateCreatedDateTimeHeader" finished-at="2024-02-01T14:18:55 IST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCreatedDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="getResult" finished-at="2024-02-01T14:18:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreatedDateTimeHeader status=SUCCESS method=MobileNumberSearch.validateCreatedDateTimeHeader()[pri:16, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateTransactionCreatedDate()[pri:17, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="validateTransactionCreatedDate" finished-at="2024-02-01T14:18:55 IST" duration-ms="25" status="FAIL">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index 4 out of bounds for length 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index 4 out of bounds for length 1
at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)
at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)
at java.base/java.util.Objects.checkIndex(Objects.java:359)
at java.base/java.util.ArrayList.get(ArrayList.java:427)
at com.selenium.MobileNumberSearch.validateTransactionCreatedDate(MobileNumberSearch.java:399)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTransactionCreatedDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="getResult" finished-at="2024-02-01T14:18:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTransactionCreatedDate status=FAILURE method=MobileNumberSearch.validateTransactionCreatedDate()[pri:17, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateStartDateTimeHeader()[pri:18, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="validateStartDateTimeHeader" finished-at="2024-02-01T14:18:55 IST" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStartDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="getResult" finished-at="2024-02-01T14:18:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateStartDateTimeHeader status=SUCCESS method=MobileNumberSearch.validateStartDateTimeHeader()[pri:18, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateTransactionStartDate()[pri:19, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="validateTransactionStartDate" finished-at="2024-02-01T14:18:55 IST" duration-ms="23" status="FAIL">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index 5 out of bounds for length 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index 5 out of bounds for length 1
at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)
at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)
at java.base/java.util.Objects.checkIndex(Objects.java:359)
at java.base/java.util.ArrayList.get(ArrayList.java:427)
at com.selenium.MobileNumberSearch.validateTransactionStartDate(MobileNumberSearch.java:447)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTransactionStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="getResult" finished-at="2024-02-01T14:18:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTransactionStartDate status=FAILURE method=MobileNumberSearch.validateTransactionStartDate()[pri:19, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateEndDateTimeHeader()[pri:20, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="validateEndDateTimeHeader" finished-at="2024-02-01T14:18:55 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateEndDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="getResult" finished-at="2024-02-01T14:18:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEndDateTimeHeader status=SUCCESS method=MobileNumberSearch.validateEndDateTimeHeader()[pri:20, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateTransactionEndDate()[pri:21, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="validateTransactionEndDate" finished-at="2024-02-01T14:18:55 IST" duration-ms="20" status="FAIL">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index 6 out of bounds for length 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index 6 out of bounds for length 1
at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)
at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)
at java.base/java.util.Objects.checkIndex(Objects.java:359)
at java.base/java.util.ArrayList.get(ArrayList.java:427)
at com.selenium.MobileNumberSearch.validateTransactionEndDate(MobileNumberSearch.java:495)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTransactionEndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="getResult" finished-at="2024-02-01T14:18:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTransactionEndDate status=FAILURE method=MobileNumberSearch.validateTransactionEndDate()[pri:21, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateTransactionPayU_reference()[pri:22, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="validateTransactionPayU_reference" finished-at="2024-02-01T14:18:55 IST" duration-ms="15" status="FAIL">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index 7 out of bounds for length 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index 7 out of bounds for length 1
at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)
at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)
at java.base/java.util.Objects.checkIndex(Objects.java:359)
at java.base/java.util.ArrayList.get(ArrayList.java:427)
at com.selenium.MobileNumberSearch.validateTransactionPayU_reference(MobileNumberSearch.java:527)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTransactionPayU_reference -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="getResult" finished-at="2024-02-01T14:18:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTransactionPayU_reference status=FAILURE method=MobileNumberSearch.validateTransactionPayU_reference()[pri:22, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateTransactionId()[pri:23, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="validateTransactionId" finished-at="2024-02-01T14:18:55 IST" duration-ms="12" status="FAIL">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index 8 out of bounds for length 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index 8 out of bounds for length 1
at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)
at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)
at java.base/java.util.Objects.checkIndex(Objects.java:359)
at java.base/java.util.ArrayList.get(ArrayList.java:427)
at com.selenium.MobileNumberSearch.validateTransactionId(MobileNumberSearch.java:560)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTransactionId -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="getResult" finished-at="2024-02-01T14:18:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTransactionId status=FAILURE method=MobileNumberSearch.validateTransactionId()[pri:23, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateTransactionAmount()[pri:24, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="validateTransactionAmount" finished-at="2024-02-01T14:18:55 IST" duration-ms="9" status="FAIL">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index 9 out of bounds for length 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index 9 out of bounds for length 1
at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)
at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)
at java.base/java.util.Objects.checkIndex(Objects.java:359)
at java.base/java.util.ArrayList.get(ArrayList.java:427)
at com.selenium.MobileNumberSearch.validateTransactionAmount(MobileNumberSearch.java:593)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTransactionAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="getResult" finished-at="2024-02-01T14:18:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTransactionAmount status=FAILURE method=MobileNumberSearch.validateTransactionAmount()[pri:24, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateTransactionStatus()[pri:25, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="validateTransactionStatus" finished-at="2024-02-01T14:18:55 IST" duration-ms="7" status="FAIL">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index 10 out of bounds for length 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index 10 out of bounds for length 1
at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)
at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)
at java.base/java.util.Objects.checkIndex(Objects.java:359)
at java.base/java.util.ArrayList.get(ArrayList.java:427)
at com.selenium.MobileNumberSearch.validateTransactionStatus(MobileNumberSearch.java:624)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTransactionStatus -->
        <test-method signature="mobileNumberPass()[pri:26, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="mobileNumberPass" finished-at="2024-02-01T14:18:57 IST" duration-ms="2263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberPass -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:55 IST" name="getResult" finished-at="2024-02-01T14:18:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTransactionStatus status=FAILURE method=MobileNumberSearch.validateTransactionStatus()[pri:25, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:57 IST" name="getResult" finished-at="2024-02-01T14:18:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberPass status=SUCCESS method=MobileNumberSearch.mobileNumberPass()[pri:26, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileNumberPassDates()[pri:27, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:18:57 IST" name="mobileNumberPassDates" finished-at="2024-02-01T14:19:04 IST" duration-ms="6702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberPassDates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:04 IST" name="getResult" finished-at="2024-02-01T14:19:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberPassDates status=SUCCESS method=MobileNumberSearch.mobileNumberPassDates()[pri:27, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectPassCount()[pri:30, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:04 IST" name="selectPassCount" finished-at="2024-02-01T14:19:08 IST" duration-ms="4025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPassCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:08 IST" name="getResult" finished-at="2024-02-01T14:19:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectPassCount status=SUCCESS method=MobileNumberSearch.selectPassCount()[pri:30, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="passTable()[pri:31, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:08 IST" name="passTable" finished-at="2024-02-01T14:19:14 IST" duration-ms="6012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passTable -->
        <test-method signature="validatePassesSiteName()[pri:32, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="validatePassesSiteName" finished-at="2024-02-01T14:19:14 IST" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesSiteName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="getResult" finished-at="2024-02-01T14:19:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passTable status=SUCCESS method=MobileNumberSearch.passTable()[pri:31, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="getResult" finished-at="2024-02-01T14:19:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesSiteName status=SUCCESS method=MobileNumberSearch.validatePassesSiteName()[pri:32, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassesVehicleNumber()[pri:33, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="validatePassesVehicleNumber" finished-at="2024-02-01T14:19:14 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesVehicleNumber -->
        <test-method signature="validatePassesVehicleType()[pri:34, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="validatePassesVehicleType" finished-at="2024-02-01T14:19:14 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesVehicleType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="getResult" finished-at="2024-02-01T14:19:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesVehicleNumber status=SUCCESS method=MobileNumberSearch.validatePassesVehicleNumber()[pri:33, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="getResult" finished-at="2024-02-01T14:19:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesVehicleType status=SUCCESS method=MobileNumberSearch.validatePassesVehicleType()[pri:34, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassesType()[pri:35, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="validatePassesType" finished-at="2024-02-01T14:19:14 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="getResult" finished-at="2024-02-01T14:19:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesType status=SUCCESS method=MobileNumberSearch.validatePassesType()[pri:35, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassCreatedDateTimeHeader()[pri:36, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="validatePassCreatedDateTimeHeader" finished-at="2024-02-01T14:19:14 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassCreatedDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="getResult" finished-at="2024-02-01T14:19:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassCreatedDateTimeHeader status=SUCCESS method=MobileNumberSearch.validatePassCreatedDateTimeHeader()[pri:36, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassesCreatedDate()[pri:37, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="validatePassesCreatedDate" finished-at="2024-02-01T14:19:14 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesCreatedDate -->
        <test-method signature="validatePassStartDateTimeHeader()[pri:38, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="validatePassStartDateTimeHeader" finished-at="2024-02-01T14:19:14 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassStartDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="getResult" finished-at="2024-02-01T14:19:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesCreatedDate status=SUCCESS method=MobileNumberSearch.validatePassesCreatedDate()[pri:37, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassesStartDate()[pri:39, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="validatePassesStartDate" finished-at="2024-02-01T14:19:14 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="getResult" finished-at="2024-02-01T14:19:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassStartDateTimeHeader status=SUCCESS method=MobileNumberSearch.validatePassStartDateTimeHeader()[pri:38, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassEndDateTimeHeader()[pri:40, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="validatePassEndDateTimeHeader" finished-at="2024-02-01T14:19:14 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassEndDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="getResult" finished-at="2024-02-01T14:19:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesStartDate status=SUCCESS method=MobileNumberSearch.validatePassesStartDate()[pri:39, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="getResult" finished-at="2024-02-01T14:19:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassEndDateTimeHeader status=SUCCESS method=MobileNumberSearch.validatePassEndDateTimeHeader()[pri:40, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassesEndDate()[pri:41, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="validatePassesEndDate" finished-at="2024-02-01T14:19:14 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesEndDate -->
        <test-method signature="validatePassesPayU_reference()[pri:42, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="validatePassesPayU_reference" finished-at="2024-02-01T14:19:14 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesPayU_reference -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="getResult" finished-at="2024-02-01T14:19:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesEndDate status=SUCCESS method=MobileNumberSearch.validatePassesEndDate()[pri:41, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassesTransactionId()[pri:43, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="validatePassesTransactionId" finished-at="2024-02-01T14:19:14 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesTransactionId -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="getResult" finished-at="2024-02-01T14:19:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesPayU_reference status=SUCCESS method=MobileNumberSearch.validatePassesPayU_reference()[pri:42, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassesAmount()[pri:44, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="validatePassesAmount" finished-at="2024-02-01T14:19:14 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="getResult" finished-at="2024-02-01T14:19:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesTransactionId status=SUCCESS method=MobileNumberSearch.validatePassesTransactionId()[pri:43, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="getResult" finished-at="2024-02-01T14:19:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesAmount status=SUCCESS method=MobileNumberSearch.validatePassesAmount()[pri:44, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassesStatus()[pri:45, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="validatePassesStatus" finished-at="2024-02-01T14:19:14 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesStatus -->
        <test-method signature="mobileNumberReservation()[pri:46, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="mobileNumberReservation" finished-at="2024-02-01T14:19:16 IST" duration-ms="2211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberReservation -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:14 IST" name="getResult" finished-at="2024-02-01T14:19:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesStatus status=SUCCESS method=MobileNumberSearch.validatePassesStatus()[pri:45, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileReservationDates()[pri:47, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:16 IST" name="mobileReservationDates" finished-at="2024-02-01T14:19:21 IST" duration-ms="4697" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileReservationDates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:16 IST" name="getResult" finished-at="2024-02-01T14:19:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberReservation status=SUCCESS method=MobileNumberSearch.mobileNumberReservation()[pri:46, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:21 IST" name="getResult" finished-at="2024-02-01T14:19:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileReservationDates status=SUCCESS method=MobileNumberSearch.mobileReservationDates()[pri:47, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectReservationsCount()[pri:50, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:21 IST" name="selectReservationsCount" finished-at="2024-02-01T14:19:25 IST" duration-ms="4256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectReservationsCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:25 IST" name="getResult" finished-at="2024-02-01T14:19:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectReservationsCount status=SUCCESS method=MobileNumberSearch.selectReservationsCount()[pri:50, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="reservationsTable()[pri:51, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:25 IST" name="reservationsTable" finished-at="2024-02-01T14:19:31 IST" duration-ms="6026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reservationsTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="getResult" finished-at="2024-02-01T14:19:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=reservationsTable status=SUCCESS method=MobileNumberSearch.reservationsTable()[pri:51, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReservationsSiteName()[pri:52, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="validateReservationsSiteName" finished-at="2024-02-01T14:19:31 IST" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsSiteName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="getResult" finished-at="2024-02-01T14:19:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsSiteName status=SUCCESS method=MobileNumberSearch.validateReservationsSiteName()[pri:52, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReservationsVehicleNumber()[pri:53, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="validateReservationsVehicleNumber" finished-at="2024-02-01T14:19:31 IST" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="getResult" finished-at="2024-02-01T14:19:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsVehicleNumber status=SUCCESS method=MobileNumberSearch.validateReservationsVehicleNumber()[pri:53, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReservationsVehicleType()[pri:54, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="validateReservationsVehicleType" finished-at="2024-02-01T14:19:31 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsVehicleType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="getResult" finished-at="2024-02-01T14:19:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsVehicleType status=SUCCESS method=MobileNumberSearch.validateReservationsVehicleType()[pri:54, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReservationsType()[pri:55, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="validateReservationsType" finished-at="2024-02-01T14:19:31 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="getResult" finished-at="2024-02-01T14:19:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsType status=SUCCESS method=MobileNumberSearch.validateReservationsType()[pri:55, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReserveCreatedDateTimeHeader()[pri:56, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="validateReserveCreatedDateTimeHeader" finished-at="2024-02-01T14:19:31 IST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReserveCreatedDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="getResult" finished-at="2024-02-01T14:19:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReserveCreatedDateTimeHeader status=SUCCESS method=MobileNumberSearch.validateReserveCreatedDateTimeHeader()[pri:56, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReservationsCreatedDate()[pri:57, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="validateReservationsCreatedDate" finished-at="2024-02-01T14:19:31 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsCreatedDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="getResult" finished-at="2024-02-01T14:19:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsCreatedDate status=SUCCESS method=MobileNumberSearch.validateReservationsCreatedDate()[pri:57, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReserveStartDateTimeHeader()[pri:58, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="validateReserveStartDateTimeHeader" finished-at="2024-02-01T14:19:31 IST" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReserveStartDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="getResult" finished-at="2024-02-01T14:19:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReserveStartDateTimeHeader status=SUCCESS method=MobileNumberSearch.validateReserveStartDateTimeHeader()[pri:58, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReservationsStartDate()[pri:59, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="validateReservationsStartDate" finished-at="2024-02-01T14:19:31 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="getResult" finished-at="2024-02-01T14:19:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsStartDate status=SUCCESS method=MobileNumberSearch.validateReservationsStartDate()[pri:59, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReserveEndDateTimeHeader()[pri:60, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="validateReserveEndDateTimeHeader" finished-at="2024-02-01T14:19:31 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReserveEndDateTimeHeader -->
        <test-method signature="validateReservationsEndDate()[pri:61, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="validateReservationsEndDate" finished-at="2024-02-01T14:19:31 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsEndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="getResult" finished-at="2024-02-01T14:19:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReserveEndDateTimeHeader status=SUCCESS method=MobileNumberSearch.validateReserveEndDateTimeHeader()[pri:60, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReservationsPayU_reference()[pri:62, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="validateReservationsPayU_reference" finished-at="2024-02-01T14:19:31 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsPayU_reference -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="getResult" finished-at="2024-02-01T14:19:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsEndDate status=SUCCESS method=MobileNumberSearch.validateReservationsEndDate()[pri:61, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReservationsTransactionId()[pri:63, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="validateReservationsTransactionId" finished-at="2024-02-01T14:19:31 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsTransactionId -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="getResult" finished-at="2024-02-01T14:19:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsPayU_reference status=SUCCESS method=MobileNumberSearch.validateReservationsPayU_reference()[pri:62, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReservationsAmount()[pri:64, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="validateReservationsAmount" finished-at="2024-02-01T14:19:31 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="getResult" finished-at="2024-02-01T14:19:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsTransactionId status=SUCCESS method=MobileNumberSearch.validateReservationsTransactionId()[pri:63, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReservationsStatus()[pri:65, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="validateReservationsStatus" finished-at="2024-02-01T14:19:31 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="getResult" finished-at="2024-02-01T14:19:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsAmount status=SUCCESS method=MobileNumberSearch.validateReservationsAmount()[pri:64, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="getResult" finished-at="2024-02-01T14:19:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsStatus status=SUCCESS method=MobileNumberSearch.validateReservationsStatus()[pri:65, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileNumberCheckInOut()[pri:66, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:31 IST" name="mobileNumberCheckInOut" finished-at="2024-02-01T14:19:35 IST" duration-ms="3216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberCheckInOut -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:35 IST" name="getResult" finished-at="2024-02-01T14:19:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberCheckInOut status=SUCCESS method=MobileNumberSearch.mobileNumberCheckInOut()[pri:66, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileNumberCheckInOutDates()[pri:67, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:35 IST" name="mobileNumberCheckInOutDates" finished-at="2024-02-01T14:19:39 IST" duration-ms="4661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberCheckInOutDates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:39 IST" name="getResult" finished-at="2024-02-01T14:19:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberCheckInOutDates status=SUCCESS method=MobileNumberSearch.mobileNumberCheckInOutDates()[pri:67, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectCountCheckInOut()[pri:70, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:39 IST" name="selectCountCheckInOut" finished-at="2024-02-01T14:19:42 IST" duration-ms="2257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountCheckInOut -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:42 IST" name="getResult" finished-at="2024-02-01T14:19:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountCheckInOut status=SUCCESS method=MobileNumberSearch.selectCountCheckInOut()[pri:70, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="checkInOutTable()[pri:71, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:42 IST" name="checkInOutTable" finished-at="2024-02-01T14:19:48 IST" duration-ms="6020" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInOutTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="getResult" finished-at="2024-02-01T14:19:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkInOutTable status=SUCCESS method=MobileNumberSearch.checkInOutTable()[pri:71, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCheckInOutSiteName()[pri:72, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="validateCheckInOutSiteName" finished-at="2024-02-01T14:19:48 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCheckInOutSiteName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="getResult" finished-at="2024-02-01T14:19:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCheckInOutSiteName status=SUCCESS method=MobileNumberSearch.validateCheckInOutSiteName()[pri:72, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCheckInOutVehicleType()[pri:73, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="validateCheckInOutVehicleType" finished-at="2024-02-01T14:19:48 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCheckInOutVehicleType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="getResult" finished-at="2024-02-01T14:19:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCheckInOutVehicleType status=SUCCESS method=MobileNumberSearch.validateCheckInOutVehicleType()[pri:73, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCheckInOutVehicleNumber()[pri:74, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="validateCheckInOutVehicleNumber" finished-at="2024-02-01T14:19:48 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCheckInOutVehicleNumber -->
        <test-method signature="validateCheckInDateTimeHeader()[pri:75, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="validateCheckInDateTimeHeader" finished-at="2024-02-01T14:19:48 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCheckInDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="getResult" finished-at="2024-02-01T14:19:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCheckInOutVehicleNumber status=SUCCESS method=MobileNumberSearch.validateCheckInOutVehicleNumber()[pri:74, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCheckInRow()[pri:76, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="validateCheckInRow" finished-at="2024-02-01T14:19:48 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCheckInRow -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="getResult" finished-at="2024-02-01T14:19:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCheckInDateTimeHeader status=SUCCESS method=MobileNumberSearch.validateCheckInDateTimeHeader()[pri:75, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="getResult" finished-at="2024-02-01T14:19:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCheckInRow status=SUCCESS method=MobileNumberSearch.validateCheckInRow()[pri:76, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCheckOutDateTimeHeader()[pri:77, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="validateCheckOutDateTimeHeader" finished-at="2024-02-01T14:19:48 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCheckOutDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="getResult" finished-at="2024-02-01T14:19:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCheckOutDateTimeHeader status=SUCCESS method=MobileNumberSearch.validateCheckOutDateTimeHeader()[pri:77, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCheckOutRow()[pri:78, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="validateCheckOutRow" finished-at="2024-02-01T14:19:48 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCheckOutRow -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="getResult" finished-at="2024-02-01T14:19:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCheckOutRow status=SUCCESS method=MobileNumberSearch.validateCheckOutRow()[pri:78, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCheckInOutType()[pri:79, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="validateCheckInOutType" finished-at="2024-02-01T14:19:48 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCheckInOutType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="getResult" finished-at="2024-02-01T14:19:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCheckInOutType status=SUCCESS method=MobileNumberSearch.validateCheckInOutType()[pri:79, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCheckInOutPayU_reference()[pri:80, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="validateCheckInOutPayU_reference" finished-at="2024-02-01T14:19:48 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCheckInOutPayU_reference -->
        <test-method signature="validateCheckInOutTransactionId()[pri:81, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="validateCheckInOutTransactionId" finished-at="2024-02-01T14:19:48 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCheckInOutTransactionId -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="getResult" finished-at="2024-02-01T14:19:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCheckInOutPayU_reference status=SUCCESS method=MobileNumberSearch.validateCheckInOutPayU_reference()[pri:80, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCheckInOutAmount()[pri:82, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="validateCheckInOutAmount" finished-at="2024-02-01T14:19:48 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCheckInOutAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="getResult" finished-at="2024-02-01T14:19:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCheckInOutTransactionId status=SUCCESS method=MobileNumberSearch.validateCheckInOutTransactionId()[pri:81, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCheckInOutDueAmount()[pri:83, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="validateCheckInOutDueAmount" finished-at="2024-02-01T14:19:48 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCheckInOutDueAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="getResult" finished-at="2024-02-01T14:19:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCheckInOutAmount status=SUCCESS method=MobileNumberSearch.validateCheckInOutAmount()[pri:82, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="getResult" finished-at="2024-02-01T14:19:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCheckInOutDueAmount status=SUCCESS method=MobileNumberSearch.validateCheckInOutDueAmount()[pri:83, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCheckInOutStatus()[pri:84, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="validateCheckInOutStatus" finished-at="2024-02-01T14:19:48 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCheckInOutStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="getResult" finished-at="2024-02-01T14:19:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCheckInOutStatus status=SUCCESS method=MobileNumberSearch.validateCheckInOutStatus()[pri:84, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileNumberDueAmount()[pri:85, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:48 IST" name="mobileNumberDueAmount" finished-at="2024-02-01T14:19:50 IST" duration-ms="2210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberDueAmount -->
        <test-method signature="mobileNumberDueAmountDates()[pri:86, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:50 IST" name="mobileNumberDueAmountDates" finished-at="2024-02-01T14:19:55 IST" duration-ms="4685" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberDueAmountDates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:50 IST" name="getResult" finished-at="2024-02-01T14:19:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberDueAmount status=SUCCESS method=MobileNumberSearch.mobileNumberDueAmount()[pri:85, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:55 IST" name="getResult" finished-at="2024-02-01T14:19:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberDueAmountDates status=SUCCESS method=MobileNumberSearch.mobileNumberDueAmountDates()[pri:86, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectDueAmountCount()[pri:89, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:55 IST" name="selectDueAmountCount" finished-at="2024-02-01T14:19:59 IST" duration-ms="4262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectDueAmountCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:59 IST" name="getResult" finished-at="2024-02-01T14:19:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectDueAmountCount status=SUCCESS method=MobileNumberSearch.selectDueAmountCount()[pri:89, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dueAmountTable()[pri:90, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:19:59 IST" name="dueAmountTable" finished-at="2024-02-01T14:20:05 IST" duration-ms="6021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dueAmountTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="getResult" finished-at="2024-02-01T14:20:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dueAmountTable status=SUCCESS method=MobileNumberSearch.dueAmountTable()[pri:90, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateDueAmountSiteName()[pri:91, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="validateDueAmountSiteName" finished-at="2024-02-01T14:20:05 IST" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDueAmountSiteName -->
        <test-method signature="validateDueAmountVehicleNumber()[pri:92, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="validateDueAmountVehicleNumber" finished-at="2024-02-01T14:20:05 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDueAmountVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="getResult" finished-at="2024-02-01T14:20:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDueAmountSiteName status=SUCCESS method=MobileNumberSearch.validateDueAmountSiteName()[pri:91, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="getResult" finished-at="2024-02-01T14:20:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDueAmountVehicleNumber status=SUCCESS method=MobileNumberSearch.validateDueAmountVehicleNumber()[pri:92, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateDueAmountVehicleType()[pri:93, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="validateDueAmountVehicleType" finished-at="2024-02-01T14:20:05 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDueAmountVehicleType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="getResult" finished-at="2024-02-01T14:20:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDueAmountVehicleType status=SUCCESS method=MobileNumberSearch.validateDueAmountVehicleType()[pri:93, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateRDueAmountPayU_reference()[pri:94, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="validateRDueAmountPayU_reference" finished-at="2024-02-01T14:20:05 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRDueAmountPayU_reference -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="getResult" finished-at="2024-02-01T14:20:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRDueAmountPayU_reference status=SUCCESS method=MobileNumberSearch.validateRDueAmountPayU_reference()[pri:94, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateDueAmountCreatedDateTimeHeader()[pri:95, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="validateDueAmountCreatedDateTimeHeader" finished-at="2024-02-01T14:20:05 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDueAmountCreatedDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="getResult" finished-at="2024-02-01T14:20:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDueAmountCreatedDateTimeHeader status=SUCCESS method=MobileNumberSearch.validateDueAmountCreatedDateTimeHeader()[pri:95, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateDueAmountCreatedDate()[pri:96, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="validateDueAmountCreatedDate" finished-at="2024-02-01T14:20:05 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDueAmountCreatedDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="getResult" finished-at="2024-02-01T14:20:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDueAmountCreatedDate status=SUCCESS method=MobileNumberSearch.validateDueAmountCreatedDate()[pri:96, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateDueAmountsTransactionId()[pri:97, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="validateDueAmountsTransactionId" finished-at="2024-02-01T14:20:05 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDueAmountsTransactionId -->
        <test-method signature="validateDueAmountAmount()[pri:98, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="validateDueAmountAmount" finished-at="2024-02-01T14:20:05 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDueAmountAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="getResult" finished-at="2024-02-01T14:20:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDueAmountsTransactionId status=SUCCESS method=MobileNumberSearch.validateDueAmountsTransactionId()[pri:97, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="getResult" finished-at="2024-02-01T14:20:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDueAmountAmount status=SUCCESS method=MobileNumberSearch.validateDueAmountAmount()[pri:98, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateDueAmountStatus()[pri:99, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="validateDueAmountStatus" finished-at="2024-02-01T14:20:05 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDueAmountStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="getResult" finished-at="2024-02-01T14:20:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDueAmountStatus status=SUCCESS method=MobileNumberSearch.validateDueAmountStatus()[pri:99, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileNumberFeedback()[pri:100, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:05 IST" name="mobileNumberFeedback" finished-at="2024-02-01T14:20:07 IST" duration-ms="2211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberFeedback -->
        <test-method signature="mobileNumberFeedbackDates()[pri:101, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:07 IST" name="mobileNumberFeedbackDates" finished-at="2024-02-01T14:20:12 IST" duration-ms="4679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberFeedbackDates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:07 IST" name="getResult" finished-at="2024-02-01T14:20:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberFeedback status=SUCCESS method=MobileNumberSearch.mobileNumberFeedback()[pri:100, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:12 IST" name="getResult" finished-at="2024-02-01T14:20:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberFeedbackDates status=SUCCESS method=MobileNumberSearch.mobileNumberFeedbackDates()[pri:101, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectPassFeedback()[pri:104, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:12 IST" name="selectPassFeedback" finished-at="2024-02-01T14:20:14 IST" duration-ms="2262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPassFeedback -->
        <test-method signature="FeedbackTable()[pri:105, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:14 IST" name="FeedbackTable" finished-at="2024-02-01T14:20:20 IST" duration-ms="6013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FeedbackTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:14 IST" name="getResult" finished-at="2024-02-01T14:20:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectPassFeedback status=SUCCESS method=MobileNumberSearch.selectPassFeedback()[pri:104, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:20 IST" name="getResult" finished-at="2024-02-01T14:20:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FeedbackTable status=SUCCESS method=MobileNumberSearch.FeedbackTable()[pri:105, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateFeedbackSiteName()[pri:106, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:20 IST" name="validateFeedbackSiteName" finished-at="2024-02-01T14:20:20 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFeedbackSiteName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:20 IST" name="getResult" finished-at="2024-02-01T14:20:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFeedbackSiteName status=SUCCESS method=MobileNumberSearch.validateFeedbackSiteName()[pri:106, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateFeedbackCategory()[pri:107, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:20 IST" name="validateFeedbackCategory" finished-at="2024-02-01T14:20:20 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFeedbackCategory -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:20 IST" name="getResult" finished-at="2024-02-01T14:20:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFeedbackCategory status=SUCCESS method=MobileNumberSearch.validateFeedbackCategory()[pri:107, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateFeedbackId()[pri:108, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:20 IST" name="validateFeedbackId" finished-at="2024-02-01T14:20:20 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFeedbackId -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:20 IST" name="getResult" finished-at="2024-02-01T14:20:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFeedbackId status=SUCCESS method=MobileNumberSearch.validateFeedbackId()[pri:108, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateFeedbackType()[pri:109, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:20 IST" name="validateFeedbackType" finished-at="2024-02-01T14:20:20 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFeedbackType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:20 IST" name="getResult" finished-at="2024-02-01T14:20:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFeedbackType status=SUCCESS method=MobileNumberSearch.validateFeedbackType()[pri:109, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateFeedBackCreatedDateTimeHeader()[pri:110, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:20 IST" name="validateFeedBackCreatedDateTimeHeader" finished-at="2024-02-01T14:20:20 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFeedBackCreatedDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:20 IST" name="getResult" finished-at="2024-02-01T14:20:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFeedBackCreatedDateTimeHeader status=SUCCESS method=MobileNumberSearch.validateFeedBackCreatedDateTimeHeader()[pri:110, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateFeedbackCreatedDate()[pri:111, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:20 IST" name="validateFeedbackCreatedDate" finished-at="2024-02-01T14:20:20 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFeedbackCreatedDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:20 IST" name="getResult" finished-at="2024-02-01T14:20:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFeedbackCreatedDate status=SUCCESS method=MobileNumberSearch.validateFeedbackCreatedDate()[pri:111, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateFeedbackStatus()[pri:112, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:20 IST" name="validateFeedbackStatus" finished-at="2024-02-01T14:20:20 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFeedbackStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:20 IST" name="getResult" finished-at="2024-02-01T14:20:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFeedbackStatus status=SUCCESS method=MobileNumberSearch.validateFeedbackStatus()[pri:112, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateFeedbackDescription()[pri:113, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:20 IST" name="validateFeedbackDescription" finished-at="2024-02-01T14:20:20 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFeedbackDescription -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:20 IST" name="getResult" finished-at="2024-02-01T14:20:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFeedbackDescription status=SUCCESS method=MobileNumberSearch.validateFeedbackDescription()[pri:113, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileNumberBlockListClick()[pri:114, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:20 IST" name="mobileNumberBlockListClick" finished-at="2024-02-01T14:20:23 IST" duration-ms="2251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberBlockListClick -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:23 IST" name="getResult" finished-at="2024-02-01T14:20:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberBlockListClick status=SUCCESS method=MobileNumberSearch.mobileNumberBlockListClick()[pri:114, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileNumberBlockListDates()[pri:115, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:23 IST" name="mobileNumberBlockListDates" finished-at="2024-02-01T14:20:29 IST" duration-ms="6716" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberBlockListDates -->
        <test-method signature="selectBlockListCount()[pri:118, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:29 IST" name="selectBlockListCount" finished-at="2024-02-01T14:20:32 IST" duration-ms="2229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectBlockListCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:29 IST" name="getResult" finished-at="2024-02-01T14:20:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberBlockListDates status=SUCCESS method=MobileNumberSearch.mobileNumberBlockListDates()[pri:115, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:32 IST" name="getResult" finished-at="2024-02-01T14:20:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectBlockListCount status=SUCCESS method=MobileNumberSearch.selectBlockListCount()[pri:118, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="BlockListTable()[pri:119, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:32 IST" name="BlockListTable" finished-at="2024-02-01T14:20:38 IST" duration-ms="6015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BlockListTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:38 IST" name="getResult" finished-at="2024-02-01T14:20:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BlockListTable status=SUCCESS method=MobileNumberSearch.BlockListTable()[pri:119, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateBlockListSiteName()[pri:120, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:38 IST" name="validateBlockListSiteName" finished-at="2024-02-01T14:20:38 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBlockListSiteName -->
        <test-method signature="validateBlockListVehicleNumber()[pri:121, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:38 IST" name="validateBlockListVehicleNumber" finished-at="2024-02-01T14:20:38 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBlockListVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:38 IST" name="getResult" finished-at="2024-02-01T14:20:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBlockListSiteName status=SUCCESS method=MobileNumberSearch.validateBlockListSiteName()[pri:120, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateBlockListVehicleType()[pri:122, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:38 IST" name="validateBlockListVehicleType" finished-at="2024-02-01T14:20:38 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBlockListVehicleType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:38 IST" name="getResult" finished-at="2024-02-01T14:20:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBlockListVehicleNumber status=SUCCESS method=MobileNumberSearch.validateBlockListVehicleNumber()[pri:121, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateBlockListCreatedDateTimeHeader()[pri:123, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:38 IST" name="validateBlockListCreatedDateTimeHeader" finished-at="2024-02-01T14:20:38 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBlockListCreatedDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:38 IST" name="getResult" finished-at="2024-02-01T14:20:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBlockListVehicleType status=SUCCESS method=MobileNumberSearch.validateBlockListVehicleType()[pri:122, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:38 IST" name="getResult" finished-at="2024-02-01T14:20:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBlockListCreatedDateTimeHeader status=SUCCESS method=MobileNumberSearch.validateBlockListCreatedDateTimeHeader()[pri:123, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateBlockListnCreatedDate()[pri:124, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:38 IST" name="validateBlockListnCreatedDate" finished-at="2024-02-01T14:20:38 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBlockListnCreatedDate -->
        <test-method signature="validateBlockListAmount()[pri:125, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:38 IST" name="validateBlockListAmount" finished-at="2024-02-01T14:20:38 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBlockListAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:38 IST" name="getResult" finished-at="2024-02-01T14:20:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBlockListnCreatedDate status=SUCCESS method=MobileNumberSearch.validateBlockListnCreatedDate()[pri:124, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateBlockListStatus()[pri:126, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:38 IST" name="validateBlockListStatus" finished-at="2024-02-01T14:20:38 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBlockListStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:38 IST" name="getResult" finished-at="2024-02-01T14:20:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBlockListAmount status=SUCCESS method=MobileNumberSearch.validateBlockListAmount()[pri:125, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileNumberUnAccountedClick()[pri:127, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:38 IST" name="mobileNumberUnAccountedClick" finished-at="2024-02-01T14:20:40 IST" duration-ms="2216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberUnAccountedClick -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:38 IST" name="getResult" finished-at="2024-02-01T14:20:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBlockListStatus status=SUCCESS method=MobileNumberSearch.validateBlockListStatus()[pri:126, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:40 IST" name="getResult" finished-at="2024-02-01T14:20:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberUnAccountedClick status=SUCCESS method=MobileNumberSearch.mobileNumberUnAccountedClick()[pri:127, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileNumberUnAccountedDates()[pri:128, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:40 IST" name="mobileNumberUnAccountedDates" finished-at="2024-02-01T14:20:45 IST" duration-ms="4709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberUnAccountedDates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:45 IST" name="getResult" finished-at="2024-02-01T14:20:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberUnAccountedDates status=SUCCESS method=MobileNumberSearch.mobileNumberUnAccountedDates()[pri:128, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectUnAccountedCount()[pri:131, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:45 IST" name="selectUnAccountedCount" finished-at="2024-02-01T14:20:49 IST" duration-ms="4285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectUnAccountedCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:49 IST" name="getResult" finished-at="2024-02-01T14:20:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectUnAccountedCount status=SUCCESS method=MobileNumberSearch.selectUnAccountedCount()[pri:131, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="unAccountedTable()[pri:132, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:49 IST" name="unAccountedTable" finished-at="2024-02-01T14:20:55 IST" duration-ms="6020" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unAccountedTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="getResult" finished-at="2024-02-01T14:20:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unAccountedTable status=SUCCESS method=MobileNumberSearch.unAccountedTable()[pri:132, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateUnAccountedSiteName()[pri:133, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="validateUnAccountedSiteName" finished-at="2024-02-01T14:20:55 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUnAccountedSiteName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="getResult" finished-at="2024-02-01T14:20:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUnAccountedSiteName status=SUCCESS method=MobileNumberSearch.validateUnAccountedSiteName()[pri:133, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateUnAccountedVehicleNumber()[pri:134, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="validateUnAccountedVehicleNumber" finished-at="2024-02-01T14:20:55 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUnAccountedVehicleNumber -->
        <test-method signature="validateUnAccountedDateTimeHeader()[pri:135, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="validateUnAccountedDateTimeHeader" finished-at="2024-02-01T14:20:55 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUnAccountedDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="getResult" finished-at="2024-02-01T14:20:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUnAccountedVehicleNumber status=SUCCESS method=MobileNumberSearch.validateUnAccountedVehicleNumber()[pri:134, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="getResult" finished-at="2024-02-01T14:20:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUnAccountedDateTimeHeader status=SUCCESS method=MobileNumberSearch.validateUnAccountedDateTimeHeader()[pri:135, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateUnAccountedVehicleType()[pri:136, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="validateUnAccountedVehicleType" finished-at="2024-02-01T14:20:55 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUnAccountedVehicleType -->
        <test-method signature="validateUnAccountedType()[pri:137, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="validateUnAccountedType" finished-at="2024-02-01T14:20:55 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUnAccountedType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="getResult" finished-at="2024-02-01T14:20:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUnAccountedVehicleType status=SUCCESS method=MobileNumberSearch.validateUnAccountedVehicleType()[pri:136, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateUnAccountedBankrefNo()[pri:138, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="validateUnAccountedBankrefNo" finished-at="2024-02-01T14:20:55 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUnAccountedBankrefNo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="getResult" finished-at="2024-02-01T14:20:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUnAccountedType status=SUCCESS method=MobileNumberSearch.validateUnAccountedType()[pri:137, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="getResult" finished-at="2024-02-01T14:20:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUnAccountedBankrefNo status=SUCCESS method=MobileNumberSearch.validateUnAccountedBankrefNo()[pri:138, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateUnAccountedAmount()[pri:139, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="validateUnAccountedAmount" finished-at="2024-02-01T14:20:55 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUnAccountedAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="getResult" finished-at="2024-02-01T14:20:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUnAccountedAmount status=SUCCESS method=MobileNumberSearch.validateUnAccountedAmount()[pri:139, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateUnAccountedMode()[pri:140, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="validateUnAccountedMode" finished-at="2024-02-01T14:20:55 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUnAccountedMode -->
        <test-method signature="validateUnAccountedStatus()[pri:141, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="validateUnAccountedStatus" finished-at="2024-02-01T14:20:55 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUnAccountedStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="getResult" finished-at="2024-02-01T14:20:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUnAccountedMode status=SUCCESS method=MobileNumberSearch.validateUnAccountedMode()[pri:140, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVehicleNumber()[pri:144, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="validateVehicleNumber" finished-at="2024-02-01T14:20:55 IST" duration-ms="439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="getResult" finished-at="2024-02-01T14:20:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUnAccountedStatus status=SUCCESS method=MobileNumberSearch.validateUnAccountedStatus()[pri:141, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVehicleType()[pri:145, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="validateVehicleType" finished-at="2024-02-01T14:20:56 IST" duration-ms="492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVehicleType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:55 IST" name="getResult" finished-at="2024-02-01T14:20:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVehicleNumber status=SUCCESS method=MobileNumberSearch.validateVehicleNumber()[pri:144, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:56 IST" name="getResult" finished-at="2024-02-01T14:20:56 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVehicleType status=SUCCESS method=MobileNumberSearch.validateVehicleType()[pri:145, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileNumberGuestPasses()[pri:146, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:56 IST" name="mobileNumberGuestPasses" finished-at="2024-02-01T14:20:58 IST" duration-ms="2215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberGuestPasses -->
        <test-method signature="mobileNumberGuestPassesDates()[pri:147, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:58 IST" name="mobileNumberGuestPassesDates" finished-at="2024-02-01T14:21:00 IST" duration-ms="2004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberGuestPassesDates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:20:58 IST" name="getResult" finished-at="2024-02-01T14:20:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberGuestPasses status=SUCCESS method=MobileNumberSearch.mobileNumberGuestPasses()[pri:146, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:148, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:21:00 IST" name="logout" finished-at="2024-02-01T14:21:05 IST" duration-ms="5278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:21:00 IST" name="getResult" finished-at="2024-02-01T14:21:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberGuestPassesDates status=SUCCESS method=MobileNumberSearch.mobileNumberGuestPassesDates()[pri:147, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:21:05 IST" name="getResult" finished-at="2024-02-01T14:21:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=MobileNumberSearch.logout()[pri:148, instance:com.selenium.MobileNumberSearch@6cf0e0ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.MobileNumberSearch@6cf0e0ba]" started-at="2024-02-01T14:21:05 IST" name="tearDown" finished-at="2024-02-01T14:21:06 IST" duration-ms="546" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.MobileNumberSearch -->
    </test> <!-- MobileNumberSearch -->
    <test started-at="2024-02-01T14:21:06 IST" name="VehicleNumberSearch" finished-at="2024-02-01T14:23:26 IST" duration-ms="139834">
      <class name="com.selenium.VehicleNumberSearch">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:06 IST" name="setUp" finished-at="2024-02-01T14:21:09 IST" duration-ms="2628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:09 IST" name="login" finished-at="2024-02-01T14:21:15 IST" duration-ms="6562" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:15 IST" name="getResult" finished-at="2024-02-01T14:21:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=VehicleNumberSearch.login()[pri:1, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:15 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:21:20 IST" duration-ms="5202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:20 IST" name="getResult" finished-at="2024-02-01T14:21:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=VehicleNumberSearch.revenueDashboardOpen()[pri:2, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="redirectVehicleNumberSearchPage()[pri:3, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:20 IST" name="redirectVehicleNumberSearchPage" finished-at="2024-02-01T14:21:23 IST" duration-ms="2443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectVehicleNumberSearchPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:23 IST" name="getResult" finished-at="2024-02-01T14:21:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectVehicleNumberSearchPage status=SUCCESS method=VehicleNumberSearch.redirectVehicleNumberSearchPage()[pri:3, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleNumberEnter()[pri:4, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:23 IST" name="vehicleNumberEnter" finished-at="2024-02-01T14:21:25 IST" duration-ms="2081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleNumberEnter -->
        <test-method signature="vehicleNumberSubmit()[pri:5, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:25 IST" name="vehicleNumberSubmit" finished-at="2024-02-01T14:21:27 IST" duration-ms="2219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleNumberSubmit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:25 IST" name="getResult" finished-at="2024-02-01T14:21:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleNumberEnter status=SUCCESS method=VehicleNumberSearch.vehicleNumberEnter()[pri:4, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:27 IST" name="getResult" finished-at="2024-02-01T14:21:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleNumberSubmit status=SUCCESS method=VehicleNumberSearch.vehicleNumberSubmit()[pri:5, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleNumberTransactions()[pri:6, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:27 IST" name="vehicleNumberTransactions" finished-at="2024-02-01T14:21:28 IST" duration-ms="1026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleNumberTransactions -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:28 IST" name="getResult" finished-at="2024-02-01T14:21:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleNumberTransactions status=SUCCESS method=VehicleNumberSearch.vehicleNumberTransactions()[pri:6, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleNumberTransactionsDates()[pri:7, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:28 IST" name="vehicleNumberTransactionsDates" finished-at="2024-02-01T14:21:33 IST" duration-ms="4678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleNumberTransactionsDates -->
        <test-method signature="selectVNStartDateTransactions()[pri:8, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:33 IST" name="selectVNStartDateTransactions" finished-at="2024-02-01T14:21:39 IST" duration-ms="6500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectVNStartDateTransactions -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:33 IST" name="getResult" finished-at="2024-02-01T14:21:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleNumberTransactionsDates status=SUCCESS method=VehicleNumberSearch.vehicleNumberTransactionsDates()[pri:7, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:39 IST" name="getResult" finished-at="2024-02-01T14:21:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectVNStartDateTransactions status=SUCCESS method=VehicleNumberSearch.selectVNStartDateTransactions()[pri:8, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectVNEndDateTransactions()[pri:9, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:39 IST" name="selectVNEndDateTransactions" finished-at="2024-02-01T14:21:47 IST" duration-ms="7190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectVNEndDateTransactions -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:47 IST" name="getResult" finished-at="2024-02-01T14:21:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectVNEndDateTransactions status=SUCCESS method=VehicleNumberSearch.selectVNEndDateTransactions()[pri:9, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectVNTransactionCount()[pri:10, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:47 IST" name="selectVNTransactionCount" finished-at="2024-02-01T14:21:49 IST" duration-ms="2252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectVNTransactionCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:49 IST" name="getResult" finished-at="2024-02-01T14:21:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectVNTransactionCount status=SUCCESS method=VehicleNumberSearch.selectVNTransactionCount()[pri:10, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleNumberTransactionsTable()[pri:11, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:49 IST" name="vehicleNumberTransactionsTable" finished-at="2024-02-01T14:21:55 IST" duration-ms="6013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleNumberTransactionsTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="getResult" finished-at="2024-02-01T14:21:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleNumberTransactionsTable status=SUCCESS method=VehicleNumberSearch.vehicleNumberTransactionsTable()[pri:11, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVNTransactionSiteName()[pri:12, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="validateVNTransactionSiteName" finished-at="2024-02-01T14:21:55 IST" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVNTransactionSiteName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="getResult" finished-at="2024-02-01T14:21:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVNTransactionSiteName status=SUCCESS method=VehicleNumberSearch.validateVNTransactionSiteName()[pri:12, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVTransactionVehicleNumber()[pri:13, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="validateVTransactionVehicleNumber" finished-at="2024-02-01T14:21:55 IST" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVTransactionVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="getResult" finished-at="2024-02-01T14:21:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVTransactionVehicleNumber status=SUCCESS method=VehicleNumberSearch.validateVTransactionVehicleNumber()[pri:13, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVTransactionVehicleType()[pri:14, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="validateVTransactionVehicleType" finished-at="2024-02-01T14:21:55 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVTransactionVehicleType -->
        <test-method signature="validateVTransactionType()[pri:15, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="validateVTransactionType" finished-at="2024-02-01T14:21:55 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVTransactionType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="getResult" finished-at="2024-02-01T14:21:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVTransactionVehicleType status=SUCCESS method=VehicleNumberSearch.validateVTransactionVehicleType()[pri:14, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVTransactionCreatedDate()[pri:16, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="validateVTransactionCreatedDate" finished-at="2024-02-01T14:21:55 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVTransactionCreatedDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="getResult" finished-at="2024-02-01T14:21:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVTransactionType status=SUCCESS method=VehicleNumberSearch.validateVTransactionType()[pri:15, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVTransactionStartDate()[pri:17, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="validateVTransactionStartDate" finished-at="2024-02-01T14:21:55 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVTransactionStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="getResult" finished-at="2024-02-01T14:21:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVTransactionCreatedDate status=SUCCESS method=VehicleNumberSearch.validateVTransactionCreatedDate()[pri:16, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="getResult" finished-at="2024-02-01T14:21:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVTransactionStartDate status=SUCCESS method=VehicleNumberSearch.validateVTransactionStartDate()[pri:17, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVTransactionEndDate()[pri:18, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="validateVTransactionEndDate" finished-at="2024-02-01T14:21:55 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVTransactionEndDate -->
        <test-method signature="validateVTransactionPayU_reference()[pri:19, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="validateVTransactionPayU_reference" finished-at="2024-02-01T14:21:55 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVTransactionPayU_reference -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="getResult" finished-at="2024-02-01T14:21:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVTransactionEndDate status=SUCCESS method=VehicleNumberSearch.validateVTransactionEndDate()[pri:18, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="getResult" finished-at="2024-02-01T14:21:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVTransactionPayU_reference status=SUCCESS method=VehicleNumberSearch.validateVTransactionPayU_reference()[pri:19, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVTransactionId()[pri:20, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="validateVTransactionId" finished-at="2024-02-01T14:21:55 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVTransactionId -->
        <test-method signature="validateVTransactionAmount()[pri:21, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="validateVTransactionAmount" finished-at="2024-02-01T14:21:55 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVTransactionAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="getResult" finished-at="2024-02-01T14:21:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVTransactionId status=SUCCESS method=VehicleNumberSearch.validateVTransactionId()[pri:20, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVTransactionStatus()[pri:22, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="validateVTransactionStatus" finished-at="2024-02-01T14:21:55 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVTransactionStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="getResult" finished-at="2024-02-01T14:21:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVTransactionAmount status=SUCCESS method=VehicleNumberSearch.validateVTransactionAmount()[pri:21, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="getResult" finished-at="2024-02-01T14:21:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVTransactionStatus status=SUCCESS method=VehicleNumberSearch.validateVTransactionStatus()[pri:22, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleNumberPass()[pri:23, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="vehicleNumberPass" finished-at="2024-02-01T14:21:55 IST" duration-ms="449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleNumberPass -->
        <test-method signature="vehicleNumberPassDates()[pri:24, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="vehicleNumberPassDates" finished-at="2024-02-01T14:22:02 IST" duration-ms="6659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleNumberPassDates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:21:55 IST" name="getResult" finished-at="2024-02-01T14:21:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleNumberPass status=SUCCESS method=VehicleNumberSearch.vehicleNumberPass()[pri:23, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:02 IST" name="getResult" finished-at="2024-02-01T14:22:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleNumberPassDates status=SUCCESS method=VehicleNumberSearch.vehicleNumberPassDates()[pri:24, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectVStartDatePasses()[pri:25, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:02 IST" name="selectVStartDatePasses" finished-at="2024-02-01T14:22:04 IST" duration-ms="2258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectVStartDatePasses -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:04 IST" name="getResult" finished-at="2024-02-01T14:22:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectVStartDatePasses status=SUCCESS method=VehicleNumberSearch.selectVStartDatePasses()[pri:25, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectVEndDatePasses()[pri:26, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:04 IST" name="selectVEndDatePasses" finished-at="2024-02-01T14:22:06 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectVEndDatePasses -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:06 IST" name="getResult" finished-at="2024-02-01T14:22:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectVEndDatePasses status=SUCCESS method=VehicleNumberSearch.selectVEndDatePasses()[pri:26, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectVPassCount()[pri:27, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:06 IST" name="selectVPassCount" finished-at="2024-02-01T14:22:06 IST" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectVPassCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:06 IST" name="getResult" finished-at="2024-02-01T14:22:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectVPassCount status=SUCCESS method=VehicleNumberSearch.selectVPassCount()[pri:27, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="passTable()[pri:28, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:06 IST" name="passTable" finished-at="2024-02-01T14:22:12 IST" duration-ms="6028" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:12 IST" name="getResult" finished-at="2024-02-01T14:22:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passTable status=SUCCESS method=VehicleNumberSearch.passTable()[pri:28, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassesSiteName()[pri:32, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:12 IST" name="validatePassesSiteName" finished-at="2024-02-01T14:22:12 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesSiteName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:12 IST" name="getResult" finished-at="2024-02-01T14:22:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesSiteName status=SUCCESS method=VehicleNumberSearch.validatePassesSiteName()[pri:32, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassesVehicleNumber()[pri:33, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:12 IST" name="validatePassesVehicleNumber" finished-at="2024-02-01T14:22:13 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="getResult" finished-at="2024-02-01T14:22:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesVehicleNumber status=SUCCESS method=VehicleNumberSearch.validatePassesVehicleNumber()[pri:33, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassesVehicleType()[pri:34, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="validatePassesVehicleType" finished-at="2024-02-01T14:22:13 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesVehicleType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="getResult" finished-at="2024-02-01T14:22:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesVehicleType status=SUCCESS method=VehicleNumberSearch.validatePassesVehicleType()[pri:34, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassesType()[pri:35, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="validatePassesType" finished-at="2024-02-01T14:22:13 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesType -->
        <test-method signature="validatePassCreatedDateTimeHeader()[pri:36, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="validatePassCreatedDateTimeHeader" finished-at="2024-02-01T14:22:13 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassCreatedDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="getResult" finished-at="2024-02-01T14:22:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesType status=SUCCESS method=VehicleNumberSearch.validatePassesType()[pri:35, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="getResult" finished-at="2024-02-01T14:22:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassCreatedDateTimeHeader status=SUCCESS method=VehicleNumberSearch.validatePassCreatedDateTimeHeader()[pri:36, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassesCreatedDate()[pri:37, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="validatePassesCreatedDate" finished-at="2024-02-01T14:22:13 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesCreatedDate -->
        <test-method signature="validatePassStartDateTimeHeader()[pri:38, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="validatePassStartDateTimeHeader" finished-at="2024-02-01T14:22:13 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassStartDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="getResult" finished-at="2024-02-01T14:22:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesCreatedDate status=SUCCESS method=VehicleNumberSearch.validatePassesCreatedDate()[pri:37, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassesStartDate()[pri:39, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="validatePassesStartDate" finished-at="2024-02-01T14:22:13 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="getResult" finished-at="2024-02-01T14:22:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassStartDateTimeHeader status=SUCCESS method=VehicleNumberSearch.validatePassStartDateTimeHeader()[pri:38, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassEndDateTimeHeader()[pri:40, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="validatePassEndDateTimeHeader" finished-at="2024-02-01T14:22:13 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassEndDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="getResult" finished-at="2024-02-01T14:22:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesStartDate status=SUCCESS method=VehicleNumberSearch.validatePassesStartDate()[pri:39, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="getResult" finished-at="2024-02-01T14:22:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassEndDateTimeHeader status=SUCCESS method=VehicleNumberSearch.validatePassEndDateTimeHeader()[pri:40, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassesEndDate()[pri:41, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="validatePassesEndDate" finished-at="2024-02-01T14:22:13 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesEndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="getResult" finished-at="2024-02-01T14:22:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesEndDate status=SUCCESS method=VehicleNumberSearch.validatePassesEndDate()[pri:41, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassesPayU_reference()[pri:42, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="validatePassesPayU_reference" finished-at="2024-02-01T14:22:13 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesPayU_reference -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="getResult" finished-at="2024-02-01T14:22:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesPayU_reference status=SUCCESS method=VehicleNumberSearch.validatePassesPayU_reference()[pri:42, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassesTransactionId()[pri:43, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="validatePassesTransactionId" finished-at="2024-02-01T14:22:13 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesTransactionId -->
        <test-method signature="validatePassesAmount()[pri:44, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="validatePassesAmount" finished-at="2024-02-01T14:22:13 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="getResult" finished-at="2024-02-01T14:22:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesTransactionId status=SUCCESS method=VehicleNumberSearch.validatePassesTransactionId()[pri:43, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePassesStatus()[pri:45, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="validatePassesStatus" finished-at="2024-02-01T14:22:13 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePassesStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="getResult" finished-at="2024-02-01T14:22:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesAmount status=SUCCESS method=VehicleNumberSearch.validatePassesAmount()[pri:44, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mobileNumberReservation()[pri:46, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="mobileNumberReservation" finished-at="2024-02-01T14:22:15 IST" duration-ms="2212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileNumberReservation -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:13 IST" name="getResult" finished-at="2024-02-01T14:22:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePassesStatus status=SUCCESS method=VehicleNumberSearch.validatePassesStatus()[pri:45, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:15 IST" name="getResult" finished-at="2024-02-01T14:22:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileNumberReservation status=SUCCESS method=VehicleNumberSearch.mobileNumberReservation()[pri:46, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleNumberReservationDates()[pri:47, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:15 IST" name="vehicleNumberReservationDates" finished-at="2024-02-01T14:22:20 IST" duration-ms="4703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleNumberReservationDates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:20 IST" name="getResult" finished-at="2024-02-01T14:22:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleNumberReservationDates status=SUCCESS method=VehicleNumberSearch.vehicleNumberReservationDates()[pri:47, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectReservationsCount()[pri:50, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:20 IST" name="selectReservationsCount" finished-at="2024-02-01T14:22:24 IST" duration-ms="4267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectReservationsCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:24 IST" name="getResult" finished-at="2024-02-01T14:22:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectReservationsCount status=SUCCESS method=VehicleNumberSearch.selectReservationsCount()[pri:50, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="reservationsTable()[pri:51, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:24 IST" name="reservationsTable" finished-at="2024-02-01T14:22:30 IST" duration-ms="6041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reservationsTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="getResult" finished-at="2024-02-01T14:22:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=reservationsTable status=SUCCESS method=VehicleNumberSearch.reservationsTable()[pri:51, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReservationsSiteName()[pri:52, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="validateReservationsSiteName" finished-at="2024-02-01T14:22:30 IST" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsSiteName -->
        <test-method signature="validateReservationsVehicleNumber()[pri:53, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="validateReservationsVehicleNumber" finished-at="2024-02-01T14:22:30 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="getResult" finished-at="2024-02-01T14:22:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsSiteName status=SUCCESS method=VehicleNumberSearch.validateReservationsSiteName()[pri:52, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="getResult" finished-at="2024-02-01T14:22:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsVehicleNumber status=SUCCESS method=VehicleNumberSearch.validateReservationsVehicleNumber()[pri:53, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReservationsVehicleType()[pri:54, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="validateReservationsVehicleType" finished-at="2024-02-01T14:22:30 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsVehicleType -->
        <test-method signature="validateReservationsType()[pri:55, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="validateReservationsType" finished-at="2024-02-01T14:22:30 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="getResult" finished-at="2024-02-01T14:22:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsVehicleType status=SUCCESS method=VehicleNumberSearch.validateReservationsVehicleType()[pri:54, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReserveCreatedDateTimeHeader()[pri:56, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="validateReserveCreatedDateTimeHeader" finished-at="2024-02-01T14:22:30 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReserveCreatedDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="getResult" finished-at="2024-02-01T14:22:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsType status=SUCCESS method=VehicleNumberSearch.validateReservationsType()[pri:55, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReservationsCreatedDate()[pri:57, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="validateReservationsCreatedDate" finished-at="2024-02-01T14:22:30 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsCreatedDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="getResult" finished-at="2024-02-01T14:22:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReserveCreatedDateTimeHeader status=SUCCESS method=VehicleNumberSearch.validateReserveCreatedDateTimeHeader()[pri:56, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="getResult" finished-at="2024-02-01T14:22:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsCreatedDate status=SUCCESS method=VehicleNumberSearch.validateReservationsCreatedDate()[pri:57, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReserveStartDateTimeHeader()[pri:58, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="validateReserveStartDateTimeHeader" finished-at="2024-02-01T14:22:30 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReserveStartDateTimeHeader -->
        <test-method signature="validateReservationsStartDate()[pri:59, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="validateReservationsStartDate" finished-at="2024-02-01T14:22:30 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="getResult" finished-at="2024-02-01T14:22:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReserveStartDateTimeHeader status=SUCCESS method=VehicleNumberSearch.validateReserveStartDateTimeHeader()[pri:58, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="getResult" finished-at="2024-02-01T14:22:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsStartDate status=SUCCESS method=VehicleNumberSearch.validateReservationsStartDate()[pri:59, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReserveEndDateTimeHeader()[pri:60, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="validateReserveEndDateTimeHeader" finished-at="2024-02-01T14:22:30 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReserveEndDateTimeHeader -->
        <test-method signature="validateReservationsEndDate()[pri:61, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="validateReservationsEndDate" finished-at="2024-02-01T14:22:30 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsEndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="getResult" finished-at="2024-02-01T14:22:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReserveEndDateTimeHeader status=SUCCESS method=VehicleNumberSearch.validateReserveEndDateTimeHeader()[pri:60, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReservationsPayU_reference()[pri:62, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="validateReservationsPayU_reference" finished-at="2024-02-01T14:22:30 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsPayU_reference -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="getResult" finished-at="2024-02-01T14:22:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsEndDate status=SUCCESS method=VehicleNumberSearch.validateReservationsEndDate()[pri:61, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="getResult" finished-at="2024-02-01T14:22:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsPayU_reference status=SUCCESS method=VehicleNumberSearch.validateReservationsPayU_reference()[pri:62, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReservationsTransactionId()[pri:63, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="validateReservationsTransactionId" finished-at="2024-02-01T14:22:30 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsTransactionId -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="getResult" finished-at="2024-02-01T14:22:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsTransactionId status=SUCCESS method=VehicleNumberSearch.validateReservationsTransactionId()[pri:63, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReservationsAmount()[pri:64, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="validateReservationsAmount" finished-at="2024-02-01T14:22:30 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="getResult" finished-at="2024-02-01T14:22:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsAmount status=SUCCESS method=VehicleNumberSearch.validateReservationsAmount()[pri:64, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateReservationsStatus()[pri:65, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="validateReservationsStatus" finished-at="2024-02-01T14:22:30 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateReservationsStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="getResult" finished-at="2024-02-01T14:22:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReservationsStatus status=SUCCESS method=VehicleNumberSearch.validateReservationsStatus()[pri:65, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleNumberCheckInOut()[pri:66, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:30 IST" name="vehicleNumberCheckInOut" finished-at="2024-02-01T14:22:33 IST" duration-ms="3231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleNumberCheckInOut -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:33 IST" name="getResult" finished-at="2024-02-01T14:22:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleNumberCheckInOut status=SUCCESS method=VehicleNumberSearch.vehicleNumberCheckInOut()[pri:66, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleNumberCheckInOutDates()[pri:67, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:33 IST" name="vehicleNumberCheckInOutDates" finished-at="2024-02-01T14:22:38 IST" duration-ms="4702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleNumberCheckInOutDates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:38 IST" name="getResult" finished-at="2024-02-01T14:22:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleNumberCheckInOutDates status=SUCCESS method=VehicleNumberSearch.vehicleNumberCheckInOutDates()[pri:67, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectVPassCheckInOut()[pri:70, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:38 IST" name="selectVPassCheckInOut" finished-at="2024-02-01T14:22:40 IST" duration-ms="2271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectVPassCheckInOut -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:40 IST" name="getResult" finished-at="2024-02-01T14:22:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectVPassCheckInOut status=SUCCESS method=VehicleNumberSearch.selectVPassCheckInOut()[pri:70, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="checkInOutVTable()[pri:71, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:40 IST" name="checkInOutVTable" finished-at="2024-02-01T14:22:46 IST" duration-ms="6023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkInOutVTable -->
        <test-method signature="validateVCheckInOutSiteName()[pri:72, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="validateVCheckInOutSiteName" finished-at="2024-02-01T14:22:46 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVCheckInOutSiteName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="getResult" finished-at="2024-02-01T14:22:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkInOutVTable status=SUCCESS method=VehicleNumberSearch.checkInOutVTable()[pri:71, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVCheckInOutVehicleType()[pri:73, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="validateVCheckInOutVehicleType" finished-at="2024-02-01T14:22:46 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVCheckInOutVehicleType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="getResult" finished-at="2024-02-01T14:22:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVCheckInOutSiteName status=SUCCESS method=VehicleNumberSearch.validateVCheckInOutSiteName()[pri:72, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="getResult" finished-at="2024-02-01T14:22:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVCheckInOutVehicleType status=SUCCESS method=VehicleNumberSearch.validateVCheckInOutVehicleType()[pri:73, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVCheckInOutVehicleNumber()[pri:74, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="validateVCheckInOutVehicleNumber" finished-at="2024-02-01T14:22:46 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVCheckInOutVehicleNumber -->
        <test-method signature="validateCheckInDateTimeHeader()[pri:75, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="validateCheckInDateTimeHeader" finished-at="2024-02-01T14:22:46 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCheckInDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="getResult" finished-at="2024-02-01T14:22:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVCheckInOutVehicleNumber status=SUCCESS method=VehicleNumberSearch.validateVCheckInOutVehicleNumber()[pri:74, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVCheckInRow()[pri:76, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="validateVCheckInRow" finished-at="2024-02-01T14:22:46 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVCheckInRow -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="getResult" finished-at="2024-02-01T14:22:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCheckInDateTimeHeader status=SUCCESS method=VehicleNumberSearch.validateCheckInDateTimeHeader()[pri:75, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="getResult" finished-at="2024-02-01T14:22:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVCheckInRow status=SUCCESS method=VehicleNumberSearch.validateVCheckInRow()[pri:76, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCheckOutDateTimeHeader()[pri:77, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="validateCheckOutDateTimeHeader" finished-at="2024-02-01T14:22:46 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCheckOutDateTimeHeader -->
        <test-method signature="validateVCheckOutRow()[pri:78, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="validateVCheckOutRow" finished-at="2024-02-01T14:22:46 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVCheckOutRow -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="getResult" finished-at="2024-02-01T14:22:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCheckOutDateTimeHeader status=SUCCESS method=VehicleNumberSearch.validateCheckOutDateTimeHeader()[pri:77, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="getResult" finished-at="2024-02-01T14:22:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVCheckOutRow status=SUCCESS method=VehicleNumberSearch.validateVCheckOutRow()[pri:78, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVCheckInOutType()[pri:79, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="validateVCheckInOutType" finished-at="2024-02-01T14:22:46 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVCheckInOutType -->
        <test-method signature="validateVCheckInOutPayU_reference()[pri:80, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="validateVCheckInOutPayU_reference" finished-at="2024-02-01T14:22:46 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVCheckInOutPayU_reference -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="getResult" finished-at="2024-02-01T14:22:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVCheckInOutType status=SUCCESS method=VehicleNumberSearch.validateVCheckInOutType()[pri:79, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="getResult" finished-at="2024-02-01T14:22:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVCheckInOutPayU_reference status=SUCCESS method=VehicleNumberSearch.validateVCheckInOutPayU_reference()[pri:80, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVCheckInOutTransactionId()[pri:81, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="validateVCheckInOutTransactionId" finished-at="2024-02-01T14:22:46 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVCheckInOutTransactionId -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="getResult" finished-at="2024-02-01T14:22:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVCheckInOutTransactionId status=SUCCESS method=VehicleNumberSearch.validateVCheckInOutTransactionId()[pri:81, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVCheckInOutAmount()[pri:82, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="validateVCheckInOutAmount" finished-at="2024-02-01T14:22:46 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVCheckInOutAmount -->
        <test-method signature="validateVCheckInOutDueAmount()[pri:83, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="validateVCheckInOutDueAmount" finished-at="2024-02-01T14:22:46 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVCheckInOutDueAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="getResult" finished-at="2024-02-01T14:22:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVCheckInOutAmount status=SUCCESS method=VehicleNumberSearch.validateVCheckInOutAmount()[pri:82, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="getResult" finished-at="2024-02-01T14:22:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVCheckInOutDueAmount status=SUCCESS method=VehicleNumberSearch.validateVCheckInOutDueAmount()[pri:83, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVCheckInOutStatus()[pri:84, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="validateVCheckInOutStatus" finished-at="2024-02-01T14:22:46 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVCheckInOutStatus -->
        <test-method signature="vehicleNumberDueAmount()[pri:85, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="vehicleNumberDueAmount" finished-at="2024-02-01T14:22:49 IST" duration-ms="2212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleNumberDueAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:46 IST" name="getResult" finished-at="2024-02-01T14:22:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVCheckInOutStatus status=SUCCESS method=VehicleNumberSearch.validateVCheckInOutStatus()[pri:84, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:49 IST" name="getResult" finished-at="2024-02-01T14:22:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleNumberDueAmount status=SUCCESS method=VehicleNumberSearch.vehicleNumberDueAmount()[pri:85, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleNumberDueAmountDates()[pri:86, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:49 IST" name="vehicleNumberDueAmountDates" finished-at="2024-02-01T14:22:53 IST" duration-ms="4672" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleNumberDueAmountDates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:53 IST" name="getResult" finished-at="2024-02-01T14:22:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleNumberDueAmountDates status=SUCCESS method=VehicleNumberSearch.vehicleNumberDueAmountDates()[pri:86, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectVDueAmountCount()[pri:89, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:53 IST" name="selectVDueAmountCount" finished-at="2024-02-01T14:22:58 IST" duration-ms="4264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectVDueAmountCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:58 IST" name="getResult" finished-at="2024-02-01T14:22:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectVDueAmountCount status=SUCCESS method=VehicleNumberSearch.selectVDueAmountCount()[pri:89, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dueAmountVTable()[pri:90, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:22:58 IST" name="dueAmountVTable" finished-at="2024-02-01T14:23:04 IST" duration-ms="6008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dueAmountVTable -->
        <test-method signature="validateVDueAmountSiteName()[pri:91, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="validateVDueAmountSiteName" finished-at="2024-02-01T14:23:04 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVDueAmountSiteName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="getResult" finished-at="2024-02-01T14:23:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dueAmountVTable status=SUCCESS method=VehicleNumberSearch.dueAmountVTable()[pri:90, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVDueAmountVehicleNumber()[pri:92, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="validateVDueAmountVehicleNumber" finished-at="2024-02-01T14:23:04 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVDueAmountVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="getResult" finished-at="2024-02-01T14:23:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVDueAmountSiteName status=SUCCESS method=VehicleNumberSearch.validateVDueAmountSiteName()[pri:91, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVDueAmountVehicleType()[pri:93, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="validateVDueAmountVehicleType" finished-at="2024-02-01T14:23:04 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVDueAmountVehicleType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="getResult" finished-at="2024-02-01T14:23:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVDueAmountVehicleNumber status=SUCCESS method=VehicleNumberSearch.validateVDueAmountVehicleNumber()[pri:92, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVDueAmountPayU_reference()[pri:94, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="validateVDueAmountPayU_reference" finished-at="2024-02-01T14:23:04 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVDueAmountPayU_reference -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="getResult" finished-at="2024-02-01T14:23:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVDueAmountVehicleType status=SUCCESS method=VehicleNumberSearch.validateVDueAmountVehicleType()[pri:93, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateDueAmountCreatedDateTimeHeader()[pri:95, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="validateDueAmountCreatedDateTimeHeader" finished-at="2024-02-01T14:23:04 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDueAmountCreatedDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="getResult" finished-at="2024-02-01T14:23:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVDueAmountPayU_reference status=SUCCESS method=VehicleNumberSearch.validateVDueAmountPayU_reference()[pri:94, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="getResult" finished-at="2024-02-01T14:23:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDueAmountCreatedDateTimeHeader status=SUCCESS method=VehicleNumberSearch.validateDueAmountCreatedDateTimeHeader()[pri:95, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVDueAmountCreatedDate()[pri:96, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="validateVDueAmountCreatedDate" finished-at="2024-02-01T14:23:04 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVDueAmountCreatedDate -->
        <test-method signature="validateVDueAmountsTransactionId()[pri:97, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="validateVDueAmountsTransactionId" finished-at="2024-02-01T14:23:04 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVDueAmountsTransactionId -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="getResult" finished-at="2024-02-01T14:23:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVDueAmountCreatedDate status=SUCCESS method=VehicleNumberSearch.validateVDueAmountCreatedDate()[pri:96, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="getResult" finished-at="2024-02-01T14:23:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVDueAmountsTransactionId status=SUCCESS method=VehicleNumberSearch.validateVDueAmountsTransactionId()[pri:97, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVDueAmountAmount()[pri:98, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="validateVDueAmountAmount" finished-at="2024-02-01T14:23:04 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVDueAmountAmount -->
        <test-method signature="validateVDueAmountStatus()[pri:99, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="validateVDueAmountStatus" finished-at="2024-02-01T14:23:04 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVDueAmountStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="getResult" finished-at="2024-02-01T14:23:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVDueAmountAmount status=SUCCESS method=VehicleNumberSearch.validateVDueAmountAmount()[pri:98, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="getResult" finished-at="2024-02-01T14:23:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVDueAmountStatus status=SUCCESS method=VehicleNumberSearch.validateVDueAmountStatus()[pri:99, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleNumberBlockListClick()[pri:100, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:04 IST" name="vehicleNumberBlockListClick" finished-at="2024-02-01T14:23:06 IST" duration-ms="2215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleNumberBlockListClick -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:06 IST" name="getResult" finished-at="2024-02-01T14:23:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleNumberBlockListClick status=SUCCESS method=VehicleNumberSearch.vehicleNumberBlockListClick()[pri:100, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleNumberBlockListDates()[pri:101, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:06 IST" name="vehicleNumberBlockListDates" finished-at="2024-02-01T14:23:11 IST" duration-ms="4722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleNumberBlockListDates -->
        <test-method signature="selectVBlockListCount()[pri:104, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:11 IST" name="selectVBlockListCount" finished-at="2024-02-01T14:23:13 IST" duration-ms="2224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectVBlockListCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:11 IST" name="getResult" finished-at="2024-02-01T14:23:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleNumberBlockListDates status=SUCCESS method=VehicleNumberSearch.vehicleNumberBlockListDates()[pri:101, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:13 IST" name="getResult" finished-at="2024-02-01T14:23:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectVBlockListCount status=SUCCESS method=VehicleNumberSearch.selectVBlockListCount()[pri:104, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vBlockListTable()[pri:105, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:13 IST" name="vBlockListTable" finished-at="2024-02-01T14:23:19 IST" duration-ms="6019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vBlockListTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:19 IST" name="getResult" finished-at="2024-02-01T14:23:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vBlockListTable status=SUCCESS method=VehicleNumberSearch.vBlockListTable()[pri:105, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVBlockListSiteName()[pri:106, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:19 IST" name="validateVBlockListSiteName" finished-at="2024-02-01T14:23:19 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVBlockListSiteName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:19 IST" name="getResult" finished-at="2024-02-01T14:23:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVBlockListSiteName status=SUCCESS method=VehicleNumberSearch.validateVBlockListSiteName()[pri:106, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVBlockListVehicleNumber()[pri:107, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:19 IST" name="validateVBlockListVehicleNumber" finished-at="2024-02-01T14:23:19 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVBlockListVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:19 IST" name="getResult" finished-at="2024-02-01T14:23:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVBlockListVehicleNumber status=SUCCESS method=VehicleNumberSearch.validateVBlockListVehicleNumber()[pri:107, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVBlockListVehicleType()[pri:108, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:19 IST" name="validateVBlockListVehicleType" finished-at="2024-02-01T14:23:19 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVBlockListVehicleType -->
        <test-method signature="validateBlockListCreatedDateTimeHeader()[pri:109, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:19 IST" name="validateBlockListCreatedDateTimeHeader" finished-at="2024-02-01T14:23:19 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBlockListCreatedDateTimeHeader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:19 IST" name="getResult" finished-at="2024-02-01T14:23:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVBlockListVehicleType status=SUCCESS method=VehicleNumberSearch.validateVBlockListVehicleType()[pri:108, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVBlockListnCreatedDate()[pri:110, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:19 IST" name="validateVBlockListnCreatedDate" finished-at="2024-02-01T14:23:19 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVBlockListnCreatedDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:19 IST" name="getResult" finished-at="2024-02-01T14:23:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBlockListCreatedDateTimeHeader status=SUCCESS method=VehicleNumberSearch.validateBlockListCreatedDateTimeHeader()[pri:109, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:19 IST" name="getResult" finished-at="2024-02-01T14:23:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVBlockListnCreatedDate status=SUCCESS method=VehicleNumberSearch.validateVBlockListnCreatedDate()[pri:110, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateVBlockListAmount()[pri:111, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:19 IST" name="validateVBlockListAmount" finished-at="2024-02-01T14:23:19 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVBlockListAmount -->
        <test-method signature="validateVBlockListStatus()[pri:112, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:19 IST" name="validateVBlockListStatus" finished-at="2024-02-01T14:23:19 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVBlockListStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:19 IST" name="getResult" finished-at="2024-02-01T14:23:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVBlockListAmount status=SUCCESS method=VehicleNumberSearch.validateVBlockListAmount()[pri:111, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleNumberGuestPasses()[pri:113, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:19 IST" name="vehicleNumberGuestPasses" finished-at="2024-02-01T14:23:21 IST" duration-ms="2208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleNumberGuestPasses -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:19 IST" name="getResult" finished-at="2024-02-01T14:23:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVBlockListStatus status=SUCCESS method=VehicleNumberSearch.validateVBlockListStatus()[pri:112, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:21 IST" name="getResult" finished-at="2024-02-01T14:23:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleNumberGuestPasses status=SUCCESS method=VehicleNumberSearch.vehicleNumberGuestPasses()[pri:113, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleNumberGuestPassesDates()[pri:114, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:21 IST" name="vehicleNumberGuestPassesDates" finished-at="2024-02-01T14:23:23 IST" duration-ms="2007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleNumberGuestPassesDates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:23 IST" name="getResult" finished-at="2024-02-01T14:23:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleNumberGuestPassesDates status=SUCCESS method=VehicleNumberSearch.vehicleNumberGuestPassesDates()[pri:114, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:115, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:23 IST" name="logout" finished-at="2024-02-01T14:23:25 IST" duration-ms="2287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:25 IST" name="getResult" finished-at="2024-02-01T14:23:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=VehicleNumberSearch.logout()[pri:115, instance:com.selenium.VehicleNumberSearch@2d3379b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.VehicleNumberSearch@2d3379b4]" started-at="2024-02-01T14:23:25 IST" name="tearDown" finished-at="2024-02-01T14:23:26 IST" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.VehicleNumberSearch -->
    </test> <!-- VehicleNumberSearch -->
    <test started-at="2024-02-01T14:23:26 IST" name="TicketNumberSearch" finished-at="2024-02-01T14:24:19 IST" duration-ms="52692">
      <class name="com.selenium.TicketNumberSearch">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:23:26 IST" name="setUp" finished-at="2024-02-01T14:23:28 IST" duration-ms="2454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:23:28 IST" name="login" finished-at="2024-02-01T14:23:34 IST" duration-ms="6126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:23:34 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:23:40 IST" duration-ms="5181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:23:34 IST" name="getResult" finished-at="2024-02-01T14:23:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=TicketNumberSearch.login()[pri:1, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickReportsAnalyticsPage()[pri:3, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:23:40 IST" name="clickReportsAnalyticsPage" finished-at="2024-02-01T14:23:42 IST" duration-ms="2221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickReportsAnalyticsPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:23:40 IST" name="getResult" finished-at="2024-02-01T14:23:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=TicketNumberSearch.revenueDashboardOpen()[pri:2, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="ticketNumberSearchPage()[pri:4, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:23:42 IST" name="ticketNumberSearchPage" finished-at="2024-02-01T14:23:46 IST" duration-ms="4094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketNumberSearchPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:23:42 IST" name="getResult" finished-at="2024-02-01T14:23:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickReportsAnalyticsPage status=SUCCESS method=TicketNumberSearch.clickReportsAnalyticsPage()[pri:3, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="ticketNumberEnterInvalid()[pri:5, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:23:46 IST" name="ticketNumberEnterInvalid" finished-at="2024-02-01T14:23:48 IST" duration-ms="2034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketNumberEnterInvalid -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:23:46 IST" name="getResult" finished-at="2024-02-01T14:23:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ticketNumberSearchPage status=SUCCESS method=TicketNumberSearch.ticketNumberSearchPage()[pri:4, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="ticketNumberSubmit()[pri:6, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:23:48 IST" name="ticketNumberSubmit" finished-at="2024-02-01T14:23:50 IST" duration-ms="2274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketNumberSubmit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:23:48 IST" name="getResult" finished-at="2024-02-01T14:23:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ticketNumberEnterInvalid status=SUCCESS method=TicketNumberSearch.ticketNumberEnterInvalid()[pri:5, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:23:50 IST" name="getResult" finished-at="2024-02-01T14:23:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ticketNumberSubmit status=SUCCESS method=TicketNumberSearch.ticketNumberSubmit()[pri:6, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectTicketNumberSearchCount()[pri:7, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:23:50 IST" name="selectTicketNumberSearchCount" finished-at="2024-02-01T14:23:53 IST" duration-ms="2256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTicketNumberSearchCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:23:53 IST" name="getResult" finished-at="2024-02-01T14:23:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectTicketNumberSearchCount status=SUCCESS method=TicketNumberSearch.selectTicketNumberSearchCount()[pri:7, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="ticketNumberTransactionsTable()[pri:8, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:23:53 IST" name="ticketNumberTransactionsTable" finished-at="2024-02-01T14:23:59 IST" duration-ms="6050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketNumberTransactionsTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:23:59 IST" name="getResult" finished-at="2024-02-01T14:23:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ticketNumberTransactionsTable status=SUCCESS method=TicketNumberSearch.ticketNumberTransactionsTable()[pri:8, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="ticketNumberSearchPageAgain()[pri:9, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:23:59 IST" name="ticketNumberSearchPageAgain" finished-at="2024-02-01T14:24:03 IST" duration-ms="4213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketNumberSearchPageAgain -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:03 IST" name="getResult" finished-at="2024-02-01T14:24:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ticketNumberSearchPageAgain status=SUCCESS method=TicketNumberSearch.ticketNumberSearchPageAgain()[pri:9, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="ticketNumberEnterValid()[pri:10, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:03 IST" name="ticketNumberEnterValid" finished-at="2024-02-01T14:24:05 IST" duration-ms="2042" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketNumberEnterValid -->
        <test-method signature="ticketNumberSubmitAgain()[pri:11, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:05 IST" name="ticketNumberSubmitAgain" finished-at="2024-02-01T14:24:07 IST" duration-ms="2230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketNumberSubmitAgain -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:05 IST" name="getResult" finished-at="2024-02-01T14:24:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ticketNumberEnterValid status=SUCCESS method=TicketNumberSearch.ticketNumberEnterValid()[pri:10, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:07 IST" name="getResult" finished-at="2024-02-01T14:24:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ticketNumberSubmitAgain status=SUCCESS method=TicketNumberSearch.ticketNumberSubmitAgain()[pri:11, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectTicketNumberSearchCountAgain()[pri:12, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:07 IST" name="selectTicketNumberSearchCountAgain" finished-at="2024-02-01T14:24:09 IST" duration-ms="2264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTicketNumberSearchCountAgain -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:09 IST" name="getResult" finished-at="2024-02-01T14:24:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectTicketNumberSearchCountAgain status=SUCCESS method=TicketNumberSearch.selectTicketNumberSearchCountAgain()[pri:12, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="ticketNumberTableValid()[pri:13, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:09 IST" name="ticketNumberTableValid" finished-at="2024-02-01T14:24:15 IST" duration-ms="6080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ticketNumberTableValid -->
        <test-method signature="validateTicketTransactionId()[pri:14, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:15 IST" name="validateTicketTransactionId" finished-at="2024-02-01T14:24:15 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTicketTransactionId -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:15 IST" name="getResult" finished-at="2024-02-01T14:24:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ticketNumberTableValid status=SUCCESS method=TicketNumberSearch.ticketNumberTableValid()[pri:13, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateTicketTransactionType()[pri:15, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:15 IST" name="validateTicketTransactionType" finished-at="2024-02-01T14:24:15 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTicketTransactionType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:15 IST" name="getResult" finished-at="2024-02-01T14:24:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTicketTransactionId status=SUCCESS method=TicketNumberSearch.validateTicketTransactionId()[pri:14, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateTicketVehicleNumber()[pri:16, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:15 IST" name="validateTicketVehicleNumber" finished-at="2024-02-01T14:24:15 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTicketVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:15 IST" name="getResult" finished-at="2024-02-01T14:24:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTicketTransactionType status=SUCCESS method=TicketNumberSearch.validateTicketTransactionType()[pri:15, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:15 IST" name="getResult" finished-at="2024-02-01T14:24:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTicketVehicleNumber status=SUCCESS method=TicketNumberSearch.validateTicketVehicleNumber()[pri:16, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateTicketDateTime()[pri:17, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:15 IST" name="validateTicketDateTime" finished-at="2024-02-01T14:24:15 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTicketDateTime -->
        <test-method signature="validateTicketStartDate()[pri:18, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:15 IST" name="validateTicketStartDate" finished-at="2024-02-01T14:24:15 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTicketStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:15 IST" name="getResult" finished-at="2024-02-01T14:24:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTicketDateTime status=SUCCESS method=TicketNumberSearch.validateTicketDateTime()[pri:17, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:15 IST" name="getResult" finished-at="2024-02-01T14:24:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTicketStartDate status=SUCCESS method=TicketNumberSearch.validateTicketStartDate()[pri:18, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateTicketEndDate()[pri:19, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:15 IST" name="validateTicketEndDate" finished-at="2024-02-01T14:24:16 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTicketEndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:16 IST" name="getResult" finished-at="2024-02-01T14:24:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTicketEndDate status=SUCCESS method=TicketNumberSearch.validateTicketEndDate()[pri:19, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateTicketAmount()[pri:20, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:16 IST" name="validateTicketAmount" finished-at="2024-02-01T14:24:16 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTicketAmount -->
        <test-method signature="validateTicketStatus()[pri:21, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:16 IST" name="validateTicketStatus" finished-at="2024-02-01T14:24:16 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTicketStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:16 IST" name="getResult" finished-at="2024-02-01T14:24:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTicketAmount status=SUCCESS method=TicketNumberSearch.validateTicketAmount()[pri:20, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:22, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:16 IST" name="logout" finished-at="2024-02-01T14:24:18 IST" duration-ms="2258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:16 IST" name="getResult" finished-at="2024-02-01T14:24:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTicketStatus status=SUCCESS method=TicketNumberSearch.validateTicketStatus()[pri:21, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:18 IST" name="tearDown" finished-at="2024-02-01T14:24:19 IST" duration-ms="777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.TicketNumberSearch@c730b35]" started-at="2024-02-01T14:24:18 IST" name="getResult" finished-at="2024-02-01T14:24:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=TicketNumberSearch.logout()[pri:22, instance:com.selenium.TicketNumberSearch@c730b35] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.selenium.TicketNumberSearch -->
    </test> <!-- TicketNumberSearch -->
    <test started-at="2024-02-01T14:24:19 IST" name="SiteReports" finished-at="2024-02-01T14:29:59 IST" duration-ms="340884">
      <class name="com.selenium.SiteReports">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:24:19 IST" name="setUp" finished-at="2024-02-01T14:24:21 IST" duration-ms="2752" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:24:21 IST" name="login" finished-at="2024-02-01T14:24:28 IST" duration-ms="6461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:24:28 IST" name="getResult" finished-at="2024-02-01T14:24:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=SiteReports.login()[pri:1, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:24:28 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:24:33 IST" duration-ms="5194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method signature="reportsAnalyticsPage()[pri:3, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:24:33 IST" name="reportsAnalyticsPage" finished-at="2024-02-01T14:24:35 IST" duration-ms="2244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportsAnalyticsPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:24:33 IST" name="getResult" finished-at="2024-02-01T14:24:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=SiteReports.revenueDashboardOpen()[pri:2, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:24:35 IST" name="getResult" finished-at="2024-02-01T14:24:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=reportsAnalyticsPage status=SUCCESS method=SiteReports.reportsAnalyticsPage()[pri:3, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteReportPage()[pri:4, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:24:35 IST" name="siteReportPage" finished-at="2024-02-01T14:24:39 IST" duration-ms="4144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteReportPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:24:39 IST" name="getResult" finished-at="2024-02-01T14:24:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteReportPage status=SUCCESS method=SiteReports.siteReportPage()[pri:4, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteReportsDatesEnabled()[pri:5, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:24:39 IST" name="siteReportsDatesEnabled" finished-at="2024-02-01T14:24:48 IST" duration-ms="8602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteReportsDatesEnabled -->
        <test-method signature="getMonthRevenue()[pri:6, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:24:48 IST" name="getMonthRevenue" finished-at="2024-02-01T14:24:58 IST" duration-ms="10261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMonthRevenue -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:24:48 IST" name="getResult" finished-at="2024-02-01T14:24:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteReportsDatesEnabled status=SUCCESS method=SiteReports.siteReportsDatesEnabled()[pri:5, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:24:58 IST" name="getResult" finished-at="2024-02-01T14:24:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getMonthRevenue status=SUCCESS method=SiteReports.getMonthRevenue()[pri:6, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getWeekSiteRevenue()[pri:7, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:24:58 IST" name="getWeekSiteRevenue" finished-at="2024-02-01T14:25:02 IST" duration-ms="4007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWeekSiteRevenue -->
        <test-method signature="getDaySiteRevenue()[pri:8, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:02 IST" name="getDaySiteRevenue" finished-at="2024-02-01T14:25:06 IST" duration-ms="4019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDaySiteRevenue -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:02 IST" name="getResult" finished-at="2024-02-01T14:25:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getWeekSiteRevenue status=SUCCESS method=SiteReports.getWeekSiteRevenue()[pri:7, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:06 IST" name="getResult" finished-at="2024-02-01T14:25:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getDaySiteRevenue status=SUCCESS method=SiteReports.getDaySiteRevenue()[pri:8, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectSiteRevenueCount()[pri:9, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:06 IST" name="selectSiteRevenueCount" finished-at="2024-02-01T14:25:08 IST" duration-ms="2050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectSiteRevenueCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:08 IST" name="getResult" finished-at="2024-02-01T14:25:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectSiteRevenueCount status=SUCCESS method=SiteReports.selectSiteRevenueCount()[pri:9, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteRevenueTable()[pri:10, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:08 IST" name="siteRevenueTable" finished-at="2024-02-01T14:25:26 IST" duration-ms="17207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteRevenueTable -->
        <test-method signature="validateVehicleType()[pri:11, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="validateVehicleType" finished-at="2024-02-01T14:25:26 IST" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVehicleType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="getResult" finished-at="2024-02-01T14:25:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteRevenueTable status=SUCCESS method=SiteReports.siteRevenueTable()[pri:10, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateSiteReportsCashAmount()[pri:12, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="validateSiteReportsCashAmount" finished-at="2024-02-01T14:25:26 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSiteReportsCashAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="getResult" finished-at="2024-02-01T14:25:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVehicleType status=SUCCESS method=SiteReports.validateVehicleType()[pri:11, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="getResult" finished-at="2024-02-01T14:25:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSiteReportsCashAmount status=SUCCESS method=SiteReports.validateSiteReportsCashAmount()[pri:12, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateSiteReportsCardAmount()[pri:13, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="validateSiteReportsCardAmount" finished-at="2024-02-01T14:25:26 IST" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSiteReportsCardAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="getResult" finished-at="2024-02-01T14:25:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSiteReportsCardAmount status=SUCCESS method=SiteReports.validateSiteReportsCardAmount()[pri:13, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateSiteReportsUPIAmount()[pri:14, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="validateSiteReportsUPIAmount" finished-at="2024-02-01T14:25:26 IST" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSiteReportsUPIAmount -->
        <test-method signature="validateSiteReportsPassAmount()[pri:15, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="validateSiteReportsPassAmount" finished-at="2024-02-01T14:25:26 IST" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSiteReportsPassAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="getResult" finished-at="2024-02-01T14:25:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSiteReportsUPIAmount status=SUCCESS method=SiteReports.validateSiteReportsUPIAmount()[pri:14, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="getResult" finished-at="2024-02-01T14:25:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSiteReportsPassAmount status=SUCCESS method=SiteReports.validateSiteReportsPassAmount()[pri:15, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateSiteReports_ReservationAmount()[pri:16, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="validateSiteReports_ReservationAmount" finished-at="2024-02-01T14:25:26 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSiteReports_ReservationAmount -->
        <test-method signature="validateSiteReports_DueAmount()[pri:17, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="validateSiteReports_DueAmount" finished-at="2024-02-01T14:25:26 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSiteReports_DueAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="getResult" finished-at="2024-02-01T14:25:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSiteReports_ReservationAmount status=SUCCESS method=SiteReports.validateSiteReports_ReservationAmount()[pri:16, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateSiteReports_ReservationCount()[pri:18, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="validateSiteReports_ReservationCount" finished-at="2024-02-01T14:25:26 IST" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSiteReports_ReservationCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="getResult" finished-at="2024-02-01T14:25:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSiteReports_DueAmount status=SUCCESS method=SiteReports.validateSiteReports_DueAmount()[pri:17, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateSiteReports_PassCount()[pri:19, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="validateSiteReports_PassCount" finished-at="2024-02-01T14:25:26 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSiteReports_PassCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="getResult" finished-at="2024-02-01T14:25:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSiteReports_ReservationCount status=SUCCESS method=SiteReports.validateSiteReports_ReservationCount()[pri:18, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="getResult" finished-at="2024-02-01T14:25:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSiteReports_PassCount status=SUCCESS method=SiteReports.validateSiteReports_PassCount()[pri:19, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateSiteReports_DueCount()[pri:20, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="validateSiteReports_DueCount" finished-at="2024-02-01T14:25:26 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSiteReports_DueCount -->
        <test-method signature="validateSiteReports_VehicleCount()[pri:21, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="validateSiteReports_VehicleCount" finished-at="2024-02-01T14:25:26 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSiteReports_VehicleCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="getResult" finished-at="2024-02-01T14:25:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSiteReports_DueCount status=SUCCESS method=SiteReports.validateSiteReports_DueCount()[pri:20, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="getResult" finished-at="2024-02-01T14:25:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSiteReports_VehicleCount status=SUCCESS method=SiteReports.validateSiteReports_VehicleCount()[pri:21, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteRevenueViewDetailsDay()[pri:22, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:26 IST" name="siteRevenueViewDetailsDay" finished-at="2024-02-01T14:25:31 IST" duration-ms="5017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteRevenueViewDetailsDay -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:31 IST" name="getResult" finished-at="2024-02-01T14:25:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteRevenueViewDetailsDay status=SUCCESS method=SiteReports.siteRevenueViewDetailsDay()[pri:22, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteRevenueDayCSV()[pri:23, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:31 IST" name="siteRevenueDayCSV" finished-at="2024-02-01T14:25:35 IST" duration-ms="4008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteRevenueDayCSV -->
        <test-method signature="siteRevenueDayPDF()[pri:24, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:35 IST" name="siteRevenueDayPDF" finished-at="2024-02-01T14:25:39 IST" duration-ms="4025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteRevenueDayPDF -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:35 IST" name="getResult" finished-at="2024-02-01T14:25:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteRevenueDayCSV status=SUCCESS method=SiteReports.siteRevenueDayCSV()[pri:23, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteRevenueDayPopUPClose()[pri:25, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:39 IST" name="siteRevenueDayPopUPClose" finished-at="2024-02-01T14:25:42 IST" duration-ms="3022" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteRevenueDayPopUPClose -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:39 IST" name="getResult" finished-at="2024-02-01T14:25:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteRevenueDayPDF status=SUCCESS method=SiteReports.siteRevenueDayPDF()[pri:24, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:42 IST" name="getResult" finished-at="2024-02-01T14:25:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteRevenueDayPopUPClose status=SUCCESS method=SiteReports.siteRevenueDayPopUPClose()[pri:25, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteRevenueViewDetailsWeek()[pri:28, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:42 IST" name="siteRevenueViewDetailsWeek" finished-at="2024-02-01T14:25:47 IST" duration-ms="5016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteRevenueViewDetailsWeek -->
        <test-method signature="siteRevenueWeekCSV()[pri:29, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:47 IST" name="siteRevenueWeekCSV" finished-at="2024-02-01T14:25:51 IST" duration-ms="4019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteRevenueWeekCSV -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:47 IST" name="getResult" finished-at="2024-02-01T14:25:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteRevenueViewDetailsWeek status=SUCCESS method=SiteReports.siteRevenueViewDetailsWeek()[pri:28, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:51 IST" name="getResult" finished-at="2024-02-01T14:25:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteRevenueWeekCSV status=SUCCESS method=SiteReports.siteRevenueWeekCSV()[pri:29, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteRevenueWeekPDF()[pri:30, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:51 IST" name="siteRevenueWeekPDF" finished-at="2024-02-01T14:25:55 IST" duration-ms="4010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteRevenueWeekPDF -->
        <test-method signature="siteRevenueWeekPopUPClose()[pri:31, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:55 IST" name="siteRevenueWeekPopUPClose" finished-at="2024-02-01T14:25:58 IST" duration-ms="3017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteRevenueWeekPopUPClose -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:55 IST" name="getResult" finished-at="2024-02-01T14:25:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteRevenueWeekPDF status=SUCCESS method=SiteReports.siteRevenueWeekPDF()[pri:30, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:58 IST" name="getResult" finished-at="2024-02-01T14:25:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteRevenueWeekPopUPClose status=SUCCESS method=SiteReports.siteRevenueWeekPopUPClose()[pri:31, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteRevenueMonthViewDetails()[pri:32, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:25:58 IST" name="siteRevenueMonthViewDetails" finished-at="2024-02-01T14:26:05 IST" duration-ms="7483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteRevenueMonthViewDetails -->
        <test-method signature="siteRevenueMonthCSV()[pri:33, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:26:05 IST" name="siteRevenueMonthCSV" finished-at="2024-02-01T14:26:15 IST" duration-ms="9708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteRevenueMonthCSV -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:26:05 IST" name="getResult" finished-at="2024-02-01T14:26:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteRevenueMonthViewDetails status=SUCCESS method=SiteReports.siteRevenueMonthViewDetails()[pri:32, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteRevenueMonthPDF()[pri:34, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:26:15 IST" name="siteRevenueMonthPDF" finished-at="2024-02-01T14:26:25 IST" duration-ms="9738" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteRevenueMonthPDF -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:26:15 IST" name="getResult" finished-at="2024-02-01T14:26:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteRevenueMonthCSV status=SUCCESS method=SiteReports.siteRevenueMonthCSV()[pri:33, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:26:25 IST" name="getResult" finished-at="2024-02-01T14:26:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteRevenueMonthPDF status=SUCCESS method=SiteReports.siteRevenueMonthPDF()[pri:34, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteRevenueMonthPopUPClose()[pri:35, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:26:25 IST" name="siteRevenueMonthPopUPClose" finished-at="2024-02-01T14:26:28 IST" duration-ms="3235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteRevenueMonthPopUPClose -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:26:28 IST" name="getResult" finished-at="2024-02-01T14:26:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteRevenueMonthPopUPClose status=SUCCESS method=SiteReports.siteRevenueMonthPopUPClose()[pri:35, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectRevenueStartDate()[pri:36, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:26:28 IST" name="selectRevenueStartDate" finished-at="2024-02-01T14:26:34 IST" duration-ms="5705" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectRevenueStartDate -->
        <test-method signature="selectRevenueEndDate()[pri:37, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:26:34 IST" name="selectRevenueEndDate" finished-at="2024-02-01T14:26:39 IST" duration-ms="5401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectRevenueEndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:26:34 IST" name="getResult" finished-at="2024-02-01T14:26:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectRevenueStartDate status=SUCCESS method=SiteReports.selectRevenueStartDate()[pri:36, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:26:39 IST" name="getResult" finished-at="2024-02-01T14:26:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectRevenueEndDate status=SUCCESS method=SiteReports.selectRevenueEndDate()[pri:37, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteRevenueSelectedViewDetails()[pri:38, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:26:39 IST" name="siteRevenueSelectedViewDetails" finished-at="2024-02-01T14:26:59 IST" duration-ms="20021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteRevenueSelectedViewDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:26:59 IST" name="getResult" finished-at="2024-02-01T14:26:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteRevenueSelectedViewDetails status=SUCCESS method=SiteReports.siteRevenueSelectedViewDetails()[pri:38, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteRevenueSelectedDateCSV()[pri:39, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:26:59 IST" name="siteRevenueSelectedDateCSV" finished-at="2024-02-01T14:27:03 IST" duration-ms="4018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteRevenueSelectedDateCSV -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:03 IST" name="getResult" finished-at="2024-02-01T14:27:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteRevenueSelectedDateCSV status=SUCCESS method=SiteReports.siteRevenueSelectedDateCSV()[pri:39, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteRevenueSelectedPDF()[pri:40, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:03 IST" name="siteRevenueSelectedPDF" finished-at="2024-02-01T14:27:07 IST" duration-ms="4020" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteRevenueSelectedPDF -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:07 IST" name="getResult" finished-at="2024-02-01T14:27:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteRevenueSelectedPDF status=SUCCESS method=SiteReports.siteRevenueSelectedPDF()[pri:40, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteRevenueSelectedPopUPClose()[pri:41, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:07 IST" name="siteRevenueSelectedPopUPClose" finished-at="2024-02-01T14:27:10 IST" duration-ms="3019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteRevenueSelectedPopUPClose -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:10 IST" name="getResult" finished-at="2024-02-01T14:27:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteRevenueSelectedPopUPClose status=SUCCESS method=SiteReports.siteRevenueSelectedPopUPClose()[pri:41, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchSiteRevenueFilter()[pri:42, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:10 IST" name="searchSiteRevenueFilter" finished-at="2024-02-01T14:27:19 IST" duration-ms="9066" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchSiteRevenueFilter -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:19 IST" name="getResult" finished-at="2024-02-01T14:27:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchSiteRevenueFilter status=SUCCESS method=SiteReports.searchSiteRevenueFilter()[pri:42, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="viewSitesList()[pri:43, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:19 IST" name="viewSitesList" finished-at="2024-02-01T14:27:22 IST" duration-ms="3024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewSitesList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:22 IST" name="getResult" finished-at="2024-02-01T14:27:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewSitesList status=SUCCESS method=SiteReports.viewSitesList()[pri:43, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteDeviceStatus()[pri:44, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:22 IST" name="siteDeviceStatus" finished-at="2024-02-01T14:27:24 IST" duration-ms="2019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteDeviceStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:24 IST" name="getResult" finished-at="2024-02-01T14:27:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteDeviceStatus status=SUCCESS method=SiteReports.siteDeviceStatus()[pri:44, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteReportDeviceStatusCount()[pri:45, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:24 IST" name="siteReportDeviceStatusCount" finished-at="2024-02-01T14:27:26 IST" duration-ms="2023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteReportDeviceStatusCount -->
        <test-method signature="siteRevenueDeviceStatusTable()[pri:46, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:26 IST" name="siteRevenueDeviceStatusTable" finished-at="2024-02-01T14:27:39 IST" duration-ms="12076" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteRevenueDeviceStatusTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:26 IST" name="getResult" finished-at="2024-02-01T14:27:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteReportDeviceStatusCount status=SUCCESS method=SiteReports.siteReportDeviceStatusCount()[pri:45, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:39 IST" name="getResult" finished-at="2024-02-01T14:27:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteRevenueDeviceStatusTable status=SUCCESS method=SiteReports.siteRevenueDeviceStatusTable()[pri:46, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchSiteReportsDeviceGateway()[pri:47, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:39 IST" name="searchSiteReportsDeviceGateway" finished-at="2024-02-01T14:27:43 IST" duration-ms="4012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchSiteReportsDeviceGateway -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:43 IST" name="getResult" finished-at="2024-02-01T14:27:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchSiteReportsDeviceGateway status=SUCCESS method=SiteReports.searchSiteReportsDeviceGateway()[pri:47, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchSiteReportsDevicePOS()[pri:48, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:43 IST" name="searchSiteReportsDevicePOS" finished-at="2024-02-01T14:27:47 IST" duration-ms="4006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchSiteReportsDevicePOS -->
        <test-method signature="searchSiteReportsDeviceSensor()[pri:49, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:47 IST" name="searchSiteReportsDeviceSensor" finished-at="2024-02-01T14:27:51 IST" duration-ms="4007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchSiteReportsDeviceSensor -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:47 IST" name="getResult" finished-at="2024-02-01T14:27:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchSiteReportsDevicePOS status=SUCCESS method=SiteReports.searchSiteReportsDevicePOS()[pri:48, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="alertsCount()[pri:50, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:51 IST" name="alertsCount" finished-at="2024-02-01T14:27:54 IST" duration-ms="3008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertsCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:51 IST" name="getResult" finished-at="2024-02-01T14:27:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchSiteReportsDeviceSensor status=SUCCESS method=SiteReports.searchSiteReportsDeviceSensor()[pri:49, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:54 IST" name="getResult" finished-at="2024-02-01T14:27:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alertsCount status=SUCCESS method=SiteReports.alertsCount()[pri:50, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteAlerts()[pri:51, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:54 IST" name="siteAlerts" finished-at="2024-02-01T14:27:56 IST" duration-ms="2223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteAlerts -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:56 IST" name="getResult" finished-at="2024-02-01T14:27:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteAlerts status=SUCCESS method=SiteReports.siteAlerts()[pri:51, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteReportAlertsCount()[pri:52, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:56 IST" name="siteReportAlertsCount" finished-at="2024-02-01T14:27:58 IST" duration-ms="2290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteReportAlertsCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:58 IST" name="getResult" finished-at="2024-02-01T14:27:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteReportAlertsCount status=SUCCESS method=SiteReports.siteReportAlertsCount()[pri:52, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="devicesStatusTable()[pri:53, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:27:58 IST" name="devicesStatusTable" finished-at="2024-02-01T14:28:35 IST" duration-ms="36512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- devicesStatusTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:35 IST" name="getResult" finished-at="2024-02-01T14:28:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=devicesStatusTable status=SUCCESS method=SiteReports.devicesStatusTable()[pri:53, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateAlertId()[pri:54, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:35 IST" name="validateAlertId" finished-at="2024-02-01T14:28:35 IST" duration-ms="93" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAlertId -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:35 IST" name="getResult" finished-at="2024-02-01T14:28:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAlertId status=SUCCESS method=SiteReports.validateAlertId()[pri:54, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateDeviceSlNo()[pri:55, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:35 IST" name="validateDeviceSlNo" finished-at="2024-02-01T14:28:35 IST" duration-ms="84" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDeviceSlNo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:35 IST" name="getResult" finished-at="2024-02-01T14:28:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeviceSlNo status=SUCCESS method=SiteReports.validateDeviceSlNo()[pri:55, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateDeviceType()[pri:56, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:35 IST" name="validateDeviceType" finished-at="2024-02-01T14:28:35 IST" duration-ms="84" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDeviceType -->
        <test-method signature="validateAlertType()[pri:57, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:35 IST" name="validateAlertType" finished-at="2024-02-01T14:28:35 IST" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAlertType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:35 IST" name="getResult" finished-at="2024-02-01T14:28:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeviceType status=SUCCESS method=SiteReports.validateDeviceType()[pri:56, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:35 IST" name="getResult" finished-at="2024-02-01T14:28:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAlertType status=SUCCESS method=SiteReports.validateAlertType()[pri:57, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateAction()[pri:58, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:35 IST" name="validateAction" finished-at="2024-02-01T14:28:35 IST" duration-ms="84" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAction -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:35 IST" name="getResult" finished-at="2024-02-01T14:28:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAction status=SUCCESS method=SiteReports.validateAction()[pri:58, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateActionAsComplete()[pri:59, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:35 IST" name="validateActionAsComplete" finished-at="2024-02-01T14:28:35 IST" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateActionAsComplete -->
        <test-method signature="siteUnChargedTab()[pri:60, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:35 IST" name="siteUnChargedTab" finished-at="2024-02-01T14:28:38 IST" duration-ms="3222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteUnChargedTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:35 IST" name="getResult" finished-at="2024-02-01T14:28:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateActionAsComplete status=SUCCESS method=SiteReports.validateActionAsComplete()[pri:59, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:38 IST" name="getResult" finished-at="2024-02-01T14:28:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteUnChargedTab status=SUCCESS method=SiteReports.siteUnChargedTab()[pri:60, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteListUnCharged()[pri:61, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:38 IST" name="siteListUnCharged" finished-at="2024-02-01T14:28:45 IST" duration-ms="6528" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteListUnCharged -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:45 IST" name="getResult" finished-at="2024-02-01T14:28:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteListUnCharged status=SUCCESS method=SiteReports.siteListUnCharged()[pri:61, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="UnChargedVehiclesCount()[pri:62, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:45 IST" name="UnChargedVehiclesCount" finished-at="2024-02-01T14:28:50 IST" duration-ms="5022" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UnChargedVehiclesCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:50 IST" name="getResult" finished-at="2024-02-01T14:28:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UnChargedVehiclesCount status=SUCCESS method=SiteReports.UnChargedVehiclesCount()[pri:62, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="UnChargedVehiclesCountDatesEnabled()[pri:63, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:50 IST" name="UnChargedVehiclesCountDatesEnabled" finished-at="2024-02-01T14:28:55 IST" duration-ms="4881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UnChargedVehiclesCountDatesEnabled -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:55 IST" name="getResult" finished-at="2024-02-01T14:28:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UnChargedVehiclesCountDatesEnabled status=SUCCESS method=SiteReports.UnChargedVehiclesCountDatesEnabled()[pri:63, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getMonthUnChargedVehicles()[pri:65, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:55 IST" name="getMonthUnChargedVehicles" finished-at="2024-02-01T14:28:59 IST" duration-ms="4244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getMonthUnChargedVehicles -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:59 IST" name="getResult" finished-at="2024-02-01T14:28:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getMonthUnChargedVehicles status=SUCCESS method=SiteReports.getMonthUnChargedVehicles()[pri:65, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getWeekUnChargedVehicles()[pri:65, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:28:59 IST" name="getWeekUnChargedVehicles" finished-at="2024-02-01T14:29:03 IST" duration-ms="4237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWeekUnChargedVehicles -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:03 IST" name="getResult" finished-at="2024-02-01T14:29:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getWeekUnChargedVehicles status=SUCCESS method=SiteReports.getWeekUnChargedVehicles()[pri:65, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getDayUnChargedVehicles()[pri:66, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:03 IST" name="getDayUnChargedVehicles" finished-at="2024-02-01T14:29:08 IST" duration-ms="4236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDayUnChargedVehicles -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:08 IST" name="getResult" finished-at="2024-02-01T14:29:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getDayUnChargedVehicles status=SUCCESS method=SiteReports.getDayUnChargedVehicles()[pri:66, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectUnChargedStartDate()[pri:67, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:08 IST" name="selectUnChargedStartDate" finished-at="2024-02-01T14:29:12 IST" duration-ms="4292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectUnChargedStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:12 IST" name="getResult" finished-at="2024-02-01T14:29:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectUnChargedStartDate status=SUCCESS method=SiteReports.selectUnChargedStartDate()[pri:67, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectUnChargedEndDate()[pri:68, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:12 IST" name="selectUnChargedEndDate" finished-at="2024-02-01T14:29:14 IST" duration-ms="2014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectUnChargedEndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:14 IST" name="getResult" finished-at="2024-02-01T14:29:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectUnChargedEndDate status=SUCCESS method=SiteReports.selectUnChargedEndDate()[pri:68, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectUnChargedVehicleCount()[pri:69, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:14 IST" name="selectUnChargedVehicleCount" finished-at="2024-02-01T14:29:16 IST" duration-ms="2043" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectUnChargedVehicleCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:16 IST" name="getResult" finished-at="2024-02-01T14:29:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectUnChargedVehicleCount status=SUCCESS method=SiteReports.selectUnChargedVehicleCount()[pri:69, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="nextPage()[pri:70, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:16 IST" name="nextPage" finished-at="2024-02-01T14:29:19 IST" duration-ms="3273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nextPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:19 IST" name="getResult" finished-at="2024-02-01T14:29:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nextPage status=SUCCESS method=SiteReports.nextPage()[pri:70, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="unChargedVehiclesTable()[pri:71, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:19 IST" name="unChargedVehiclesTable" finished-at="2024-02-01T14:29:34 IST" duration-ms="15040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unChargedVehiclesTable -->
        <test-method signature="validateVehicleNumber()[pri:72, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:34 IST" name="validateVehicleNumber" finished-at="2024-02-01T14:29:34 IST" duration-ms="72" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:34 IST" name="getResult" finished-at="2024-02-01T14:29:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unChargedVehiclesTable status=SUCCESS method=SiteReports.unChargedVehiclesTable()[pri:71, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:34 IST" name="getResult" finished-at="2024-02-01T14:29:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateVehicleNumber status=SUCCESS method=SiteReports.validateVehicleNumber()[pri:72, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateUnchargedVehicleType()[pri:73, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:34 IST" name="validateUnchargedVehicleType" finished-at="2024-02-01T14:29:34 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUnchargedVehicleType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:34 IST" name="getResult" finished-at="2024-02-01T14:29:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUnchargedVehicleType status=SUCCESS method=SiteReports.validateUnchargedVehicleType()[pri:73, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateTicketNo()[pri:74, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:34 IST" name="validateTicketNo" finished-at="2024-02-01T14:29:34 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTicketNo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:34 IST" name="getResult" finished-at="2024-02-01T14:29:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTicketNo status=SUCCESS method=SiteReports.validateTicketNo()[pri:74, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="compareEntryExitDateTime()[pri:75, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:34 IST" name="compareEntryExitDateTime" finished-at="2024-02-01T14:29:34 IST" duration-ms="58" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareEntryExitDateTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:34 IST" name="getResult" finished-at="2024-02-01T14:29:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=compareEntryExitDateTime status=SUCCESS method=SiteReports.compareEntryExitDateTime()[pri:75, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchUnChargedVehicle()[pri:76, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:34 IST" name="searchUnChargedVehicle" finished-at="2024-02-01T14:29:46 IST" duration-ms="11133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchUnChargedVehicle -->
        <test-method signature="verifyUnChargedTransactionTypeENTRY()[pri:77, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:46 IST" name="verifyUnChargedTransactionTypeENTRY" finished-at="2024-02-01T14:29:46 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnChargedTransactionTypeENTRY -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:46 IST" name="getResult" finished-at="2024-02-01T14:29:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchUnChargedVehicle status=SUCCESS method=SiteReports.searchUnChargedVehicle()[pri:76, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:46 IST" name="getResult" finished-at="2024-02-01T14:29:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnChargedTransactionTypeENTRY status=SUCCESS method=SiteReports.verifyUnChargedTransactionTypeENTRY()[pri:77, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchUnChargedTransNormal()[pri:78, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:46 IST" name="searchUnChargedTransNormal" finished-at="2024-02-01T14:29:57 IST" duration-ms="11129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchUnChargedTransNormal -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:57 IST" name="getResult" finished-at="2024-02-01T14:29:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchUnChargedTransNormal status=SUCCESS method=SiteReports.searchUnChargedTransNormal()[pri:78, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyTransactionTypeNormal()[pri:79, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:57 IST" name="verifyTransactionTypeNormal" finished-at="2024-02-01T14:29:57 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTransactionTypeNormal -->
        <test-method signature="logout()[pri:80, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:57 IST" name="logout" finished-at="2024-02-01T14:29:59 IST" duration-ms="2278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:57 IST" name="getResult" finished-at="2024-02-01T14:29:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTransactionTypeNormal status=SUCCESS method=SiteReports.verifyTransactionTypeNormal()[pri:79, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:59 IST" name="getResult" finished-at="2024-02-01T14:29:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=SiteReports.logout()[pri:80, instance:com.selenium.SiteReports@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.SiteReports@3bf7ca37]" started-at="2024-02-01T14:29:59 IST" name="tearDown" finished-at="2024-02-01T14:29:59 IST" duration-ms="427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.SiteReports -->
    </test> <!-- SiteReports -->
    <test started-at="2024-02-01T14:29:59 IST" name="Site_Analysis" finished-at="2024-02-01T14:31:30 IST" duration-ms="90411">
      <class name="com.selenium.Site_Analysis">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:29:59 IST" name="setUp" finished-at="2024-02-01T14:30:02 IST" duration-ms="2430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:02 IST" name="login" finished-at="2024-02-01T14:30:09 IST" duration-ms="7076" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:09 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:30:14 IST" duration-ms="5292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:09 IST" name="getResult" finished-at="2024-02-01T14:30:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=Site_Analysis.login()[pri:1, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:14 IST" name="getResult" finished-at="2024-02-01T14:30:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=Site_Analysis.revenueDashboardOpen()[pri:2, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="reportsAnalyticsPage()[pri:3, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:14 IST" name="reportsAnalyticsPage" finished-at="2024-02-01T14:30:16 IST" duration-ms="2025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportsAnalyticsPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:16 IST" name="getResult" finished-at="2024-02-01T14:30:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=reportsAnalyticsPage status=SUCCESS method=Site_Analysis.reportsAnalyticsPage()[pri:3, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="redirectSiteAnalysis()[pri:4, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:16 IST" name="redirectSiteAnalysis" finished-at="2024-02-01T14:30:18 IST" duration-ms="2023" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Site Analysis Page not found]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Site Analysis Page not found
at org.testng.Assert.fail(Assert.java:110)
at com.selenium.Site_Analysis.redirectSiteAnalysis(Site_Analysis.java:83)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectSiteAnalysis -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:18 IST" name="getResult" finished-at="2024-02-01T14:30:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectSiteAnalysis status=FAILURE method=Site_Analysis.redirectSiteAnalysis()[pri:4, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteAnalysis_selectSite()[pri:5, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:18 IST" name="siteAnalysis_selectSite" finished-at="2024-02-01T14:30:21 IST" duration-ms="3008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteAnalysis_selectSite -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:21 IST" name="getResult" finished-at="2024-02-01T14:30:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteAnalysis_selectSite status=SUCCESS method=Site_Analysis.siteAnalysis_selectSite()[pri:5, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getSite_AnalysisTab()[pri:6, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:21 IST" name="getSite_AnalysisTab" finished-at="2024-02-01T14:30:21 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSite_AnalysisTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:21 IST" name="getResult" finished-at="2024-02-01T14:30:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSite_AnalysisTab status=SUCCESS method=Site_Analysis.getSite_AnalysisTab()[pri:6, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="select_AvgDuration_TwoWheeler()[pri:7, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:21 IST" name="select_AvgDuration_TwoWheeler" finished-at="2024-02-01T14:30:23 IST" duration-ms="2009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- select_AvgDuration_TwoWheeler -->
        <test-method signature="avgDuration_2WDates()[pri:8, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:23 IST" name="avgDuration_2WDates" finished-at="2024-02-01T14:30:23 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avgDuration_2WDates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:23 IST" name="getResult" finished-at="2024-02-01T14:30:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=select_AvgDuration_TwoWheeler status=SUCCESS method=Site_Analysis.select_AvgDuration_TwoWheeler()[pri:7, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:23 IST" name="getResult" finished-at="2024-02-01T14:30:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=avgDuration_2WDates status=SUCCESS method=Site_Analysis.avgDuration_2WDates()[pri:8, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="avgDuration_ViewDetails()[pri:9, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:23 IST" name="avgDuration_ViewDetails" finished-at="2024-02-01T14:30:25 IST" duration-ms="2003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avgDuration_ViewDetails -->
        <test-method signature="avgDuration_2WCsv()[pri:10, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:25 IST" name="avgDuration_2WCsv" finished-at="2024-02-01T14:30:27 IST" duration-ms="2007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avgDuration_2WCsv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:25 IST" name="getResult" finished-at="2024-02-01T14:30:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=avgDuration_ViewDetails status=SUCCESS method=Site_Analysis.avgDuration_ViewDetails()[pri:9, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="avgDuration_2WPdf()[pri:11, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:27 IST" name="avgDuration_2WPdf" finished-at="2024-02-01T14:30:30 IST" duration-ms="3007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avgDuration_2WPdf -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:27 IST" name="getResult" finished-at="2024-02-01T14:30:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=avgDuration_2WCsv status=SUCCESS method=Site_Analysis.avgDuration_2WCsv()[pri:10, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="avgDuration_2WSelectCount_25()[pri:12, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:30 IST" name="avgDuration_2WSelectCount_25" finished-at="2024-02-01T14:30:30 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avgDuration_2WSelectCount_25 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:30 IST" name="getResult" finished-at="2024-02-01T14:30:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=avgDuration_2WPdf status=SUCCESS method=Site_Analysis.avgDuration_2WPdf()[pri:11, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:30 IST" name="getResult" finished-at="2024-02-01T14:30:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=avgDuration_2WSelectCount_25 status=SUCCESS method=Site_Analysis.avgDuration_2WSelectCount_25()[pri:12, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="avgDuration_2WSearch()[pri:13, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:30 IST" name="avgDuration_2WSearch" finished-at="2024-02-01T14:30:34 IST" duration-ms="4002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avgDuration_2WSearch -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:34 IST" name="getResult" finished-at="2024-02-01T14:30:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=avgDuration_2WSearch status=SUCCESS method=Site_Analysis.avgDuration_2WSearch()[pri:13, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="avgDuration_2WPoPup_Close()[pri:14, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:34 IST" name="avgDuration_2WPoPup_Close" finished-at="2024-02-01T14:30:36 IST" duration-ms="2007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avgDuration_2WPoPup_Close -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:36 IST" name="getResult" finished-at="2024-02-01T14:30:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=avgDuration_2WPoPup_Close status=SUCCESS method=Site_Analysis.avgDuration_2WPoPup_Close()[pri:14, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="select_AvgDuration_FourWheeler()[pri:15, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:36 IST" name="select_AvgDuration_FourWheeler" finished-at="2024-02-01T14:30:38 IST" duration-ms="2005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- select_AvgDuration_FourWheeler -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:38 IST" name="getResult" finished-at="2024-02-01T14:30:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=select_AvgDuration_FourWheeler status=SUCCESS method=Site_Analysis.select_AvgDuration_FourWheeler()[pri:15, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="avgDuration_ViewDetails_4W()[pri:17, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:38 IST" name="avgDuration_ViewDetails_4W" finished-at="2024-02-01T14:30:40 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avgDuration_ViewDetails_4W -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:40 IST" name="getResult" finished-at="2024-02-01T14:30:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=avgDuration_ViewDetails_4W status=SUCCESS method=Site_Analysis.avgDuration_ViewDetails_4W()[pri:17, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="avgDuration_4WCsv()[pri:18, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:40 IST" name="avgDuration_4WCsv" finished-at="2024-02-01T14:30:42 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avgDuration_4WCsv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:42 IST" name="getResult" finished-at="2024-02-01T14:30:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=avgDuration_4WCsv status=SUCCESS method=Site_Analysis.avgDuration_4WCsv()[pri:18, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="avgDuration_4WPdf()[pri:19, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:42 IST" name="avgDuration_4WPdf" finished-at="2024-02-01T14:30:45 IST" duration-ms="3002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avgDuration_4WPdf -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:45 IST" name="getResult" finished-at="2024-02-01T14:30:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=avgDuration_4WPdf status=SUCCESS method=Site_Analysis.avgDuration_4WPdf()[pri:19, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="avgDuration_4WSelectCount_25()[pri:20, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:45 IST" name="avgDuration_4WSelectCount_25" finished-at="2024-02-01T14:30:45 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avgDuration_4WSelectCount_25 -->
        <test-method signature="avgDuration_4WSearch()[pri:21, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:45 IST" name="avgDuration_4WSearch" finished-at="2024-02-01T14:30:49 IST" duration-ms="4003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avgDuration_4WSearch -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:45 IST" name="getResult" finished-at="2024-02-01T14:30:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=avgDuration_4WSelectCount_25 status=SUCCESS method=Site_Analysis.avgDuration_4WSelectCount_25()[pri:20, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:49 IST" name="getResult" finished-at="2024-02-01T14:30:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=avgDuration_4WSearch status=SUCCESS method=Site_Analysis.avgDuration_4WSearch()[pri:21, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="avgDuration_4WPoPup_Close()[pri:22, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:49 IST" name="avgDuration_4WPoPup_Close" finished-at="2024-02-01T14:30:51 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- avgDuration_4WPoPup_Close -->
        <test-method signature="transaction_FrequencyTab()[pri:23, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:51 IST" name="transaction_FrequencyTab" finished-at="2024-02-01T14:30:54 IST" duration-ms="2065" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transaction_FrequencyTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:51 IST" name="getResult" finished-at="2024-02-01T14:30:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=avgDuration_4WPoPup_Close status=SUCCESS method=Site_Analysis.avgDuration_4WPoPup_Close()[pri:22, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="transFrequency_Dates()[pri:24, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:54 IST" name="transFrequency_Dates" finished-at="2024-02-01T14:30:55 IST" duration-ms="1007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transFrequency_Dates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:54 IST" name="getResult" finished-at="2024-02-01T14:30:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transaction_FrequencyTab status=SUCCESS method=Site_Analysis.transaction_FrequencyTab()[pri:23, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:55 IST" name="getResult" finished-at="2024-02-01T14:30:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transFrequency_Dates status=SUCCESS method=Site_Analysis.transFrequency_Dates()[pri:24, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="transFrequency_ViewDetails()[pri:25, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:55 IST" name="transFrequency_ViewDetails" finished-at="2024-02-01T14:30:57 IST" duration-ms="2007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transFrequency_ViewDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:57 IST" name="getResult" finished-at="2024-02-01T14:30:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transFrequency_ViewDetails status=SUCCESS method=Site_Analysis.transFrequency_ViewDetails()[pri:25, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="transFrequency_Csv()[pri:26, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:57 IST" name="transFrequency_Csv" finished-at="2024-02-01T14:30:59 IST" duration-ms="2005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transFrequency_Csv -->
        <test-method signature="transFrequency_Pdf()[pri:27, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:59 IST" name="transFrequency_Pdf" finished-at="2024-02-01T14:31:02 IST" duration-ms="3007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transFrequency_Pdf -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:30:59 IST" name="getResult" finished-at="2024-02-01T14:30:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transFrequency_Csv status=SUCCESS method=Site_Analysis.transFrequency_Csv()[pri:26, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:02 IST" name="getResult" finished-at="2024-02-01T14:31:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transFrequency_Pdf status=SUCCESS method=Site_Analysis.transFrequency_Pdf()[pri:27, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="transFrequency_SelectCount_25()[pri:28, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:02 IST" name="transFrequency_SelectCount_25" finished-at="2024-02-01T14:31:02 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transFrequency_SelectCount_25 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:02 IST" name="getResult" finished-at="2024-02-01T14:31:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transFrequency_SelectCount_25 status=SUCCESS method=Site_Analysis.transFrequency_SelectCount_25()[pri:28, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="transFrequency_Search()[pri:29, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:02 IST" name="transFrequency_Search" finished-at="2024-02-01T14:31:06 IST" duration-ms="4003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transFrequency_Search -->
        <test-method signature="transFrequency_PoPup_Close()[pri:30, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:06 IST" name="transFrequency_PoPup_Close" finished-at="2024-02-01T14:31:08 IST" duration-ms="2007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transFrequency_PoPup_Close -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:06 IST" name="getResult" finished-at="2024-02-01T14:31:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transFrequency_Search status=SUCCESS method=Site_Analysis.transFrequency_Search()[pri:29, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:08 IST" name="getResult" finished-at="2024-02-01T14:31:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transFrequency_PoPup_Close status=SUCCESS method=Site_Analysis.transFrequency_PoPup_Close()[pri:30, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="occupancyMinutes_Tab()[pri:31, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:08 IST" name="occupancyMinutes_Tab" finished-at="2024-02-01T14:31:10 IST" duration-ms="2141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- occupancyMinutes_Tab -->
        <test-method signature="occupancyMinutes_Dates()[pri:32, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:10 IST" name="occupancyMinutes_Dates" finished-at="2024-02-01T14:31:11 IST" duration-ms="1007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- occupancyMinutes_Dates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:10 IST" name="getResult" finished-at="2024-02-01T14:31:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=occupancyMinutes_Tab status=SUCCESS method=Site_Analysis.occupancyMinutes_Tab()[pri:31, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:11 IST" name="getResult" finished-at="2024-02-01T14:31:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=occupancyMinutes_Dates status=SUCCESS method=Site_Analysis.occupancyMinutes_Dates()[pri:32, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="occupancyMinutes_ViewDetails()[pri:33, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:11 IST" name="occupancyMinutes_ViewDetails" finished-at="2024-02-01T14:31:13 IST" duration-ms="2007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- occupancyMinutes_ViewDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:13 IST" name="getResult" finished-at="2024-02-01T14:31:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=occupancyMinutes_ViewDetails status=SUCCESS method=Site_Analysis.occupancyMinutes_ViewDetails()[pri:33, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="occupancyMinutes_Csv()[pri:34, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:13 IST" name="occupancyMinutes_Csv" finished-at="2024-02-01T14:31:15 IST" duration-ms="2011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- occupancyMinutes_Csv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:15 IST" name="getResult" finished-at="2024-02-01T14:31:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=occupancyMinutes_Csv status=SUCCESS method=Site_Analysis.occupancyMinutes_Csv()[pri:34, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="occupancyMinutes_Pdf()[pri:35, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:15 IST" name="occupancyMinutes_Pdf" finished-at="2024-02-01T14:31:18 IST" duration-ms="3004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- occupancyMinutes_Pdf -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:18 IST" name="getResult" finished-at="2024-02-01T14:31:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=occupancyMinutes_Pdf status=SUCCESS method=Site_Analysis.occupancyMinutes_Pdf()[pri:35, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="occupancyMinutes_SelectCount_25()[pri:36, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:18 IST" name="occupancyMinutes_SelectCount_25" finished-at="2024-02-01T14:31:18 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- occupancyMinutes_SelectCount_25 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:18 IST" name="getResult" finished-at="2024-02-01T14:31:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=occupancyMinutes_SelectCount_25 status=SUCCESS method=Site_Analysis.occupancyMinutes_SelectCount_25()[pri:36, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="occupancyMinutes_Search()[pri:37, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:18 IST" name="occupancyMinutes_Search" finished-at="2024-02-01T14:31:22 IST" duration-ms="4009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- occupancyMinutes_Search -->
        <test-method signature="occpancyMinutes_PoPup_Close()[pri:38, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:22 IST" name="occpancyMinutes_PoPup_Close" finished-at="2024-02-01T14:31:24 IST" duration-ms="2009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- occpancyMinutes_PoPup_Close -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:22 IST" name="getResult" finished-at="2024-02-01T14:31:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=occupancyMinutes_Search status=SUCCESS method=Site_Analysis.occupancyMinutes_Search()[pri:37, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:39, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:24 IST" name="logout" finished-at="2024-02-01T14:31:29 IST" duration-ms="5296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:24 IST" name="getResult" finished-at="2024-02-01T14:31:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=occpancyMinutes_PoPup_Close status=SUCCESS method=Site_Analysis.occpancyMinutes_PoPup_Close()[pri:38, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:29 IST" name="getResult" finished-at="2024-02-01T14:31:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=Site_Analysis.logout()[pri:39, instance:com.selenium.Site_Analysis@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.Site_Analysis@3bd82cf5]" started-at="2024-02-01T14:31:29 IST" name="tearDown" finished-at="2024-02-01T14:31:30 IST" duration-ms="830" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.Site_Analysis -->
    </test> <!-- Site_Analysis -->
    <test started-at="2024-02-01T14:31:30 IST" name="Slot_Analysis" finished-at="2024-02-01T14:32:31 IST" duration-ms="61225">
      <class name="com.selenium.Slot_Analysis">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:30 IST" name="setUp" finished-at="2024-02-01T14:31:32 IST" duration-ms="2299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:32 IST" name="login" finished-at="2024-02-01T14:31:40 IST" duration-ms="7773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:40 IST" name="getResult" finished-at="2024-02-01T14:31:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=Slot_Analysis.login()[pri:1, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:40 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:31:45 IST" duration-ms="5193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method signature="reportsAnalyticsPage()[pri:3, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:45 IST" name="reportsAnalyticsPage" finished-at="2024-02-01T14:31:47 IST" duration-ms="2299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportsAnalyticsPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:45 IST" name="getResult" finished-at="2024-02-01T14:31:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=Slot_Analysis.revenueDashboardOpen()[pri:2, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:47 IST" name="getResult" finished-at="2024-02-01T14:31:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=reportsAnalyticsPage status=SUCCESS method=Slot_Analysis.reportsAnalyticsPage()[pri:3, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="redirectSlotAnalysis()[pri:4, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:47 IST" name="redirectSlotAnalysis" finished-at="2024-02-01T14:31:49 IST" duration-ms="2011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectSlotAnalysis -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:49 IST" name="getResult" finished-at="2024-02-01T14:31:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectSlotAnalysis status=SUCCESS method=Slot_Analysis.redirectSlotAnalysis()[pri:4, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="SlotAnalysis_selectSite()[pri:5, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:49 IST" name="SlotAnalysis_selectSite" finished-at="2024-02-01T14:31:52 IST" duration-ms="3008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SlotAnalysis_selectSite -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:52 IST" name="getResult" finished-at="2024-02-01T14:31:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SlotAnalysis_selectSite status=SUCCESS method=Slot_Analysis.SlotAnalysis_selectSite()[pri:5, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getSlot_AnalysisTab()[pri:6, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:52 IST" name="getSlot_AnalysisTab" finished-at="2024-02-01T14:31:52 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSlot_AnalysisTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:52 IST" name="getResult" finished-at="2024-02-01T14:31:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSlot_AnalysisTab status=SUCCESS method=Slot_Analysis.getSlot_AnalysisTab()[pri:6, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayHour_Occupancy_Dates()[pri:7, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:52 IST" name="dayHour_Occupancy_Dates" finished-at="2024-02-01T14:31:52 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayHour_Occupancy_Dates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:52 IST" name="getResult" finished-at="2024-02-01T14:31:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayHour_Occupancy_Dates status=SUCCESS method=Slot_Analysis.dayHour_Occupancy_Dates()[pri:7, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayHour_Occupancy_Menu_ToClickSgv()[pri:8, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:53 IST" name="dayHour_Occupancy_Menu_ToClickSgv" finished-at="2024-02-01T14:31:55 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayHour_Occupancy_Menu_ToClickSgv -->
        <test-method signature="dayHour_Occupancy_Sgv()[pri:9, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:55 IST" name="dayHour_Occupancy_Sgv" finished-at="2024-02-01T14:31:57 IST" duration-ms="2008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayHour_Occupancy_Sgv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:55 IST" name="getResult" finished-at="2024-02-01T14:31:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayHour_Occupancy_Menu_ToClickSgv status=SUCCESS method=Slot_Analysis.dayHour_Occupancy_Menu_ToClickSgv()[pri:8, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:57 IST" name="getResult" finished-at="2024-02-01T14:31:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayHour_Occupancy_Sgv status=SUCCESS method=Slot_Analysis.dayHour_Occupancy_Sgv()[pri:9, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayHour_Occupancy_Menu_ToClickPng()[pri:10, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:57 IST" name="dayHour_Occupancy_Menu_ToClickPng" finished-at="2024-02-01T14:31:59 IST" duration-ms="2008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayHour_Occupancy_Menu_ToClickPng -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:59 IST" name="getResult" finished-at="2024-02-01T14:31:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayHour_Occupancy_Menu_ToClickPng status=SUCCESS method=Slot_Analysis.dayHour_Occupancy_Menu_ToClickPng()[pri:10, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="dayHour_Occupancy_Png()[pri:11, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:31:59 IST" name="dayHour_Occupancy_Png" finished-at="2024-02-01T14:32:02 IST" duration-ms="3007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dayHour_Occupancy_Png -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:02 IST" name="getResult" finished-at="2024-02-01T14:32:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dayHour_Occupancy_Png status=SUCCESS method=Slot_Analysis.dayHour_Occupancy_Png()[pri:11, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="peakHoursTab()[pri:13, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:02 IST" name="peakHoursTab" finished-at="2024-02-01T14:32:04 IST" duration-ms="2087" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- peakHoursTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:04 IST" name="getResult" finished-at="2024-02-01T14:32:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=peakHoursTab status=SUCCESS method=Slot_Analysis.peakHoursTab()[pri:13, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="select_PeakHours_TwoWheeler()[pri:14, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:04 IST" name="select_PeakHours_TwoWheeler" finished-at="2024-02-01T14:32:06 IST" duration-ms="2003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- select_PeakHours_TwoWheeler -->
        <test-method signature="peakHour_Dates_2W()[pri:15, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:06 IST" name="peakHour_Dates_2W" finished-at="2024-02-01T14:32:07 IST" duration-ms="1007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- peakHour_Dates_2W -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:06 IST" name="getResult" finished-at="2024-02-01T14:32:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=select_PeakHours_TwoWheeler status=SUCCESS method=Slot_Analysis.select_PeakHours_TwoWheeler()[pri:14, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:07 IST" name="getResult" finished-at="2024-02-01T14:32:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=peakHour_Dates_2W status=SUCCESS method=Slot_Analysis.peakHour_Dates_2W()[pri:15, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="select_PeakHours_FourWheeler()[pri:16, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:07 IST" name="select_PeakHours_FourWheeler" finished-at="2024-02-01T14:32:09 IST" duration-ms="2008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- select_PeakHours_FourWheeler -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:09 IST" name="getResult" finished-at="2024-02-01T14:32:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=select_PeakHours_FourWheeler status=SUCCESS method=Slot_Analysis.select_PeakHours_FourWheeler()[pri:16, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="peakHour_Dates_4W()[pri:17, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:09 IST" name="peakHour_Dates_4W" finished-at="2024-02-01T14:32:10 IST" duration-ms="1007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- peakHour_Dates_4W -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:10 IST" name="getResult" finished-at="2024-02-01T14:32:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=peakHour_Dates_4W status=SUCCESS method=Slot_Analysis.peakHour_Dates_4W()[pri:17, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="slotAvgDuration_Tab()[pri:18, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:10 IST" name="slotAvgDuration_Tab" finished-at="2024-02-01T14:32:12 IST" duration-ms="2205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slotAvgDuration_Tab -->
        <test-method signature="slotAvgDuration_Dates()[pri:19, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:12 IST" name="slotAvgDuration_Dates" finished-at="2024-02-01T14:32:13 IST" duration-ms="1007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slotAvgDuration_Dates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:12 IST" name="getResult" finished-at="2024-02-01T14:32:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=slotAvgDuration_Tab status=SUCCESS method=Slot_Analysis.slotAvgDuration_Tab()[pri:18, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:13 IST" name="getResult" finished-at="2024-02-01T14:32:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=slotAvgDuration_Dates status=SUCCESS method=Slot_Analysis.slotAvgDuration_Dates()[pri:19, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="slotRotation_Tab()[pri:20, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:13 IST" name="slotRotation_Tab" finished-at="2024-02-01T14:32:15 IST" duration-ms="2082" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slotRotation_Tab -->
        <test-method signature="slotRotation_Dates()[pri:21, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:15 IST" name="slotRotation_Dates" finished-at="2024-02-01T14:32:16 IST" duration-ms="1004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slotRotation_Dates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:15 IST" name="getResult" finished-at="2024-02-01T14:32:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=slotRotation_Tab status=SUCCESS method=Slot_Analysis.slotRotation_Tab()[pri:20, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:16 IST" name="getResult" finished-at="2024-02-01T14:32:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=slotRotation_Dates status=SUCCESS method=Slot_Analysis.slotRotation_Dates()[pri:21, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="slotRotation_Menu_ToClickSgv()[pri:22, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:16 IST" name="slotRotation_Menu_ToClickSgv" finished-at="2024-02-01T14:32:18 IST" duration-ms="2007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slotRotation_Menu_ToClickSgv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:18 IST" name="getResult" finished-at="2024-02-01T14:32:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=slotRotation_Menu_ToClickSgv status=SUCCESS method=Slot_Analysis.slotRotation_Menu_ToClickSgv()[pri:22, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="slotRotation_Sgv()[pri:23, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:18 IST" name="slotRotation_Sgv" finished-at="2024-02-01T14:32:20 IST" duration-ms="2007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slotRotation_Sgv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:20 IST" name="getResult" finished-at="2024-02-01T14:32:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=slotRotation_Sgv status=SUCCESS method=Slot_Analysis.slotRotation_Sgv()[pri:23, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="slotRotation_Menu_ToClickPng()[pri:24, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:20 IST" name="slotRotation_Menu_ToClickPng" finished-at="2024-02-01T14:32:22 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slotRotation_Menu_ToClickPng -->
        <test-method signature="slotRotation_Png()[pri:25, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:22 IST" name="slotRotation_Png" finished-at="2024-02-01T14:32:25 IST" duration-ms="3003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slotRotation_Png -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:22 IST" name="getResult" finished-at="2024-02-01T14:32:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=slotRotation_Menu_ToClickPng status=SUCCESS method=Slot_Analysis.slotRotation_Menu_ToClickPng()[pri:24, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:25 IST" name="getResult" finished-at="2024-02-01T14:32:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=slotRotation_Png status=SUCCESS method=Slot_Analysis.slotRotation_Png()[pri:25, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:26, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:25 IST" name="logout" finished-at="2024-02-01T14:32:30 IST" duration-ms="5296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:30 IST" name="tearDown" finished-at="2024-02-01T14:32:31 IST" duration-ms="840" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Slot_Analysis@7dc0f706]" started-at="2024-02-01T14:32:30 IST" name="getResult" finished-at="2024-02-01T14:32:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=Slot_Analysis.logout()[pri:26, instance:com.selenium.Slot_Analysis@7dc0f706] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.selenium.Slot_Analysis -->
    </test> <!-- Slot_Analysis -->
    <test started-at="2024-02-01T14:32:31 IST" name="Audit_Reservations" finished-at="2024-02-01T14:35:27 IST" duration-ms="175469">
      <class name="com.selenium.Audit_Reservations">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:32:31 IST" name="setUp" finished-at="2024-02-01T14:32:34 IST" duration-ms="2410" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:32:34 IST" name="login" finished-at="2024-02-01T14:32:43 IST" duration-ms="9372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:32:43 IST" name="getResult" finished-at="2024-02-01T14:32:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=Audit_Reservations.login()[pri:1, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:32:43 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:32:48 IST" duration-ms="5027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:32:48 IST" name="getResult" finished-at="2024-02-01T14:32:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=Audit_Reservations.revenueDashboardOpen()[pri:2, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="redirectAudiTrailPage()[pri:3, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:32:48 IST" name="redirectAudiTrailPage" finished-at="2024-02-01T14:32:52 IST" duration-ms="4468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectAudiTrailPage -->
        <test-method signature="getSitesList()[pri:4, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:32:52 IST" name="getSitesList" finished-at="2024-02-01T14:32:59 IST" duration-ms="6595" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSitesList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:32:52 IST" name="getResult" finished-at="2024-02-01T14:32:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectAudiTrailPage status=SUCCESS method=Audit_Reservations.redirectAudiTrailPage()[pri:3, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:32:59 IST" name="getResult" finished-at="2024-02-01T14:32:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSitesList status=SUCCESS method=Audit_Reservations.getSitesList()[pri:4, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="typeReservations()[pri:4, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:32:59 IST" name="typeReservations" finished-at="2024-02-01T14:33:04 IST" duration-ms="5240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeReservations -->
        <test-method signature="reserveDatesEnabled()[pri:5, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:04 IST" name="reserveDatesEnabled" finished-at="2024-02-01T14:33:09 IST" duration-ms="4894" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reserveDatesEnabled -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:04 IST" name="getResult" finished-at="2024-02-01T14:33:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeReservations status=SUCCESS method=Audit_Reservations.typeReservations()[pri:4, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectReserveStartDate()[pri:6, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:09 IST" name="selectReserveStartDate" finished-at="2024-02-01T14:33:18 IST" duration-ms="8709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectReserveStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:09 IST" name="getResult" finished-at="2024-02-01T14:33:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=reserveDatesEnabled status=SUCCESS method=Audit_Reservations.reserveDatesEnabled()[pri:5, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:18 IST" name="getResult" finished-at="2024-02-01T14:33:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectReserveStartDate status=SUCCESS method=Audit_Reservations.selectReserveStartDate()[pri:6, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectReserveEndDate()[pri:7, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:18 IST" name="selectReserveEndDate" finished-at="2024-02-01T14:33:29 IST" duration-ms="11473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectReserveEndDate -->
        <test-method signature="selectCountReservations25()[pri:8, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:29 IST" name="selectCountReservations25" finished-at="2024-02-01T14:33:32 IST" duration-ms="2268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountReservations25 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:29 IST" name="getResult" finished-at="2024-02-01T14:33:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectReserveEndDate status=SUCCESS method=Audit_Reservations.selectReserveEndDate()[pri:7, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:32 IST" name="getResult" finished-at="2024-02-01T14:33:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountReservations25 status=SUCCESS method=Audit_Reservations.selectCountReservations25()[pri:8, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectCountReservations10()[pri:9, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:32 IST" name="selectCountReservations10" finished-at="2024-02-01T14:33:34 IST" duration-ms="2237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountReservations10 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:34 IST" name="getResult" finished-at="2024-02-01T14:33:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountReservations10 status=SUCCESS method=Audit_Reservations.selectCountReservations10()[pri:9, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="reservationTable()[pri:10, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:34 IST" name="reservationTable" finished-at="2024-02-01T14:33:52 IST" duration-ms="18391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reservationTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:52 IST" name="getResult" finished-at="2024-02-01T14:33:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=reservationTable status=SUCCESS method=Audit_Reservations.reservationTable()[pri:10, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="compareReserveExpiryTime()[pri:11, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:52 IST" name="compareReserveExpiryTime" finished-at="2024-02-01T14:33:52 IST" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareReserveExpiryTime -->
        <test-method signature="reservationsCsv()[pri:12, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:52 IST" name="reservationsCsv" finished-at="2024-02-01T14:33:55 IST" duration-ms="2274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reservationsCsv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:52 IST" name="getResult" finished-at="2024-02-01T14:33:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=compareReserveExpiryTime status=SUCCESS method=Audit_Reservations.compareReserveExpiryTime()[pri:11, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:55 IST" name="getResult" finished-at="2024-02-01T14:33:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=reservationsCsv status=SUCCESS method=Audit_Reservations.reservationsCsv()[pri:12, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="reservationsPdf()[pri:13, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:55 IST" name="reservationsPdf" finished-at="2024-02-01T14:33:58 IST" duration-ms="3378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reservationsPdf -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:58 IST" name="getResult" finished-at="2024-02-01T14:33:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=reservationsPdf status=SUCCESS method=Audit_Reservations.reservationsPdf()[pri:13, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="reserveTypePass()[pri:14, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:33:58 IST" name="reserveTypePass" finished-at="2024-02-01T14:34:04 IST" duration-ms="5929" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reserveTypePass -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:34:04 IST" name="getResult" finished-at="2024-02-01T14:34:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=reserveTypePass status=SUCCESS method=Audit_Reservations.reserveTypePass()[pri:14, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="passesDatesEnabled()[pri:15, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:34:04 IST" name="passesDatesEnabled" finished-at="2024-02-01T14:34:14 IST" duration-ms="9817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passesDatesEnabled -->
        <test-method signature="selectStartDatePasses()[pri:16, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:34:14 IST" name="selectStartDatePasses" finished-at="2024-02-01T14:34:22 IST" duration-ms="8673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStartDatePasses -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:34:14 IST" name="getResult" finished-at="2024-02-01T14:34:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passesDatesEnabled status=SUCCESS method=Audit_Reservations.passesDatesEnabled()[pri:15, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectEndDatePasses()[pri:17, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:34:22 IST" name="selectEndDatePasses" finished-at="2024-02-01T14:34:34 IST" duration-ms="11580" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectEndDatePasses -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:34:22 IST" name="getResult" finished-at="2024-02-01T14:34:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStartDatePasses status=SUCCESS method=Audit_Reservations.selectStartDatePasses()[pri:16, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectCountPasses25()[pri:18, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:34:34 IST" name="selectCountPasses25" finished-at="2024-02-01T14:34:36 IST" duration-ms="2284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountPasses25 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:34:34 IST" name="getResult" finished-at="2024-02-01T14:34:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectEndDatePasses status=SUCCESS method=Audit_Reservations.selectEndDatePasses()[pri:17, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:34:36 IST" name="getResult" finished-at="2024-02-01T14:34:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountPasses25 status=SUCCESS method=Audit_Reservations.selectCountPasses25()[pri:18, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectCountPasses10()[pri:19, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:34:36 IST" name="selectCountPasses10" finished-at="2024-02-01T14:34:39 IST" duration-ms="2278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountPasses10 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:34:39 IST" name="getResult" finished-at="2024-02-01T14:34:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountPasses10 status=SUCCESS method=Audit_Reservations.selectCountPasses10()[pri:19, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="passesCsv()[pri:20, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:34:39 IST" name="passesCsv" finished-at="2024-02-01T14:34:41 IST" duration-ms="2241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passesCsv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:34:41 IST" name="getResult" finished-at="2024-02-01T14:34:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passesCsv status=SUCCESS method=Audit_Reservations.passesCsv()[pri:20, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="passesPdf()[pri:21, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:34:41 IST" name="passesPdf" finished-at="2024-02-01T14:34:44 IST" duration-ms="3519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passesPdf -->
        <test-method signature="passesTable()[pri:22, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:34:44 IST" name="passesTable" finished-at="2024-02-01T14:35:18 IST" duration-ms="33952" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passesTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:34:44 IST" name="getResult" finished-at="2024-02-01T14:34:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passesPdf status=SUCCESS method=Audit_Reservations.passesPdf()[pri:21, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:35:18 IST" name="getResult" finished-at="2024-02-01T14:35:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passesTable status=SUCCESS method=Audit_Reservations.passesTable()[pri:22, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="comparePassReserveExpiryDate()[pri:23, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:35:18 IST" name="comparePassReserveExpiryDate" finished-at="2024-02-01T14:35:19 IST" duration-ms="301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- comparePassReserveExpiryDate -->
        <test-method signature="clickPOSdevice()[pri:24, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:35:19 IST" name="clickPOSdevice" finished-at="2024-02-01T14:35:21 IST" duration-ms="2226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickPOSdevice -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:35:19 IST" name="getResult" finished-at="2024-02-01T14:35:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=comparePassReserveExpiryDate status=SUCCESS method=Audit_Reservations.comparePassReserveExpiryDate()[pri:23, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:35:21 IST" name="getResult" finished-at="2024-02-01T14:35:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickPOSdevice status=SUCCESS method=Audit_Reservations.clickPOSdevice()[pri:24, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:25, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:35:21 IST" name="logout" finished-at="2024-02-01T14:35:26 IST" duration-ms="5277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:35:26 IST" name="getResult" finished-at="2024-02-01T14:35:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=Audit_Reservations.logout()[pri:25, instance:com.selenium.Audit_Reservations@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.Audit_Reservations@4961f6af]" started-at="2024-02-01T14:35:26 IST" name="tearDown" finished-at="2024-02-01T14:35:27 IST" duration-ms="453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.Audit_Reservations -->
    </test> <!-- Audit_Reservations -->
    <test started-at="2024-02-01T14:35:27 IST" name="AudiTrail_PosDevice" finished-at="2024-02-01T14:39:47 IST" duration-ms="260158">
      <class name="com.selenium.AudiTrail_PosDevice">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:35:27 IST" name="setUp" finished-at="2024-02-01T14:35:29 IST" duration-ms="2155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:35:29 IST" name="login" finished-at="2024-02-01T14:35:36 IST" duration-ms="7510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:35:36 IST" name="getResult" finished-at="2024-02-01T14:35:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=AudiTrail_PosDevice.login()[pri:1, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:35:36 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:35:41 IST" duration-ms="5023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method signature="redirectAudiTrailPage()[pri:3, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:35:41 IST" name="redirectAudiTrailPage" finished-at="2024-02-01T14:35:46 IST" duration-ms="4426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectAudiTrailPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:35:41 IST" name="getResult" finished-at="2024-02-01T14:35:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=AudiTrail_PosDevice.revenueDashboardOpen()[pri:2, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="typeReservations()[pri:4, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:35:46 IST" name="typeReservations" finished-at="2024-02-01T14:35:51 IST" duration-ms="5285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeReservations -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:35:46 IST" name="getResult" finished-at="2024-02-01T14:35:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectAudiTrailPage status=SUCCESS method=AudiTrail_PosDevice.redirectAudiTrailPage()[pri:3, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickPOSdevice()[pri:5, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:35:51 IST" name="clickPOSdevice" finished-at="2024-02-01T14:35:53 IST" duration-ms="2236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickPOSdevice -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:35:51 IST" name="getResult" finished-at="2024-02-01T14:35:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeReservations status=SUCCESS method=AudiTrail_PosDevice.typeReservations()[pri:4, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:35:53 IST" name="getResult" finished-at="2024-02-01T14:35:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickPOSdevice status=SUCCESS method=AudiTrail_PosDevice.clickPOSdevice()[pri:5, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusTypeALL()[pri:25, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:35:53 IST" name="statusTypeALL" finished-at="2024-02-01T14:35:53 IST" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusTypeALL -->
        <test-method signature="allPOSDatesEnabled()[pri:26, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:35:53 IST" name="allPOSDatesEnabled" finished-at="2024-02-01T14:36:00 IST" duration-ms="6786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allPOSDatesEnabled -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:35:53 IST" name="getResult" finished-at="2024-02-01T14:35:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusTypeALL status=SUCCESS method=AudiTrail_PosDevice.statusTypeALL()[pri:25, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectPosDevice_AllTrans_StartDate()[pri:27, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:00 IST" name="selectPosDevice_AllTrans_StartDate" finished-at="2024-02-01T14:36:10 IST" duration-ms="9627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPosDevice_AllTrans_StartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:00 IST" name="getResult" finished-at="2024-02-01T14:36:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=allPOSDatesEnabled status=SUCCESS method=AudiTrail_PosDevice.allPOSDatesEnabled()[pri:26, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:10 IST" name="getResult" finished-at="2024-02-01T14:36:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectPosDevice_AllTrans_StartDate status=SUCCESS method=AudiTrail_PosDevice.selectPosDevice_AllTrans_StartDate()[pri:27, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectPosDevice_AllTrans_EndDate()[pri:28, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:10 IST" name="selectPosDevice_AllTrans_EndDate" finished-at="2024-02-01T14:36:21 IST" duration-ms="11490" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPosDevice_AllTrans_EndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:21 IST" name="getResult" finished-at="2024-02-01T14:36:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectPosDevice_AllTrans_EndDate status=SUCCESS method=AudiTrail_PosDevice.selectPosDevice_AllTrans_EndDate()[pri:28, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectAttachment()[pri:29, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:21 IST" name="selectAttachment" finished-at="2024-02-01T14:36:32 IST" duration-ms="10227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAttachment -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:32 IST" name="getResult" finished-at="2024-02-01T14:36:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAttachment status=SUCCESS method=AudiTrail_PosDevice.selectAttachment()[pri:29, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectedImage1Details()[pri:30, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:32 IST" name="selectedImage1Details" finished-at="2024-02-01T14:36:38 IST" duration-ms="6053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectedImage1Details -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:38 IST" name="getResult" finished-at="2024-02-01T14:36:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectedImage1Details status=SUCCESS method=AudiTrail_PosDevice.selectedImage1Details()[pri:30, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="imagePopUpClose()[pri:31, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:38 IST" name="imagePopUpClose" finished-at="2024-02-01T14:36:40 IST" duration-ms="2229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- imagePopUpClose -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:40 IST" name="getResult" finished-at="2024-02-01T14:36:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=imagePopUpClose status=SUCCESS method=AudiTrail_PosDevice.imagePopUpClose()[pri:31, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectCountAllDevice50()[pri:32, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:40 IST" name="selectCountAllDevice50" finished-at="2024-02-01T14:36:42 IST" duration-ms="2323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountAllDevice50 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:42 IST" name="getResult" finished-at="2024-02-01T14:36:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountAllDevice50 status=SUCCESS method=AudiTrail_PosDevice.selectCountAllDevice50()[pri:32, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectCountAllDevice10()[pri:33, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:42 IST" name="selectCountAllDevice10" finished-at="2024-02-01T14:36:44 IST" duration-ms="2316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountAllDevice10 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:44 IST" name="getResult" finished-at="2024-02-01T14:36:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountAllDevice10 status=SUCCESS method=AudiTrail_PosDevice.selectCountAllDevice10()[pri:33, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectCountAllDevice25()[pri:33, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:44 IST" name="selectCountAllDevice25" finished-at="2024-02-01T14:36:47 IST" duration-ms="2308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountAllDevice25 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:47 IST" name="getResult" finished-at="2024-02-01T14:36:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountAllDevice25 status=SUCCESS method=AudiTrail_PosDevice.selectCountAllDevice25()[pri:33, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="viewDetails1All()[pri:35, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:47 IST" name="viewDetails1All" finished-at="2024-02-01T14:36:49 IST" duration-ms="2254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewDetails1All -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:49 IST" name="getResult" finished-at="2024-02-01T14:36:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewDetails1All status=SUCCESS method=AudiTrail_PosDevice.viewDetails1All()[pri:35, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="viewDetailPopUpClose()[pri:36, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:49 IST" name="viewDetailPopUpClose" finished-at="2024-02-01T14:36:51 IST" duration-ms="2267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewDetailPopUpClose -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:51 IST" name="getResult" finished-at="2024-02-01T14:36:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewDetailPopUpClose status=SUCCESS method=AudiTrail_PosDevice.viewDetailPopUpClose()[pri:36, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getSitesList()[pri:37, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:51 IST" name="getSitesList" finished-at="2024-02-01T14:36:58 IST" duration-ms="6530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSitesList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:58 IST" name="getResult" finished-at="2024-02-01T14:36:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSitesList status=SUCCESS method=AudiTrail_PosDevice.getSitesList()[pri:37, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="allTransactionsTable()[pri:38, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:36:58 IST" name="allTransactionsTable" finished-at="2024-02-01T14:37:01 IST" duration-ms="3028" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allTransactionsTable -->
        <test-method signature="compareEntryExitDateTime()[pri:39, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:01 IST" name="compareEntryExitDateTime" finished-at="2024-02-01T14:37:01 IST" duration-ms="463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareEntryExitDateTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:01 IST" name="getResult" finished-at="2024-02-01T14:37:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=allTransactionsTable status=SUCCESS method=AudiTrail_PosDevice.allTransactionsTable()[pri:38, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="viewDetails2All()[pri:40, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:01 IST" name="viewDetails2All" finished-at="2024-02-01T14:37:03 IST" duration-ms="2003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewDetails2All -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:01 IST" name="getResult" finished-at="2024-02-01T14:37:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=compareEntryExitDateTime status=SUCCESS method=AudiTrail_PosDevice.compareEntryExitDateTime()[pri:39, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:03 IST" name="getResult" finished-at="2024-02-01T14:37:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewDetails2All status=SUCCESS method=AudiTrail_PosDevice.viewDetails2All()[pri:40, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="allCsv()[pri:41, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:03 IST" name="allCsv" finished-at="2024-02-01T14:37:07 IST" duration-ms="3271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allCsv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:07 IST" name="getResult" finished-at="2024-02-01T14:37:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=allCsv status=SUCCESS method=AudiTrail_PosDevice.allCsv()[pri:41, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="allPdf()[pri:42, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:07 IST" name="allPdf" finished-at="2024-02-01T14:37:10 IST" duration-ms="3378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allPdf -->
        <test-method signature="statusTypeEntry()[pri:43, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:10 IST" name="statusTypeEntry" finished-at="2024-02-01T14:37:10 IST" duration-ms="230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusTypeEntry -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:10 IST" name="getResult" finished-at="2024-02-01T14:37:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=allPdf status=SUCCESS method=AudiTrail_PosDevice.allPdf()[pri:42, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:10 IST" name="getResult" finished-at="2024-02-01T14:37:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusTypeEntry status=SUCCESS method=AudiTrail_PosDevice.statusTypeEntry()[pri:43, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="activeStatusDatesEnabled()[pri:44, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:10 IST" name="activeStatusDatesEnabled" finished-at="2024-02-01T14:37:17 IST" duration-ms="6763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- activeStatusDatesEnabled -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:17 IST" name="getResult" finished-at="2024-02-01T14:37:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=activeStatusDatesEnabled status=SUCCESS method=AudiTrail_PosDevice.activeStatusDatesEnabled()[pri:44, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectStartDateActive()[pri:45, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:17 IST" name="selectStartDateActive" finished-at="2024-02-01T14:37:26 IST" duration-ms="8773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStartDateActive -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:26 IST" name="getResult" finished-at="2024-02-01T14:37:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStartDateActive status=SUCCESS method=AudiTrail_PosDevice.selectStartDateActive()[pri:45, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectEndDateActive()[pri:46, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:26 IST" name="selectEndDateActive" finished-at="2024-02-01T14:37:37 IST" duration-ms="11518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectEndDateActive -->
        <test-method signature="selectCountActive50()[pri:47, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:37 IST" name="selectCountActive50" finished-at="2024-02-01T14:37:40 IST" duration-ms="2286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountActive50 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:37 IST" name="getResult" finished-at="2024-02-01T14:37:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectEndDateActive status=SUCCESS method=AudiTrail_PosDevice.selectEndDateActive()[pri:46, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectCountActive25()[pri:48, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:40 IST" name="selectCountActive25" finished-at="2024-02-01T14:37:42 IST" duration-ms="2270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountActive25 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:40 IST" name="getResult" finished-at="2024-02-01T14:37:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountActive50 status=SUCCESS method=AudiTrail_PosDevice.selectCountActive50()[pri:47, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:42 IST" name="getResult" finished-at="2024-02-01T14:37:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountActive25 status=SUCCESS method=AudiTrail_PosDevice.selectCountActive25()[pri:48, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectCountActive10()[pri:49, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:42 IST" name="selectCountActive10" finished-at="2024-02-01T14:37:44 IST" duration-ms="2273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountActive10 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:44 IST" name="getResult" finished-at="2024-02-01T14:37:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountActive10 status=SUCCESS method=AudiTrail_PosDevice.selectCountActive10()[pri:49, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="activeCsv()[pri:50, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:44 IST" name="activeCsv" finished-at="2024-02-01T14:37:47 IST" duration-ms="3279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- activeCsv -->
        <test-method signature="activePdf()[pri:51, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:47 IST" name="activePdf" finished-at="2024-02-01T14:37:51 IST" duration-ms="3415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- activePdf -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:47 IST" name="getResult" finished-at="2024-02-01T14:37:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=activeCsv status=SUCCESS method=AudiTrail_PosDevice.activeCsv()[pri:50, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusTypeExit()[pri:52, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:51 IST" name="statusTypeExit" finished-at="2024-02-01T14:37:51 IST" duration-ms="236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusTypeExit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:51 IST" name="getResult" finished-at="2024-02-01T14:37:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=activePdf status=SUCCESS method=AudiTrail_PosDevice.activePdf()[pri:51, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:51 IST" name="getResult" finished-at="2024-02-01T14:37:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusTypeExit status=SUCCESS method=AudiTrail_PosDevice.statusTypeExit()[pri:52, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="inActiveStatusDatesEnabled()[pri:53, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:51 IST" name="inActiveStatusDatesEnabled" finished-at="2024-02-01T14:37:58 IST" duration-ms="6737" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inActiveStatusDatesEnabled -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:58 IST" name="getResult" finished-at="2024-02-01T14:37:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=inActiveStatusDatesEnabled status=SUCCESS method=AudiTrail_PosDevice.inActiveStatusDatesEnabled()[pri:53, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectStartDateInActive()[pri:54, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:37:58 IST" name="selectStartDateInActive" finished-at="2024-02-01T14:38:07 IST" duration-ms="9589" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStartDateInActive -->
        <test-method signature="selectEndDateInActive()[pri:55, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:38:07 IST" name="selectEndDateInActive" finished-at="2024-02-01T14:38:20 IST" duration-ms="12409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectEndDateInActive -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:38:07 IST" name="getResult" finished-at="2024-02-01T14:38:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStartDateInActive status=SUCCESS method=AudiTrail_PosDevice.selectStartDateInActive()[pri:54, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:38:20 IST" name="getResult" finished-at="2024-02-01T14:38:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectEndDateInActive status=SUCCESS method=AudiTrail_PosDevice.selectEndDateInActive()[pri:55, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="inActiveCsv()[pri:56, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:38:20 IST" name="inActiveCsv" finished-at="2024-02-01T14:38:23 IST" duration-ms="3228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inActiveCsv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:38:23 IST" name="getResult" finished-at="2024-02-01T14:38:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=inActiveCsv status=SUCCESS method=AudiTrail_PosDevice.inActiveCsv()[pri:56, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="inActivePdf()[pri:57, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:38:23 IST" name="inActivePdf" finished-at="2024-02-01T14:38:28 IST" duration-ms="4507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inActivePdf -->
        <test-method signature="typeMaintenance()[pri:58, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:38:28 IST" name="typeMaintenance" finished-at="2024-02-01T14:38:28 IST" duration-ms="231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeMaintenance -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:38:28 IST" name="getResult" finished-at="2024-02-01T14:38:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=inActivePdf status=SUCCESS method=AudiTrail_PosDevice.inActivePdf()[pri:57, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="maintenanceDatesEnabled()[pri:59, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:38:28 IST" name="maintenanceDatesEnabled" finished-at="2024-02-01T14:38:34 IST" duration-ms="6717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maintenanceDatesEnabled -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:38:28 IST" name="getResult" finished-at="2024-02-01T14:38:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=typeMaintenance status=SUCCESS method=AudiTrail_PosDevice.typeMaintenance()[pri:58, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectStartDateMaintenance()[pri:60, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:38:34 IST" name="selectStartDateMaintenance" finished-at="2024-02-01T14:38:43 IST" duration-ms="8754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStartDateMaintenance -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:38:34 IST" name="getResult" finished-at="2024-02-01T14:38:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=maintenanceDatesEnabled status=SUCCESS method=AudiTrail_PosDevice.maintenanceDatesEnabled()[pri:59, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:38:43 IST" name="getResult" finished-at="2024-02-01T14:38:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStartDateMaintenance status=SUCCESS method=AudiTrail_PosDevice.selectStartDateMaintenance()[pri:60, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectEndDateMaintenance()[pri:61, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:38:43 IST" name="selectEndDateMaintenance" finished-at="2024-02-01T14:38:55 IST" duration-ms="11525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectEndDateMaintenance -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:38:55 IST" name="getResult" finished-at="2024-02-01T14:38:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectEndDateMaintenance status=SUCCESS method=AudiTrail_PosDevice.selectEndDateMaintenance()[pri:61, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="maintenanceCsv()[pri:62, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:38:55 IST" name="maintenanceCsv" finished-at="2024-02-01T14:38:58 IST" duration-ms="3287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maintenanceCsv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:38:58 IST" name="getResult" finished-at="2024-02-01T14:38:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=maintenanceCsv status=SUCCESS method=AudiTrail_PosDevice.maintenanceCsv()[pri:62, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="maintenancePdf()[pri:63, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:38:58 IST" name="maintenancePdf" finished-at="2024-02-01T14:39:06 IST" duration-ms="8393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maintenancePdf -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:39:06 IST" name="getResult" finished-at="2024-02-01T14:39:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=maintenancePdf status=SUCCESS method=AudiTrail_PosDevice.maintenancePdf()[pri:63, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusTypeForceExit()[pri:64, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:39:06 IST" name="statusTypeForceExit" finished-at="2024-02-01T14:39:07 IST" duration-ms="244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusTypeForceExit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:39:07 IST" name="getResult" finished-at="2024-02-01T14:39:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusTypeForceExit status=SUCCESS method=AudiTrail_PosDevice.statusTypeForceExit()[pri:64, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="forceExitStatusDatesEnabled()[pri:65, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:39:07 IST" name="forceExitStatusDatesEnabled" finished-at="2024-02-01T14:39:13 IST" duration-ms="6813" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forceExitStatusDatesEnabled -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:39:13 IST" name="getResult" finished-at="2024-02-01T14:39:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forceExitStatusDatesEnabled status=SUCCESS method=AudiTrail_PosDevice.forceExitStatusDatesEnabled()[pri:65, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectStartDateForceExit()[pri:66, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:39:13 IST" name="selectStartDateForceExit" finished-at="2024-02-01T14:39:22 IST" duration-ms="8795" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStartDateForceExit -->
        <test-method signature="selectEndDateForceExit()[pri:67, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:39:22 IST" name="selectEndDateForceExit" finished-at="2024-02-01T14:39:34 IST" duration-ms="11527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectEndDateForceExit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:39:22 IST" name="getResult" finished-at="2024-02-01T14:39:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStartDateForceExit status=SUCCESS method=AudiTrail_PosDevice.selectStartDateForceExit()[pri:66, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:39:34 IST" name="getResult" finished-at="2024-02-01T14:39:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectEndDateForceExit status=SUCCESS method=AudiTrail_PosDevice.selectEndDateForceExit()[pri:67, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="forceExitCsv()[pri:68, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:39:34 IST" name="forceExitCsv" finished-at="2024-02-01T14:39:37 IST" duration-ms="3266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forceExitCsv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:39:37 IST" name="getResult" finished-at="2024-02-01T14:39:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forceExitCsv status=SUCCESS method=AudiTrail_PosDevice.forceExitCsv()[pri:68, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="forceExitPdf()[pri:69, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:39:37 IST" name="forceExitPdf" finished-at="2024-02-01T14:39:41 IST" duration-ms="3901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forceExitPdf -->
        <test-method signature="logout()[pri:70, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:39:41 IST" name="logout" finished-at="2024-02-01T14:39:46 IST" duration-ms="5322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:39:41 IST" name="getResult" finished-at="2024-02-01T14:39:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forceExitPdf status=SUCCESS method=AudiTrail_PosDevice.forceExitPdf()[pri:69, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:39:46 IST" name="getResult" finished-at="2024-02-01T14:39:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=AudiTrail_PosDevice.logout()[pri:70, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.AudiTrail_PosDevice@6db9f5a4]" started-at="2024-02-01T14:39:46 IST" name="tearDown" finished-at="2024-02-01T14:39:47 IST" duration-ms="437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.AudiTrail_PosDevice -->
    </test> <!-- AudiTrail_PosDevice -->
    <test started-at="2024-02-01T14:39:47 IST" name="VehicleBlockList" finished-at="2024-02-01T14:42:12 IST" duration-ms="144821">
      <class name="com.selenium.VehicleBlockList">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:39:47 IST" name="setUp" finished-at="2024-02-01T14:39:49 IST" duration-ms="2450" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:39:49 IST" name="login" finished-at="2024-02-01T14:39:56 IST" duration-ms="6386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:39:56 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:40:01 IST" duration-ms="5315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:39:56 IST" name="getResult" finished-at="2024-02-01T14:39:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=VehicleBlockList.login()[pri:1, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:01 IST" name="getResult" finished-at="2024-02-01T14:40:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=VehicleBlockList.revenueDashboardOpen()[pri:2, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="redirectVehicleBlockListPage()[pri:3, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:01 IST" name="redirectVehicleBlockListPage" finished-at="2024-02-01T14:40:05 IST" duration-ms="4517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectVehicleBlockListPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:05 IST" name="getResult" finished-at="2024-02-01T14:40:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectVehicleBlockListPage status=SUCCESS method=VehicleBlockList.redirectVehicleBlockListPage()[pri:3, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="viewBlocklistSiteList()[pri:4, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:05 IST" name="viewBlocklistSiteList" finished-at="2024-02-01T14:40:12 IST" duration-ms="6623" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewBlocklistSiteList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:12 IST" name="getResult" finished-at="2024-02-01T14:40:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewBlocklistSiteList status=SUCCESS method=VehicleBlockList.viewBlocklistSiteList()[pri:4, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleBlockListDates()[pri:5, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:12 IST" name="vehicleBlockListDates" finished-at="2024-02-01T14:40:17 IST" duration-ms="4882" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleBlockListDates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:17 IST" name="getResult" finished-at="2024-02-01T14:40:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleBlockListDates status=SUCCESS method=VehicleBlockList.vehicleBlockListDates()[pri:5, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectBlocklistStartDate()[pri:6, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:17 IST" name="selectBlocklistStartDate" finished-at="2024-02-01T14:40:26 IST" duration-ms="8659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectBlocklistStartDate -->
        <test-method signature="selectBlockListEndDate()[pri:7, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:26 IST" name="selectBlockListEndDate" finished-at="2024-02-01T14:40:37 IST" duration-ms="11510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectBlockListEndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:26 IST" name="getResult" finished-at="2024-02-01T14:40:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectBlocklistStartDate status=SUCCESS method=VehicleBlockList.selectBlocklistStartDate()[pri:6, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:37 IST" name="getResult" finished-at="2024-02-01T14:40:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectBlockListEndDate status=SUCCESS method=VehicleBlockList.selectBlockListEndDate()[pri:7, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleBlockDayCsv()[pri:8, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:37 IST" name="vehicleBlockDayCsv" finished-at="2024-02-01T14:40:38 IST" duration-ms="1017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleBlockDayCsv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:38 IST" name="getResult" finished-at="2024-02-01T14:40:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleBlockDayCsv status=SUCCESS method=VehicleBlockList.vehicleBlockDayCsv()[pri:8, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleBlockDayPdf()[pri:9, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:38 IST" name="vehicleBlockDayPdf" finished-at="2024-02-01T14:40:40 IST" duration-ms="2018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleBlockDayPdf -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:40 IST" name="getResult" finished-at="2024-02-01T14:40:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleBlockDayPdf status=SUCCESS method=VehicleBlockList.vehicleBlockDayPdf()[pri:9, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleBlockWeekCsv()[pri:10, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:40 IST" name="vehicleBlockWeekCsv" finished-at="2024-02-01T14:40:40 IST" duration-ms="17" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[Element <label class="btn btn-outline-primary"> is not clickable at point (544,237) because another element <div id="loading"> obscures it
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [54d9f8ed-48e2-44bc-af4e-7f50889fce0b, clickElement {id=1373f203-8301-4270-ac02-e9b4535300f6}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:7361, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1194151, moz:profile: /tmp/rust_mozprofile7B9yaV, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:7361/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (54d9f8ed-48e2-44bc-af4e-7f50889fce0b)] -> xpath: //*[@id='dayRangeFilter']/label[3]]
Session ID: 54d9f8ed-48e2-44bc-af4e-7f50889fce0b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: Element <label class="btn btn-outline-primary"> is not clickable at point (544,237) because another element <div id="loading"> obscures it
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [54d9f8ed-48e2-44bc-af4e-7f50889fce0b, clickElement {id=1373f203-8301-4270-ac02-e9b4535300f6}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:7361, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1194151, moz:profile: /tmp/rust_mozprofile7B9yaV, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:7361/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (54d9f8ed-48e2-44bc-af4e-7f50889fce0b)] -> xpath: //*[@id='dayRangeFilter']/label[3]]
Session ID: 54d9f8ed-48e2-44bc-af4e-7f50889fce0b
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at com.selenium.VehicleBlockList.vehicleBlockWeekCsv(VehicleBlockList.java:135)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleBlockWeekCsv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:40 IST" name="getResult" finished-at="2024-02-01T14:40:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleBlockWeekCsv status=FAILURE method=VehicleBlockList.vehicleBlockWeekCsv()[pri:10, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleBlockWeekPdf()[pri:11, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:40 IST" name="vehicleBlockWeekPdf" finished-at="2024-02-01T14:40:42 IST" duration-ms="2019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleBlockWeekPdf -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:42 IST" name="getResult" finished-at="2024-02-01T14:40:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleBlockWeekPdf status=SUCCESS method=VehicleBlockList.vehicleBlockWeekPdf()[pri:11, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleBlockMonthCsv()[pri:12, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:42 IST" name="vehicleBlockMonthCsv" finished-at="2024-02-01T14:40:42 IST" duration-ms="20" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[Element <label class="btn btn-outline-primary active"> is not clickable at point (588,237) because another element <div id="loading"> obscures it
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [54d9f8ed-48e2-44bc-af4e-7f50889fce0b, clickElement {id=3322e0fc-9beb-46e3-9c39-0d757ae33425}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:7361, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1194151, moz:profile: /tmp/rust_mozprofile7B9yaV, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:7361/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (54d9f8ed-48e2-44bc-af4e-7f50889fce0b)] -> xpath: //*[@id='dayRangeFilter']/label[4]]
Session ID: 54d9f8ed-48e2-44bc-af4e-7f50889fce0b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: Element <label class="btn btn-outline-primary active"> is not clickable at point (588,237) because another element <div id="loading"> obscures it
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [54d9f8ed-48e2-44bc-af4e-7f50889fce0b, clickElement {id=3322e0fc-9beb-46e3-9c39-0d757ae33425}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:7361, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1194151, moz:profile: /tmp/rust_mozprofile7B9yaV, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:7361/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (54d9f8ed-48e2-44bc-af4e-7f50889fce0b)] -> xpath: //*[@id='dayRangeFilter']/label[4]]
Session ID: 54d9f8ed-48e2-44bc-af4e-7f50889fce0b
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at com.selenium.VehicleBlockList.vehicleBlockMonthCsv(VehicleBlockList.java:146)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleBlockMonthCsv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:42 IST" name="getResult" finished-at="2024-02-01T14:40:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleBlockMonthCsv status=FAILURE method=VehicleBlockList.vehicleBlockMonthCsv()[pri:12, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleBlockMonthPdf()[pri:13, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:42 IST" name="vehicleBlockMonthPdf" finished-at="2024-02-01T14:40:44 IST" duration-ms="2017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleBlockMonthPdf -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:44 IST" name="getResult" finished-at="2024-02-01T14:40:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleBlockMonthPdf status=SUCCESS method=VehicleBlockList.vehicleBlockMonthPdf()[pri:13, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectListCount()[pri:14, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:44 IST" name="selectListCount" finished-at="2024-02-01T14:40:47 IST" duration-ms="2299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectListCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:47 IST" name="getResult" finished-at="2024-02-01T14:40:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectListCount status=SUCCESS method=VehicleBlockList.selectListCount()[pri:14, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleBlockListTable()[pri:15, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:40:47 IST" name="vehicleBlockListTable" finished-at="2024-02-01T14:41:48 IST" duration-ms="61074" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleBlockListTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:41:48 IST" name="getResult" finished-at="2024-02-01T14:41:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleBlockListTable status=SUCCESS method=VehicleBlockList.vehicleBlockListTable()[pri:15, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchVehicleNumber()[pri:16, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:41:48 IST" name="searchVehicleNumber" finished-at="2024-02-01T14:41:56 IST" duration-ms="8043" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:41:56 IST" name="getResult" finished-at="2024-02-01T14:41:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchVehicleNumber status=SUCCESS method=VehicleBlockList.searchVehicleNumber()[pri:16, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchBlockListMobileNumber()[pri:17, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:41:56 IST" name="searchBlockListMobileNumber" finished-at="2024-02-01T14:42:04 IST" duration-ms="8082" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchBlockListMobileNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:42:04 IST" name="getResult" finished-at="2024-02-01T14:42:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchBlockListMobileNumber status=SUCCESS method=VehicleBlockList.searchBlockListMobileNumber()[pri:17, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateBlockListDate()[pri:18, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:42:04 IST" name="validateBlockListDate" finished-at="2024-02-01T14:42:04 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBlockListDate -->
        <test-method signature="validateBlockListUser()[pri:19, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:42:04 IST" name="validateBlockListUser" finished-at="2024-02-01T14:42:04 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBlockListUser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:42:04 IST" name="getResult" finished-at="2024-02-01T14:42:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBlockListDate status=SUCCESS method=VehicleBlockList.validateBlockListDate()[pri:18, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:42:04 IST" name="getResult" finished-at="2024-02-01T14:42:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBlockListUser status=SUCCESS method=VehicleBlockList.validateBlockListUser()[pri:19, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateBlockListMobileNum()[pri:20, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:42:04 IST" name="validateBlockListMobileNum" finished-at="2024-02-01T14:42:04 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBlockListMobileNum -->
        <test-method signature="validateBlockListVehicleNum()[pri:21, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:42:04 IST" name="validateBlockListVehicleNum" finished-at="2024-02-01T14:42:04 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBlockListVehicleNum -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:42:04 IST" name="getResult" finished-at="2024-02-01T14:42:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBlockListMobileNum status=SUCCESS method=VehicleBlockList.validateBlockListMobileNum()[pri:20, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateBlockListAmount()[pri:22, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:42:04 IST" name="validateBlockListAmount" finished-at="2024-02-01T14:42:04 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBlockListAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:42:04 IST" name="getResult" finished-at="2024-02-01T14:42:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBlockListVehicleNum status=SUCCESS method=VehicleBlockList.validateBlockListVehicleNum()[pri:21, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:42:04 IST" name="getResult" finished-at="2024-02-01T14:42:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBlockListAmount status=SUCCESS method=VehicleBlockList.validateBlockListAmount()[pri:22, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateBlockListStatus()[pri:23, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:42:04 IST" name="validateBlockListStatus" finished-at="2024-02-01T14:42:04 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBlockListStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:42:04 IST" name="getResult" finished-at="2024-02-01T14:42:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBlockListStatus status=SUCCESS method=VehicleBlockList.validateBlockListStatus()[pri:23, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectAction()[pri:24, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:42:04 IST" name="selectAction" finished-at="2024-02-01T14:42:09 IST" duration-ms="5009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAction -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:42:09 IST" name="getResult" finished-at="2024-02-01T14:42:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAction status=SUCCESS method=VehicleBlockList.selectAction()[pri:24, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:25, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:42:09 IST" name="logout" finished-at="2024-02-01T14:42:11 IST" duration-ms="2309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:42:11 IST" name="tearDown" finished-at="2024-02-01T14:42:12 IST" duration-ms="440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.VehicleBlockList@5609159b]" started-at="2024-02-01T14:42:11 IST" name="getResult" finished-at="2024-02-01T14:42:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=VehicleBlockList.logout()[pri:25, instance:com.selenium.VehicleBlockList@5609159b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.selenium.VehicleBlockList -->
    </test> <!-- VehicleBlockList -->
    <test started-at="2024-02-01T14:42:12 IST" name="CouponReports" finished-at="2024-02-01T14:43:48 IST" duration-ms="95945">
      <class name="com.selenium.CouponReports">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:42:12 IST" name="setUp" finished-at="2024-02-01T14:42:14 IST" duration-ms="2234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:42:14 IST" name="login" finished-at="2024-02-01T14:42:19 IST" duration-ms="5382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:42:19 IST" name="getResult" finished-at="2024-02-01T14:42:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=CouponReports.login()[pri:1, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:42:19 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:42:24 IST" duration-ms="5231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:42:24 IST" name="getResult" finished-at="2024-02-01T14:42:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=CouponReports.revenueDashboardOpen()[pri:2, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="redirectCouponReportsPage()[pri:3, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:42:24 IST" name="redirectCouponReportsPage" finished-at="2024-02-01T14:42:29 IST" duration-ms="4435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectCouponReportsPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:42:29 IST" name="getResult" finished-at="2024-02-01T14:42:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectCouponReportsPage status=SUCCESS method=CouponReports.redirectCouponReportsPage()[pri:3, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="viewCouponSiteList()[pri:4, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:42:29 IST" name="viewCouponSiteList" finished-at="2024-02-01T14:42:32 IST" duration-ms="3605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewCouponSiteList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:42:32 IST" name="getResult" finished-at="2024-02-01T14:42:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewCouponSiteList status=SUCCESS method=CouponReports.viewCouponSiteList()[pri:4, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="vehicleBlockListDates()[pri:5, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:42:32 IST" name="vehicleBlockListDates" finished-at="2024-02-01T14:42:37 IST" duration-ms="4853" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleBlockListDates -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:42:37 IST" name="getResult" finished-at="2024-02-01T14:42:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=vehicleBlockListDates status=SUCCESS method=CouponReports.vehicleBlockListDates()[pri:5, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectCouponStartDate()[pri:6, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:42:37 IST" name="selectCouponStartDate" finished-at="2024-02-01T14:42:46 IST" duration-ms="8709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCouponStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:42:46 IST" name="getResult" finished-at="2024-02-01T14:42:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCouponStartDate status=SUCCESS method=CouponReports.selectCouponStartDate()[pri:6, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectCouponEndDate()[pri:7, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:42:46 IST" name="selectCouponEndDate" finished-at="2024-02-01T14:42:58 IST" duration-ms="11505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCouponEndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:42:58 IST" name="getResult" finished-at="2024-02-01T14:42:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCouponEndDate status=SUCCESS method=CouponReports.selectCouponEndDate()[pri:7, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectListCount()[pri:8, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:42:58 IST" name="selectListCount" finished-at="2024-02-01T14:43:00 IST" duration-ms="2295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectListCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:00 IST" name="getResult" finished-at="2024-02-01T14:43:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectListCount status=SUCCESS method=CouponReports.selectListCount()[pri:8, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getCouponsTable()[pri:9, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:00 IST" name="getCouponsTable" finished-at="2024-02-01T14:43:06 IST" duration-ms="6024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCouponsTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:06 IST" name="getResult" finished-at="2024-02-01T14:43:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getCouponsTable status=SUCCESS method=CouponReports.getCouponsTable()[pri:9, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchVehicleNumber()[pri:10, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:06 IST" name="searchVehicleNumber" finished-at="2024-02-01T14:43:13 IST" duration-ms="7071" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:13 IST" name="getResult" finished-at="2024-02-01T14:43:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchVehicleNumber status=SUCCESS method=CouponReports.searchVehicleNumber()[pri:10, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchCouponMobileNumber()[pri:11, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:13 IST" name="searchCouponMobileNumber" finished-at="2024-02-01T14:43:20 IST" duration-ms="7107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchCouponMobileNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:20 IST" name="getResult" finished-at="2024-02-01T14:43:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchCouponMobileNumber status=SUCCESS method=CouponReports.searchCouponMobileNumber()[pri:11, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchCouponCode()[pri:12, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:20 IST" name="searchCouponCode" finished-at="2024-02-01T14:43:27 IST" duration-ms="7122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchCouponCode -->
        <test-method signature="searchCouponStatus()[pri:13, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:27 IST" name="searchCouponStatus" finished-at="2024-02-01T14:43:34 IST" duration-ms="7098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchCouponStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:27 IST" name="getResult" finished-at="2024-02-01T14:43:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchCouponCode status=SUCCESS method=CouponReports.searchCouponCode()[pri:12, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchCouponCreatedTime()[pri:14, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:34 IST" name="searchCouponCreatedTime" finished-at="2024-02-01T14:43:41 IST" duration-ms="7137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchCouponCreatedTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:34 IST" name="getResult" finished-at="2024-02-01T14:43:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchCouponStatus status=SUCCESS method=CouponReports.searchCouponStatus()[pri:13, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCouponVehicleNumber()[pri:15, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="validateCouponVehicleNumber" finished-at="2024-02-01T14:43:41 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCouponVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="getResult" finished-at="2024-02-01T14:43:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchCouponCreatedTime status=SUCCESS method=CouponReports.searchCouponCreatedTime()[pri:14, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCouponMobileNumber()[pri:16, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="validateCouponMobileNumber" finished-at="2024-02-01T14:43:41 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCouponMobileNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="getResult" finished-at="2024-02-01T14:43:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCouponVehicleNumber status=SUCCESS method=CouponReports.validateCouponVehicleNumber()[pri:15, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCouponCode()[pri:17, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="validateCouponCode" finished-at="2024-02-01T14:43:41 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCouponCode -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="getResult" finished-at="2024-02-01T14:43:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCouponMobileNumber status=SUCCESS method=CouponReports.validateCouponMobileNumber()[pri:16, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="getResult" finished-at="2024-02-01T14:43:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCouponCode status=SUCCESS method=CouponReports.validateCouponCode()[pri:17, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCouponAmount()[pri:18, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="validateCouponAmount" finished-at="2024-02-01T14:43:41 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCouponAmount -->
        <test-method signature="validateCouponStatusNull()[pri:19, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="validateCouponStatusNull" finished-at="2024-02-01T14:43:41 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCouponStatusNull -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="getResult" finished-at="2024-02-01T14:43:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCouponAmount status=SUCCESS method=CouponReports.validateCouponAmount()[pri:18, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCouponStatusInvalid()[pri:20, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="validateCouponStatusInvalid" finished-at="2024-02-01T14:43:41 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCouponStatusInvalid -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="getResult" finished-at="2024-02-01T14:43:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCouponStatusNull status=SUCCESS method=CouponReports.validateCouponStatusNull()[pri:19, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCouponCreatedTime()[pri:21, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="validateCouponCreatedTime" finished-at="2024-02-01T14:43:41 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCouponCreatedTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="getResult" finished-at="2024-02-01T14:43:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCouponStatusInvalid status=SUCCESS method=CouponReports.validateCouponStatusInvalid()[pri:20, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCouponStartTime()[pri:22, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="validateCouponStartTime" finished-at="2024-02-01T14:43:41 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCouponStartTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="getResult" finished-at="2024-02-01T14:43:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCouponCreatedTime status=SUCCESS method=CouponReports.validateCouponCreatedTime()[pri:21, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateCouponEndDate()[pri:23, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="validateCouponEndDate" finished-at="2024-02-01T14:43:41 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCouponEndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="getResult" finished-at="2024-02-01T14:43:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCouponStartTime status=SUCCESS method=CouponReports.validateCouponStartTime()[pri:22, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:25, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="logout" finished-at="2024-02-01T14:43:47 IST" duration-ms="5287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:41 IST" name="getResult" finished-at="2024-02-01T14:43:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCouponEndDate status=SUCCESS method=CouponReports.validateCouponEndDate()[pri:23, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:47 IST" name="getResult" finished-at="2024-02-01T14:43:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=CouponReports.logout()[pri:25, instance:com.selenium.CouponReports@60015ef5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.CouponReports@60015ef5]" started-at="2024-02-01T14:43:47 IST" name="tearDown" finished-at="2024-02-01T14:43:48 IST" duration-ms="763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.CouponReports -->
    </test> <!-- CouponReports -->
    <test started-at="2024-02-01T14:43:48 IST" name="UnAccountedReports" finished-at="2024-02-01T14:46:31 IST" duration-ms="163883">
      <class name="com.selenium.UnAccountedReports">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:43:48 IST" name="setUp" finished-at="2024-02-01T14:43:50 IST" duration-ms="2338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:43:50 IST" name="login" finished-at="2024-02-01T14:43:56 IST" duration-ms="6248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:43:56 IST" name="getResult" finished-at="2024-02-01T14:43:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=UnAccountedReports.login()[pri:1, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:43:56 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:44:01 IST" duration-ms="5312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:01 IST" name="getResult" finished-at="2024-02-01T14:44:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=UnAccountedReports.revenueDashboardOpen()[pri:2, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="redirectUnAccountedReportsPage()[pri:3, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:01 IST" name="redirectUnAccountedReportsPage" finished-at="2024-02-01T14:44:06 IST" duration-ms="4458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectUnAccountedReportsPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:06 IST" name="getResult" finished-at="2024-02-01T14:44:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectUnAccountedReportsPage status=SUCCESS method=UnAccountedReports.redirectUnAccountedReportsPage()[pri:3, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="viewUnAccountedSiteList()[pri:4, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:06 IST" name="viewUnAccountedSiteList" finished-at="2024-02-01T14:44:09 IST" duration-ms="3001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewUnAccountedSiteList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:09 IST" name="getResult" finished-at="2024-02-01T14:44:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewUnAccountedSiteList status=SUCCESS method=UnAccountedReports.viewUnAccountedSiteList()[pri:4, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectDevicemPOS()[pri:5, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:09 IST" name="selectDevicemPOS" finished-at="2024-02-01T14:44:11 IST" duration-ms="2062" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectDevicemPOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:11 IST" name="getResult" finished-at="2024-02-01T14:44:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectDevicemPOS status=SUCCESS method=UnAccountedReports.selectDevicemPOS()[pri:5, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mPOSDatesEnabled()[pri:6, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:11 IST" name="mPOSDatesEnabled" finished-at="2024-02-01T14:44:16 IST" duration-ms="4843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mPOSDatesEnabled -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:16 IST" name="getResult" finished-at="2024-02-01T14:44:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mPOSDatesEnabled status=SUCCESS method=UnAccountedReports.mPOSDatesEnabled()[pri:6, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectMPOSStartDate()[pri:7, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:16 IST" name="selectMPOSStartDate" finished-at="2024-02-01T14:44:20 IST" duration-ms="4053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMPOSStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:20 IST" name="getResult" finished-at="2024-02-01T14:44:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMPOSStartDate status=SUCCESS method=UnAccountedReports.selectMPOSStartDate()[pri:7, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectMPOSEndDate()[pri:8, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:20 IST" name="selectMPOSEndDate" finished-at="2024-02-01T14:44:22 IST" duration-ms="2003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMPOSEndDate -->
        <test-method signature="selectMPOSListCount()[pri:9, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:22 IST" name="selectMPOSListCount" finished-at="2024-02-01T14:44:24 IST" duration-ms="2053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMPOSListCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:22 IST" name="getResult" finished-at="2024-02-01T14:44:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMPOSEndDate status=SUCCESS method=UnAccountedReports.selectMPOSEndDate()[pri:8, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:24 IST" name="getResult" finished-at="2024-02-01T14:44:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMPOSListCount status=SUCCESS method=UnAccountedReports.selectMPOSListCount()[pri:9, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getUnAccountedTableDataMPOS()[pri:10, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:24 IST" name="getUnAccountedTableDataMPOS" finished-at="2024-02-01T14:44:30 IST" duration-ms="6028" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUnAccountedTableDataMPOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:30 IST" name="getResult" finished-at="2024-02-01T14:44:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getUnAccountedTableDataMPOS status=SUCCESS method=UnAccountedReports.getUnAccountedTableDataMPOS()[pri:10, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchMPOSVehicleNumber()[pri:11, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:30 IST" name="searchMPOSVehicleNumber" finished-at="2024-02-01T14:44:34 IST" duration-ms="4080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMPOSVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="getResult" finished-at="2024-02-01T14:44:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchMPOSVehicleNumber status=SUCCESS method=UnAccountedReports.searchMPOSVehicleNumber()[pri:11, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateMPOSTicketNo()[pri:12, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="validateMPOSTicketNo" finished-at="2024-02-01T14:44:34 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMPOSTicketNo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="getResult" finished-at="2024-02-01T14:44:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMPOSTicketNo status=SUCCESS method=UnAccountedReports.validateMPOSTicketNo()[pri:12, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateMPOSVehicleNumber()[pri:13, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="validateMPOSVehicleNumber" finished-at="2024-02-01T14:44:34 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMPOSVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="getResult" finished-at="2024-02-01T14:44:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMPOSVehicleNumber status=SUCCESS method=UnAccountedReports.validateMPOSVehicleNumber()[pri:13, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateMPOSMobileNumber()[pri:14, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="validateMPOSMobileNumber" finished-at="2024-02-01T14:44:34 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMPOSMobileNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="getResult" finished-at="2024-02-01T14:44:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMPOSMobileNumber status=SUCCESS method=UnAccountedReports.validateMPOSMobileNumber()[pri:14, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateMPOSVehicleType()[pri:15, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="validateMPOSVehicleType" finished-at="2024-02-01T14:44:34 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMPOSVehicleType -->
        <test-method signature="validateMPOSAmount()[pri:16, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="validateMPOSAmount" finished-at="2024-02-01T14:44:34 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMPOSAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="getResult" finished-at="2024-02-01T14:44:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMPOSVehicleType status=SUCCESS method=UnAccountedReports.validateMPOSVehicleType()[pri:15, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="getResult" finished-at="2024-02-01T14:44:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMPOSAmount status=SUCCESS method=UnAccountedReports.validateMPOSAmount()[pri:16, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateMPOSDisCountedAmount()[pri:17, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="validateMPOSDisCountedAmount" finished-at="2024-02-01T14:44:34 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMPOSDisCountedAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="getResult" finished-at="2024-02-01T14:44:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMPOSDisCountedAmount status=SUCCESS method=UnAccountedReports.validateMPOSDisCountedAmount()[pri:17, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateMPOSPaymentType()[pri:18, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="validateMPOSPaymentType" finished-at="2024-02-01T14:44:34 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMPOSPaymentType -->
        <test-method signature="validateMPOSStatus()[pri:19, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="validateMPOSStatus" finished-at="2024-02-01T14:44:34 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMPOSStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="getResult" finished-at="2024-02-01T14:44:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMPOSPaymentType status=SUCCESS method=UnAccountedReports.validateMPOSPaymentType()[pri:18, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateMPOSType()[pri:20, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="validateMPOSType" finished-at="2024-02-01T14:44:34 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMPOSType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="getResult" finished-at="2024-02-01T14:44:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMPOSStatus status=SUCCESS method=UnAccountedReports.validateMPOSStatus()[pri:19, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectDeviceAndroid()[pri:21, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="selectDeviceAndroid" finished-at="2024-02-01T14:44:36 IST" duration-ms="2049" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectDeviceAndroid -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:34 IST" name="getResult" finished-at="2024-02-01T14:44:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMPOSType status=SUCCESS method=UnAccountedReports.validateMPOSType()[pri:20, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:36 IST" name="getResult" finished-at="2024-02-01T14:44:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectDeviceAndroid status=SUCCESS method=UnAccountedReports.selectDeviceAndroid()[pri:21, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="androidDatesEnabled()[pri:22, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:36 IST" name="androidDatesEnabled" finished-at="2024-02-01T14:44:41 IST" duration-ms="4879" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- androidDatesEnabled -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:41 IST" name="getResult" finished-at="2024-02-01T14:44:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=androidDatesEnabled status=SUCCESS method=UnAccountedReports.androidDatesEnabled()[pri:22, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectANDROIDStartDate()[pri:23, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:41 IST" name="selectANDROIDStartDate" finished-at="2024-02-01T14:44:50 IST" duration-ms="8725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectANDROIDStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:50 IST" name="getResult" finished-at="2024-02-01T14:44:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectANDROIDStartDate status=SUCCESS method=UnAccountedReports.selectANDROIDStartDate()[pri:23, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectANDROIDEndDate()[pri:24, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:44:50 IST" name="selectANDROIDEndDate" finished-at="2024-02-01T14:45:01 IST" duration-ms="11485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectANDROIDEndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:01 IST" name="getResult" finished-at="2024-02-01T14:45:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectANDROIDEndDate status=SUCCESS method=UnAccountedReports.selectANDROIDEndDate()[pri:24, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectANDROIDListCount()[pri:25, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:01 IST" name="selectANDROIDListCount" finished-at="2024-02-01T14:45:04 IST" duration-ms="2299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectANDROIDListCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:04 IST" name="getResult" finished-at="2024-02-01T14:45:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectANDROIDListCount status=SUCCESS method=UnAccountedReports.selectANDROIDListCount()[pri:25, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="unAccountedTableANDROID()[pri:26, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:04 IST" name="unAccountedTableANDROID" finished-at="2024-02-01T14:45:10 IST" duration-ms="6030" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unAccountedTableANDROID -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:10 IST" name="getResult" finished-at="2024-02-01T14:45:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unAccountedTableANDROID status=SUCCESS method=UnAccountedReports.unAccountedTableANDROID()[pri:26, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchANDROIDVehicleNumber()[pri:27, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:10 IST" name="searchANDROIDVehicleNumber" finished-at="2024-02-01T14:45:14 IST" duration-ms="4099" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchANDROIDVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="getResult" finished-at="2024-02-01T14:45:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchANDROIDVehicleNumber status=SUCCESS method=UnAccountedReports.searchANDROIDVehicleNumber()[pri:27, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateANDROIDTicketNo()[pri:28, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="validateANDROIDTicketNo" finished-at="2024-02-01T14:45:14 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateANDROIDTicketNo -->
        <test-method signature="validateANDROIDVehicleNumber()[pri:29, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="validateANDROIDVehicleNumber" finished-at="2024-02-01T14:45:14 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateANDROIDVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="getResult" finished-at="2024-02-01T14:45:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateANDROIDTicketNo status=SUCCESS method=UnAccountedReports.validateANDROIDTicketNo()[pri:28, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="getResult" finished-at="2024-02-01T14:45:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateANDROIDVehicleNumber status=SUCCESS method=UnAccountedReports.validateANDROIDVehicleNumber()[pri:29, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateANDROIDMobileNumber()[pri:30, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="validateANDROIDMobileNumber" finished-at="2024-02-01T14:45:14 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateANDROIDMobileNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="getResult" finished-at="2024-02-01T14:45:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateANDROIDMobileNumber status=SUCCESS method=UnAccountedReports.validateANDROIDMobileNumber()[pri:30, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateANDROIDVehicleType()[pri:31, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="validateANDROIDVehicleType" finished-at="2024-02-01T14:45:14 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateANDROIDVehicleType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="getResult" finished-at="2024-02-01T14:45:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateANDROIDVehicleType status=SUCCESS method=UnAccountedReports.validateANDROIDVehicleType()[pri:31, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateANDROIDAmount()[pri:32, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="validateANDROIDAmount" finished-at="2024-02-01T14:45:14 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateANDROIDAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="getResult" finished-at="2024-02-01T14:45:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateANDROIDAmount status=SUCCESS method=UnAccountedReports.validateANDROIDAmount()[pri:32, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateANDROIDDisCountedAmount()[pri:33, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="validateANDROIDDisCountedAmount" finished-at="2024-02-01T14:45:14 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateANDROIDDisCountedAmount -->
        <test-method signature="validateANDROIDPaymentType()[pri:34, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="validateANDROIDPaymentType" finished-at="2024-02-01T14:45:14 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateANDROIDPaymentType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="getResult" finished-at="2024-02-01T14:45:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateANDROIDDisCountedAmount status=SUCCESS method=UnAccountedReports.validateANDROIDDisCountedAmount()[pri:33, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateANDROIDStatus()[pri:35, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="validateANDROIDStatus" finished-at="2024-02-01T14:45:14 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateANDROIDStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="getResult" finished-at="2024-02-01T14:45:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateANDROIDPaymentType status=SUCCESS method=UnAccountedReports.validateANDROIDPaymentType()[pri:34, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateANDROIDType()[pri:36, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="validateANDROIDType" finished-at="2024-02-01T14:45:14 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateANDROIDType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="getResult" finished-at="2024-02-01T14:45:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateANDROIDStatus status=SUCCESS method=UnAccountedReports.validateANDROIDStatus()[pri:35, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="getResult" finished-at="2024-02-01T14:45:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateANDROIDType status=SUCCESS method=UnAccountedReports.validateANDROIDType()[pri:36, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectDeviceiOS()[pri:37, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:14 IST" name="selectDeviceiOS" finished-at="2024-02-01T14:45:16 IST" duration-ms="2041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectDeviceiOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:16 IST" name="getResult" finished-at="2024-02-01T14:45:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectDeviceiOS status=SUCCESS method=UnAccountedReports.selectDeviceiOS()[pri:37, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="iOSDatesEnabled()[pri:38, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:16 IST" name="iOSDatesEnabled" finished-at="2024-02-01T14:45:17 IST" duration-ms="1052" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iOSDatesEnabled -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:17 IST" name="getResult" finished-at="2024-02-01T14:45:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=iOSDatesEnabled status=SUCCESS method=UnAccountedReports.iOSDatesEnabled()[pri:38, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectiOSStartDate()[pri:39, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:17 IST" name="selectiOSStartDate" finished-at="2024-02-01T14:45:26 IST" duration-ms="8728" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectiOSStartDate -->
        <test-method signature="selectiOSEndDate()[pri:40, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:26 IST" name="selectiOSEndDate" finished-at="2024-02-01T14:45:37 IST" duration-ms="11516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectiOSEndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:26 IST" name="getResult" finished-at="2024-02-01T14:45:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectiOSStartDate status=SUCCESS method=UnAccountedReports.selectiOSStartDate()[pri:39, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:37 IST" name="getResult" finished-at="2024-02-01T14:45:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectiOSEndDate status=SUCCESS method=UnAccountedReports.selectiOSEndDate()[pri:40, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectiOSListCount()[pri:41, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:37 IST" name="selectiOSListCount" finished-at="2024-02-01T14:45:39 IST" duration-ms="2036" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectiOSListCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:39 IST" name="getResult" finished-at="2024-02-01T14:45:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectiOSListCount status=SUCCESS method=UnAccountedReports.selectiOSListCount()[pri:41, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="unAccountedTableiOS()[pri:42, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:39 IST" name="unAccountedTableiOS" finished-at="2024-02-01T14:45:45 IST" duration-ms="6022" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unAccountedTableiOS -->
        <test-method signature="searchiOSVehicleNumber()[pri:43, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:45 IST" name="searchiOSVehicleNumber" finished-at="2024-02-01T14:45:49 IST" duration-ms="4046" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchiOSVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:45 IST" name="getResult" finished-at="2024-02-01T14:45:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unAccountedTableiOS status=SUCCESS method=UnAccountedReports.unAccountedTableiOS()[pri:42, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateiOSTicketNo()[pri:44, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="validateiOSTicketNo" finished-at="2024-02-01T14:45:49 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateiOSTicketNo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="getResult" finished-at="2024-02-01T14:45:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchiOSVehicleNumber status=SUCCESS method=UnAccountedReports.searchiOSVehicleNumber()[pri:43, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateiOSVehicleNumber()[pri:45, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="validateiOSVehicleNumber" finished-at="2024-02-01T14:45:49 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateiOSVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="getResult" finished-at="2024-02-01T14:45:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateiOSTicketNo status=SUCCESS method=UnAccountedReports.validateiOSTicketNo()[pri:44, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateiOSMobileNumber()[pri:46, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="validateiOSMobileNumber" finished-at="2024-02-01T14:45:49 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateiOSMobileNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="getResult" finished-at="2024-02-01T14:45:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateiOSVehicleNumber status=SUCCESS method=UnAccountedReports.validateiOSVehicleNumber()[pri:45, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateiOSVehicleType()[pri:47, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="validateiOSVehicleType" finished-at="2024-02-01T14:45:49 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateiOSVehicleType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="getResult" finished-at="2024-02-01T14:45:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateiOSMobileNumber status=SUCCESS method=UnAccountedReports.validateiOSMobileNumber()[pri:46, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateiOSAmount()[pri:48, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="validateiOSAmount" finished-at="2024-02-01T14:45:49 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateiOSAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="getResult" finished-at="2024-02-01T14:45:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateiOSVehicleType status=SUCCESS method=UnAccountedReports.validateiOSVehicleType()[pri:47, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateiOSDisCountedAmount()[pri:49, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="validateiOSDisCountedAmount" finished-at="2024-02-01T14:45:49 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateiOSDisCountedAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="getResult" finished-at="2024-02-01T14:45:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateiOSAmount status=SUCCESS method=UnAccountedReports.validateiOSAmount()[pri:48, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateiOSPaymentType()[pri:50, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="validateiOSPaymentType" finished-at="2024-02-01T14:45:49 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateiOSPaymentType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="getResult" finished-at="2024-02-01T14:45:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateiOSDisCountedAmount status=SUCCESS method=UnAccountedReports.validateiOSDisCountedAmount()[pri:49, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="getResult" finished-at="2024-02-01T14:45:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateiOSPaymentType status=SUCCESS method=UnAccountedReports.validateiOSPaymentType()[pri:50, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateiOSStatus()[pri:51, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="validateiOSStatus" finished-at="2024-02-01T14:45:49 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateiOSStatus -->
        <test-method signature="validateiOSType()[pri:52, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="validateiOSType" finished-at="2024-02-01T14:45:49 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateiOSType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="getResult" finished-at="2024-02-01T14:45:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateiOSStatus status=SUCCESS method=UnAccountedReports.validateiOSStatus()[pri:51, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="getResult" finished-at="2024-02-01T14:45:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateiOSType status=SUCCESS method=UnAccountedReports.validateiOSType()[pri:52, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectDeviceMobileMPOS()[pri:53, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:49 IST" name="selectDeviceMobileMPOS" finished-at="2024-02-01T14:45:51 IST" duration-ms="2018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectDeviceMobileMPOS -->
        <test-method signature="mobileMPOSDatesEnabled()[pri:54, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:51 IST" name="mobileMPOSDatesEnabled" finished-at="2024-02-01T14:45:56 IST" duration-ms="4775" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileMPOSDatesEnabled -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:51 IST" name="getResult" finished-at="2024-02-01T14:45:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectDeviceMobileMPOS status=SUCCESS method=UnAccountedReports.selectDeviceMobileMPOS()[pri:53, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:56 IST" name="getResult" finished-at="2024-02-01T14:45:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobileMPOSDatesEnabled status=SUCCESS method=UnAccountedReports.mobileMPOSDatesEnabled()[pri:54, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectMobileMOSStartDate()[pri:55, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:45:56 IST" name="selectMobileMOSStartDate" finished-at="2024-02-01T14:46:05 IST" duration-ms="8731" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMobileMOSStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:05 IST" name="getResult" finished-at="2024-02-01T14:46:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMobileMOSStartDate status=SUCCESS method=UnAccountedReports.selectMobileMOSStartDate()[pri:55, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectMobileMPOSEndDate()[pri:56, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:05 IST" name="selectMobileMPOSEndDate" finished-at="2024-02-01T14:46:16 IST" duration-ms="11551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMobileMPOSEndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:16 IST" name="getResult" finished-at="2024-02-01T14:46:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMobileMPOSEndDate status=SUCCESS method=UnAccountedReports.selectMobileMPOSEndDate()[pri:56, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectMobileMPOSListCount()[pri:57, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:16 IST" name="selectMobileMPOSListCount" finished-at="2024-02-01T14:46:18 IST" duration-ms="2037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMobileMPOSListCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:18 IST" name="getResult" finished-at="2024-02-01T14:46:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMobileMPOSListCount status=SUCCESS method=UnAccountedReports.selectMobileMPOSListCount()[pri:57, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="unAccountedTableMobileMPOS()[pri:58, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:18 IST" name="unAccountedTableMobileMPOS" finished-at="2024-02-01T14:46:24 IST" duration-ms="6021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unAccountedTableMobileMPOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:24 IST" name="getResult" finished-at="2024-02-01T14:46:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unAccountedTableMobileMPOS status=SUCCESS method=UnAccountedReports.unAccountedTableMobileMPOS()[pri:58, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchVehicleNumber()[pri:59, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:24 IST" name="searchVehicleNumber" finished-at="2024-02-01T14:46:29 IST" duration-ms="4051" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="getResult" finished-at="2024-02-01T14:46:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchVehicleNumber status=SUCCESS method=UnAccountedReports.searchVehicleNumber()[pri:59, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateMmPOSTicketNo()[pri:60, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="validateMmPOSTicketNo" finished-at="2024-02-01T14:46:29 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMmPOSTicketNo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="getResult" finished-at="2024-02-01T14:46:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMmPOSTicketNo status=SUCCESS method=UnAccountedReports.validateMmPOSTicketNo()[pri:60, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateMmPOSVehicleNumber()[pri:61, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="validateMmPOSVehicleNumber" finished-at="2024-02-01T14:46:29 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMmPOSVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="getResult" finished-at="2024-02-01T14:46:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMmPOSVehicleNumber status=SUCCESS method=UnAccountedReports.validateMmPOSVehicleNumber()[pri:61, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateMmPOSMobileNumber()[pri:62, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="validateMmPOSMobileNumber" finished-at="2024-02-01T14:46:29 IST" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMmPOSMobileNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="getResult" finished-at="2024-02-01T14:46:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMmPOSMobileNumber status=SUCCESS method=UnAccountedReports.validateMmPOSMobileNumber()[pri:62, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateMmPOSVehicleType()[pri:63, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="validateMmPOSVehicleType" finished-at="2024-02-01T14:46:29 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMmPOSVehicleType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="getResult" finished-at="2024-02-01T14:46:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMmPOSVehicleType status=SUCCESS method=UnAccountedReports.validateMmPOSVehicleType()[pri:63, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateMmPOSAmount()[pri:64, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="validateMmPOSAmount" finished-at="2024-02-01T14:46:29 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMmPOSAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="getResult" finished-at="2024-02-01T14:46:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMmPOSAmount status=SUCCESS method=UnAccountedReports.validateMmPOSAmount()[pri:64, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateMmPOSDisCountedAmount()[pri:65, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="validateMmPOSDisCountedAmount" finished-at="2024-02-01T14:46:29 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMmPOSDisCountedAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="getResult" finished-at="2024-02-01T14:46:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMmPOSDisCountedAmount status=SUCCESS method=UnAccountedReports.validateMmPOSDisCountedAmount()[pri:65, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateMmPOSPaymentType()[pri:66, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="validateMmPOSPaymentType" finished-at="2024-02-01T14:46:29 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMmPOSPaymentType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="getResult" finished-at="2024-02-01T14:46:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMmPOSPaymentType status=SUCCESS method=UnAccountedReports.validateMmPOSPaymentType()[pri:66, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateMmPOSStatus()[pri:67, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="validateMmPOSStatus" finished-at="2024-02-01T14:46:29 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMmPOSStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="getResult" finished-at="2024-02-01T14:46:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMmPOSStatus status=SUCCESS method=UnAccountedReports.validateMmPOSStatus()[pri:67, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateMmPOSType()[pri:68, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="validateMmPOSType" finished-at="2024-02-01T14:46:29 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMmPOSType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="getResult" finished-at="2024-02-01T14:46:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMmPOSType status=SUCCESS method=UnAccountedReports.validateMmPOSType()[pri:68, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:69, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:29 IST" name="logout" finished-at="2024-02-01T14:46:31 IST" duration-ms="2266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:31 IST" name="getResult" finished-at="2024-02-01T14:46:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=UnAccountedReports.logout()[pri:69, instance:com.selenium.UnAccountedReports@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.UnAccountedReports@52102734]" started-at="2024-02-01T14:46:31 IST" name="tearDown" finished-at="2024-02-01T14:46:31 IST" duration-ms="420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.UnAccountedReports -->
    </test> <!-- UnAccountedReports -->
    <test started-at="2024-02-01T14:46:31 IST" name="PayUReports" finished-at="2024-02-01T14:49:11 IST" duration-ms="159320">
      <class name="com.selenium.PayUReports">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:46:31 IST" name="setUp" finished-at="2024-02-01T14:46:34 IST" duration-ms="2222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:46:34 IST" name="login" finished-at="2024-02-01T14:46:39 IST" duration-ms="5525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="redirectRevenueDashboard()[pri:2, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:46:39 IST" name="redirectRevenueDashboard" finished-at="2024-02-01T14:46:44 IST" duration-ms="5205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectRevenueDashboard -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:46:39 IST" name="getResult" finished-at="2024-02-01T14:46:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=PayUReports.login()[pri:1, instance:com.selenium.PayUReports@62e7f11d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:46:44 IST" name="getResult" finished-at="2024-02-01T14:46:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectRevenueDashboard status=SUCCESS method=PayUReports.redirectRevenueDashboard()[pri:2, instance:com.selenium.PayUReports@62e7f11d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="redirectPayUReportsPage()[pri:3, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:46:44 IST" name="redirectPayUReportsPage" finished-at="2024-02-01T14:46:51 IST" duration-ms="6441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectPayUReportsPage -->
        <test-method signature="payUDatesEnabled()[pri:4, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:46:51 IST" name="payUDatesEnabled" finished-at="2024-02-01T14:46:52 IST" duration-ms="1061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- payUDatesEnabled -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:46:51 IST" name="getResult" finished-at="2024-02-01T14:46:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectPayUReportsPage status=SUCCESS method=PayUReports.redirectPayUReportsPage()[pri:3, instance:com.selenium.PayUReports@62e7f11d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:46:52 IST" name="getResult" finished-at="2024-02-01T14:46:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=payUDatesEnabled status=SUCCESS method=PayUReports.payUDatesEnabled()[pri:4, instance:com.selenium.PayUReports@62e7f11d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="payUReportCount()[pri:5, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:46:52 IST" name="payUReportCount" finished-at="2024-02-01T14:46:57 IST" duration-ms="5277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- payUReportCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:46:57 IST" name="getResult" finished-at="2024-02-01T14:46:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=payUReportCount status=SUCCESS method=PayUReports.payUReportCount()[pri:5, instance:com.selenium.PayUReports@62e7f11d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectPayUStartDate()[pri:6, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:46:57 IST" name="selectPayUStartDate" finished-at="2024-02-01T14:47:06 IST" duration-ms="8753" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPayUStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:47:06 IST" name="getResult" finished-at="2024-02-01T14:47:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectPayUStartDate status=SUCCESS method=PayUReports.selectPayUStartDate()[pri:6, instance:com.selenium.PayUReports@62e7f11d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectPayUEndDate()[pri:7, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:47:06 IST" name="selectPayUEndDate" finished-at="2024-02-01T14:47:23 IST" duration-ms="16862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPayUEndDate -->
        <test-method signature="downloadPayUReportCSVfile()[pri:8, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:47:23 IST" name="downloadPayUReportCSVfile" finished-at="2024-02-01T14:47:25 IST" duration-ms="2272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadPayUReportCSVfile -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:47:23 IST" name="getResult" finished-at="2024-02-01T14:47:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectPayUEndDate status=SUCCESS method=PayUReports.selectPayUEndDate()[pri:7, instance:com.selenium.PayUReports@62e7f11d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:47:25 IST" name="getResult" finished-at="2024-02-01T14:47:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadPayUReportCSVfile status=SUCCESS method=PayUReports.downloadPayUReportCSVfile()[pri:8, instance:com.selenium.PayUReports@62e7f11d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downloadPayUReportPDFfile()[pri:9, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:47:25 IST" name="downloadPayUReportPDFfile" finished-at="2024-02-01T14:47:32 IST" duration-ms="7037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadPayUReportPDFfile -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:47:32 IST" name="getResult" finished-at="2024-02-01T14:47:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadPayUReportPDFfile status=SUCCESS method=PayUReports.downloadPayUReportPDFfile()[pri:9, instance:com.selenium.PayUReports@62e7f11d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="nextPage()[pri:10, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:47:32 IST" name="nextPage" finished-at="2024-02-01T14:47:37 IST" duration-ms="5045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nextPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:47:37 IST" name="getResult" finished-at="2024-02-01T14:47:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nextPage status=SUCCESS method=PayUReports.nextPage()[pri:10, instance:com.selenium.PayUReports@62e7f11d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="payUReportsTable()[pri:11, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:47:37 IST" name="payUReportsTable" finished-at="2024-02-01T14:49:00 IST" duration-ms="82883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- payUReportsTable -->
        <test-method signature="validatePayUAmount()[pri:12, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:49:00 IST" name="validatePayUAmount" finished-at="2024-02-01T14:49:00 IST" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePayUAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:49:00 IST" name="getResult" finished-at="2024-02-01T14:49:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=payUReportsTable status=SUCCESS method=PayUReports.payUReportsTable()[pri:11, instance:com.selenium.PayUReports@62e7f11d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:49:00 IST" name="getResult" finished-at="2024-02-01T14:49:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePayUAmount status=SUCCESS method=PayUReports.validatePayUAmount()[pri:12, instance:com.selenium.PayUReports@62e7f11d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validatePayUStatus()[pri:13, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:49:00 IST" name="validatePayUStatus" finished-at="2024-02-01T14:49:00 IST" duration-ms="142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePayUStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:49:00 IST" name="getResult" finished-at="2024-02-01T14:49:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePayUStatus status=SUCCESS method=PayUReports.validatePayUStatus()[pri:13, instance:com.selenium.PayUReports@62e7f11d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="againDownloadCsv()[pri:14, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:49:00 IST" name="againDownloadCsv" finished-at="2024-02-01T14:49:03 IST" duration-ms="2241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- againDownloadCsv -->
        <test-method signature="againDownloadPdf()[pri:15, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:49:03 IST" name="againDownloadPdf" finished-at="2024-02-01T14:49:10 IST" duration-ms="7748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- againDownloadPdf -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:49:03 IST" name="getResult" finished-at="2024-02-01T14:49:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=againDownloadCsv status=SUCCESS method=PayUReports.againDownloadCsv()[pri:14, instance:com.selenium.PayUReports@62e7f11d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:49:10 IST" name="getResult" finished-at="2024-02-01T14:49:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=againDownloadPdf status=SUCCESS method=PayUReports.againDownloadPdf()[pri:15, instance:com.selenium.PayUReports@62e7f11d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.PayUReports@62e7f11d]" started-at="2024-02-01T14:49:10 IST" name="tearDown" finished-at="2024-02-01T14:49:11 IST" duration-ms="416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.PayUReports -->
    </test> <!-- PayUReports -->
    <test started-at="2024-02-01T14:49:11 IST" name="LiveInfo" finished-at="2024-02-01T14:50:43 IST" duration-ms="92724">
      <class name="com.selenium.LiveInfo">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:49:11 IST" name="setUp" finished-at="2024-02-01T14:49:13 IST" duration-ms="2453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:49:13 IST" name="login" finished-at="2024-02-01T14:49:19 IST" duration-ms="5906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:49:19 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:49:24 IST" duration-ms="5154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:49:19 IST" name="getResult" finished-at="2024-02-01T14:49:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=LiveInfo.login()[pri:1, instance:com.selenium.LiveInfo@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="liveInfoPage()[pri:3, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:49:24 IST" name="liveInfoPage" finished-at="2024-02-01T14:49:26 IST" duration-ms="2212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- liveInfoPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:49:24 IST" name="getResult" finished-at="2024-02-01T14:49:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=LiveInfo.revenueDashboardOpen()[pri:2, instance:com.selenium.LiveInfo@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteStatusPage()[pri:4, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:49:26 IST" name="siteStatusPage" finished-at="2024-02-01T14:49:31 IST" duration-ms="4198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteStatusPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:49:26 IST" name="getResult" finished-at="2024-02-01T14:49:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=liveInfoPage status=SUCCESS method=LiveInfo.liveInfoPage()[pri:3, instance:com.selenium.LiveInfo@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:49:31 IST" name="getResult" finished-at="2024-02-01T14:49:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteStatusPage status=SUCCESS method=LiveInfo.siteStatusPage()[pri:4, instance:com.selenium.LiveInfo@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteStatusZoomOut()[pri:5, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:49:31 IST" name="siteStatusZoomOut" finished-at="2024-02-01T14:49:38 IST" duration-ms="7222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteStatusZoomOut -->
        <test-method signature="siteStatusZoomIn()[pri:6, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:49:38 IST" name="siteStatusZoomIn" finished-at="2024-02-01T14:49:43 IST" duration-ms="5538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteStatusZoomIn -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:49:38 IST" name="getResult" finished-at="2024-02-01T14:49:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteStatusZoomOut status=SUCCESS method=LiveInfo.siteStatusZoomOut()[pri:5, instance:com.selenium.LiveInfo@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:49:43 IST" name="getResult" finished-at="2024-02-01T14:49:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteStatusZoomIn status=SUCCESS method=LiveInfo.siteStatusZoomIn()[pri:6, instance:com.selenium.LiveInfo@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="hoverParkingLocationAndRightClick()[pri:7, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:49:43 IST" name="hoverParkingLocationAndRightClick" finished-at="2024-02-01T14:49:53 IST" duration-ms="9139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hoverParkingLocationAndRightClick -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:49:53 IST" name="getResult" finished-at="2024-02-01T14:49:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hoverParkingLocationAndRightClick status=SUCCESS method=LiveInfo.hoverParkingLocationAndRightClick()[pri:7, instance:com.selenium.LiveInfo@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="deviceStatusPage()[pri:8, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:49:53 IST" name="deviceStatusPage" finished-at="2024-02-01T14:49:57 IST" duration-ms="4116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deviceStatusPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:49:57 IST" name="getResult" finished-at="2024-02-01T14:49:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deviceStatusPage status=SUCCESS method=LiveInfo.deviceStatusPage()[pri:8, instance:com.selenium.LiveInfo@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="deviceStatusZoomOut()[pri:9, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:49:57 IST" name="deviceStatusZoomOut" finished-at="2024-02-01T14:50:04 IST" duration-ms="7226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deviceStatusZoomOut -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:04 IST" name="getResult" finished-at="2024-02-01T14:50:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deviceStatusZoomOut status=SUCCESS method=LiveInfo.deviceStatusZoomOut()[pri:9, instance:com.selenium.LiveInfo@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="deviceStatusZoomIn()[pri:10, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:04 IST" name="deviceStatusZoomIn" finished-at="2024-02-01T14:50:10 IST" duration-ms="5715" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deviceStatusZoomIn -->
        <test-method signature="selectDeviceLocation()[pri:11, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:10 IST" name="selectDeviceLocation" finished-at="2024-02-01T14:50:15 IST" duration-ms="5168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectDeviceLocation -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:10 IST" name="getResult" finished-at="2024-02-01T14:50:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deviceStatusZoomIn status=SUCCESS method=LiveInfo.deviceStatusZoomIn()[pri:10, instance:com.selenium.LiveInfo@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:15 IST" name="getResult" finished-at="2024-02-01T14:50:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectDeviceLocation status=SUCCESS method=LiveInfo.selectDeviceLocation()[pri:11, instance:com.selenium.LiveInfo@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="transactionsPage()[pri:12, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:15 IST" name="transactionsPage" finished-at="2024-02-01T14:50:19 IST" duration-ms="4096" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transactionsPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:19 IST" name="getResult" finished-at="2024-02-01T14:50:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transactionsPage status=SUCCESS method=LiveInfo.transactionsPage()[pri:12, instance:com.selenium.LiveInfo@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="transactionsCSV()[pri:13, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:19 IST" name="transactionsCSV" finished-at="2024-02-01T14:50:29 IST" duration-ms="10063" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transactionsCSV -->
        <test-method signature="transactionsPDF()[pri:14, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:29 IST" name="transactionsPDF" finished-at="2024-02-01T14:50:31 IST" duration-ms="2250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transactionsPDF -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:29 IST" name="getResult" finished-at="2024-02-01T14:50:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transactionsCSV status=SUCCESS method=LiveInfo.transactionsCSV()[pri:13, instance:com.selenium.LiveInfo@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="nextPageTransactions()[pri:15, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:31 IST" name="nextPageTransactions" finished-at="2024-02-01T14:50:34 IST" duration-ms="3010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nextPageTransactions -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:31 IST" name="getResult" finished-at="2024-02-01T14:50:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transactionsPDF status=SUCCESS method=LiveInfo.transactionsPDF()[pri:14, instance:com.selenium.LiveInfo@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:34 IST" name="getResult" finished-at="2024-02-01T14:50:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=nextPageTransactions status=SUCCESS method=LiveInfo.nextPageTransactions()[pri:15, instance:com.selenium.LiveInfo@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getSiteNamesTransactions()[pri:16, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:34 IST" name="getSiteNamesTransactions" finished-at="2024-02-01T14:50:36 IST" duration-ms="2024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSiteNamesTransactions -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:36 IST" name="getResult" finished-at="2024-02-01T14:50:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSiteNamesTransactions status=SUCCESS method=LiveInfo.getSiteNamesTransactions()[pri:16, instance:com.selenium.LiveInfo@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchSiteName()[pri:17, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:36 IST" name="searchSiteName" finished-at="2024-02-01T14:50:40 IST" duration-ms="4148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchSiteName -->
        <test-method signature="logout()[pri:20, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:40 IST" name="logout" finished-at="2024-02-01T14:50:43 IST" duration-ms="2288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:40 IST" name="getResult" finished-at="2024-02-01T14:50:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchSiteName status=SUCCESS method=LiveInfo.searchSiteName()[pri:17, instance:com.selenium.LiveInfo@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:43 IST" name="getResult" finished-at="2024-02-01T14:50:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=LiveInfo.logout()[pri:20, instance:com.selenium.LiveInfo@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.LiveInfo@59af0466]" started-at="2024-02-01T14:50:43 IST" name="tearDown" finished-at="2024-02-01T14:50:43 IST" duration-ms="785" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.LiveInfo -->
    </test> <!-- LiveInfo -->
    <test started-at="2024-02-01T14:50:43 IST" name="AlarmsNotifications" finished-at="2024-02-01T14:52:54 IST" duration-ms="130981">
      <class name="com.selenium.AlarmsNotifications">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:50:43 IST" name="setUp" finished-at="2024-02-01T14:50:46 IST" duration-ms="2479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:50:46 IST" name="login" finished-at="2024-02-01T14:50:53 IST" duration-ms="6580" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:50:53 IST" name="getResult" finished-at="2024-02-01T14:50:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=AlarmsNotifications.login()[pri:1, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:50:53 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:50:58 IST" duration-ms="5288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:50:58 IST" name="getResult" finished-at="2024-02-01T14:50:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=AlarmsNotifications.revenueDashboardOpen()[pri:2, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="alarmsNotificationsPage()[pri:3, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:50:58 IST" name="alarmsNotificationsPage" finished-at="2024-02-01T14:51:00 IST" duration-ms="2103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alarmsNotificationsPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:00 IST" name="getResult" finished-at="2024-02-01T14:51:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alarmsNotificationsPage status=SUCCESS method=AlarmsNotifications.alarmsNotificationsPage()[pri:3, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickManualAlert()[pri:4, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:00 IST" name="clickManualAlert" finished-at="2024-02-01T14:51:05 IST" duration-ms="5017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickManualAlert -->
        <test-method signature="createManualTask()[pri:5, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:05 IST" name="createManualTask" finished-at="2024-02-01T14:51:07 IST" duration-ms="2010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createManualTask -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:05 IST" name="getResult" finished-at="2024-02-01T14:51:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickManualAlert status=SUCCESS method=AlarmsNotifications.clickManualAlert()[pri:4, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:07 IST" name="getResult" finished-at="2024-02-01T14:51:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createManualTask status=SUCCESS method=AlarmsNotifications.createManualTask()[pri:5, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="createMsgSelectSite()[pri:6, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:07 IST" name="createMsgSelectSite" finished-at="2024-02-01T14:51:07 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMsgSelectSite -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:07 IST" name="getResult" finished-at="2024-02-01T14:51:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createMsgSelectSite status=SUCCESS method=AlarmsNotifications.createMsgSelectSite()[pri:6, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectManualServiceUser()[pri:7, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:07 IST" name="selectManualServiceUser" finished-at="2024-02-01T14:51:10 IST" duration-ms="3011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectManualServiceUser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:10 IST" name="getResult" finished-at="2024-02-01T14:51:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectManualServiceUser status=SUCCESS method=AlarmsNotifications.selectManualServiceUser()[pri:7, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectAlertType()[pri:8, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:10 IST" name="selectAlertType" finished-at="2024-02-01T14:51:10 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAlertType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:10 IST" name="getResult" finished-at="2024-02-01T14:51:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAlertType status=SUCCESS method=AlarmsNotifications.selectAlertType()[pri:8, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="alertDescription()[pri:9, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:10 IST" name="alertDescription" finished-at="2024-02-01T14:51:10 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertDescription -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:10 IST" name="getResult" finished-at="2024-02-01T14:51:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alertDescription status=SUCCESS method=AlarmsNotifications.alertDescription()[pri:9, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="manualTaskSubmit()[pri:10, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:10 IST" name="manualTaskSubmit" finished-at="2024-02-01T14:51:12 IST" duration-ms="2005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- manualTaskSubmit -->
        <test-method signature="manualTaskAlertStatus()[pri:11, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:12 IST" name="manualTaskAlertStatus" finished-at="2024-02-01T14:51:15 IST" duration-ms="3007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- manualTaskAlertStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:12 IST" name="getResult" finished-at="2024-02-01T14:51:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=manualTaskSubmit status=SUCCESS method=AlarmsNotifications.manualTaskSubmit()[pri:10, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:15 IST" name="getResult" finished-at="2024-02-01T14:51:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=manualTaskAlertStatus status=SUCCESS method=AlarmsNotifications.manualTaskAlertStatus()[pri:11, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickManualAlertOKButton()[pri:12, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:15 IST" name="clickManualAlertOKButton" finished-at="2024-02-01T14:51:15 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickManualAlertOKButton -->
        <test-method signature="manualTaskCsv()[pri:13, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:15 IST" name="manualTaskCsv" finished-at="2024-02-01T14:51:20 IST" duration-ms="5047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- manualTaskCsv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:15 IST" name="getResult" finished-at="2024-02-01T14:51:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickManualAlertOKButton status=SUCCESS method=AlarmsNotifications.clickManualAlertOKButton()[pri:12, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="manualTaskPdf()[pri:14, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:20 IST" name="manualTaskPdf" finished-at="2024-02-01T14:51:23 IST" duration-ms="3004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- manualTaskPdf -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:20 IST" name="getResult" finished-at="2024-02-01T14:51:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=manualTaskCsv status=SUCCESS method=AlarmsNotifications.manualTaskCsv()[pri:13, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickOverTime()[pri:15, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:23 IST" name="clickOverTime" finished-at="2024-02-01T14:51:28 IST" duration-ms="5006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOverTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:23 IST" name="getResult" finished-at="2024-02-01T14:51:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=manualTaskPdf status=SUCCESS method=AlarmsNotifications.manualTaskPdf()[pri:14, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:28 IST" name="getResult" finished-at="2024-02-01T14:51:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOverTime status=SUCCESS method=AlarmsNotifications.clickOverTime()[pri:15, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectSiteOverTimeVehicle()[pri:16, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:28 IST" name="selectSiteOverTimeVehicle" finished-at="2024-02-01T14:51:28 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectSiteOverTimeVehicle -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:28 IST" name="getResult" finished-at="2024-02-01T14:51:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectSiteOverTimeVehicle status=SUCCESS method=AlarmsNotifications.selectSiteOverTimeVehicle()[pri:16, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downloadOTCSVFiles()[pri:17, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:28 IST" name="downloadOTCSVFiles" finished-at="2024-02-01T14:51:28 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadOTCSVFiles -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:28 IST" name="getResult" finished-at="2024-02-01T14:51:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadOTCSVFiles status=SUCCESS method=AlarmsNotifications.downloadOTCSVFiles()[pri:17, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downloadOTPDFFiles()[pri:18, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:28 IST" name="downloadOTPDFFiles" finished-at="2024-02-01T14:51:31 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadOTPDFFiles -->
        <test-method signature="selectOTFourWheeler()[pri:19, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:31 IST" name="selectOTFourWheeler" finished-at="2024-02-01T14:51:34 IST" duration-ms="3007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOTFourWheeler -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:31 IST" name="getResult" finished-at="2024-02-01T14:51:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadOTPDFFiles status=SUCCESS method=AlarmsNotifications.downloadOTPDFFiles()[pri:18, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectOTTwoWheeler()[pri:20, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:34 IST" name="selectOTTwoWheeler" finished-at="2024-02-01T14:51:34 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOTTwoWheeler -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:34 IST" name="getResult" finished-at="2024-02-01T14:51:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectOTFourWheeler status=SUCCESS method=AlarmsNotifications.selectOTFourWheeler()[pri:19, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:34 IST" name="getResult" finished-at="2024-02-01T14:51:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectOTTwoWheeler status=SUCCESS method=AlarmsNotifications.selectOTTwoWheeler()[pri:20, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickTransactionAlert()[pri:21, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:34 IST" name="clickTransactionAlert" finished-at="2024-02-01T14:51:36 IST" duration-ms="2005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickTransactionAlert -->
        <test-method signature="trasnactionCsv()[pri:22, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:36 IST" name="trasnactionCsv" finished-at="2024-02-01T14:51:41 IST" duration-ms="5065" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trasnactionCsv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:36 IST" name="getResult" finished-at="2024-02-01T14:51:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickTransactionAlert status=SUCCESS method=AlarmsNotifications.clickTransactionAlert()[pri:21, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="transactionPdf()[pri:23, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:41 IST" name="transactionPdf" finished-at="2024-02-01T14:51:41 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transactionPdf -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:41 IST" name="getResult" finished-at="2024-02-01T14:51:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=trasnactionCsv status=SUCCESS method=AlarmsNotifications.trasnactionCsv()[pri:22, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:41 IST" name="getResult" finished-at="2024-02-01T14:51:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transactionPdf status=SUCCESS method=AlarmsNotifications.transactionPdf()[pri:23, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickPOSAlert()[pri:24, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:41 IST" name="clickPOSAlert" finished-at="2024-02-01T14:51:43 IST" duration-ms="2005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickPOSAlert -->
        <test-method signature="posAlertsDatesEnabled()[pri:25, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:43 IST" name="posAlertsDatesEnabled" finished-at="2024-02-01T14:51:46 IST" duration-ms="3042" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- posAlertsDatesEnabled -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:43 IST" name="getResult" finished-at="2024-02-01T14:51:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickPOSAlert status=SUCCESS method=AlarmsNotifications.clickPOSAlert()[pri:24, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:46 IST" name="getResult" finished-at="2024-02-01T14:51:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=posAlertsDatesEnabled status=SUCCESS method=AlarmsNotifications.posAlertsDatesEnabled()[pri:25, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="posCsv()[pri:26, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:46 IST" name="posCsv" finished-at="2024-02-01T14:51:51 IST" duration-ms="5067" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- posCsv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:51 IST" name="getResult" finished-at="2024-02-01T14:51:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=posCsv status=SUCCESS method=AlarmsNotifications.posCsv()[pri:26, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="posPdf()[pri:27, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:51 IST" name="posPdf" finished-at="2024-02-01T14:51:54 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- posPdf -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:54 IST" name="getResult" finished-at="2024-02-01T14:51:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=posPdf status=SUCCESS method=AlarmsNotifications.posPdf()[pri:27, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickDeviceAlert()[pri:28, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:54 IST" name="clickDeviceAlert" finished-at="2024-02-01T14:51:59 IST" duration-ms="5003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickDeviceAlert -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:59 IST" name="getResult" finished-at="2024-02-01T14:51:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickDeviceAlert status=SUCCESS method=AlarmsNotifications.clickDeviceAlert()[pri:28, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="devcieAlertsCsv()[pri:29, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:51:59 IST" name="devcieAlertsCsv" finished-at="2024-02-01T14:52:04 IST" duration-ms="5073" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- devcieAlertsCsv -->
        <test-method signature="deviceAlertsPdf()[pri:30, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:04 IST" name="deviceAlertsPdf" finished-at="2024-02-01T14:52:07 IST" duration-ms="3009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deviceAlertsPdf -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:04 IST" name="getResult" finished-at="2024-02-01T14:52:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=devcieAlertsCsv status=SUCCESS method=AlarmsNotifications.devcieAlertsCsv()[pri:29, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:07 IST" name="getResult" finished-at="2024-02-01T14:52:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deviceAlertsPdf status=SUCCESS method=AlarmsNotifications.deviceAlertsPdf()[pri:30, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="deviceAlertsNextPage()[pri:31, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:07 IST" name="deviceAlertsNextPage" finished-at="2024-02-01T14:52:10 IST" duration-ms="3007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deviceAlertsNextPage -->
        <test-method signature="editTaskDeviceAlerts()[pri:32, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:10 IST" name="editTaskDeviceAlerts" finished-at="2024-02-01T14:52:12 IST" duration-ms="2008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editTaskDeviceAlerts -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:10 IST" name="getResult" finished-at="2024-02-01T14:52:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deviceAlertsNextPage status=SUCCESS method=AlarmsNotifications.deviceAlertsNextPage()[pri:31, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:12 IST" name="getResult" finished-at="2024-02-01T14:52:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editTaskDeviceAlerts status=SUCCESS method=AlarmsNotifications.editTaskDeviceAlerts()[pri:32, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectServiceUser()[pri:33, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:12 IST" name="selectServiceUser" finished-at="2024-02-01T14:52:17 IST" duration-ms="5057" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectServiceUser -->
        <test-method signature="taskSubmitBtn()[pri:34, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:17 IST" name="taskSubmitBtn" finished-at="2024-02-01T14:52:19 IST" duration-ms="2003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- taskSubmitBtn -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:17 IST" name="getResult" finished-at="2024-02-01T14:52:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectServiceUser status=SUCCESS method=AlarmsNotifications.selectServiceUser()[pri:33, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="taskAlertStatus()[pri:35, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:19 IST" name="taskAlertStatus" finished-at="2024-02-01T14:52:22 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- taskAlertStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:19 IST" name="getResult" finished-at="2024-02-01T14:52:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=taskSubmitBtn status=SUCCESS method=AlarmsNotifications.taskSubmitBtn()[pri:34, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:22 IST" name="getResult" finished-at="2024-02-01T14:52:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=taskAlertStatus status=SUCCESS method=AlarmsNotifications.taskAlertStatus()[pri:35, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickSweetAlertOKButton()[pri:36, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:22 IST" name="clickSweetAlertOKButton" finished-at="2024-02-01T14:52:22 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickSweetAlertOKButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:22 IST" name="getResult" finished-at="2024-02-01T14:52:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickSweetAlertOKButton status=SUCCESS method=AlarmsNotifications.clickSweetAlertOKButton()[pri:36, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="taskPopUPClose()[pri:37, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:22 IST" name="taskPopUPClose" finished-at="2024-02-01T14:52:25 IST" duration-ms="3018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- taskPopUPClose -->
        <test-method signature="clickTaskViewButton()[pri:38, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:26 IST" name="clickTaskViewButton" finished-at="2024-02-01T14:52:29 IST" duration-ms="3003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickTaskViewButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:26 IST" name="getResult" finished-at="2024-02-01T14:52:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=taskPopUPClose status=SUCCESS method=AlarmsNotifications.taskPopUPClose()[pri:37, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="viewTaskCsv()[pri:39, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:29 IST" name="viewTaskCsv" finished-at="2024-02-01T14:52:31 IST" duration-ms="2003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewTaskCsv -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:29 IST" name="getResult" finished-at="2024-02-01T14:52:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickTaskViewButton status=SUCCESS method=AlarmsNotifications.clickTaskViewButton()[pri:38, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="viewTaskPdf()[pri:40, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:31 IST" name="viewTaskPdf" finished-at="2024-02-01T14:52:34 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewTaskPdf -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:31 IST" name="getResult" finished-at="2024-02-01T14:52:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewTaskCsv status=SUCCESS method=AlarmsNotifications.viewTaskCsv()[pri:39, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:34 IST" name="getResult" finished-at="2024-02-01T14:52:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewTaskPdf status=SUCCESS method=AlarmsNotifications.viewTaskPdf()[pri:40, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logAlertDetails()[pri:41, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:34 IST" name="logAlertDetails" finished-at="2024-02-01T14:52:34 IST" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logAlertDetails -->
        <test-method signature="clickCompleteStatusButton()[pri:42, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:34 IST" name="clickCompleteStatusButton" finished-at="2024-02-01T14:52:37 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickCompleteStatusButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:34 IST" name="getResult" finished-at="2024-02-01T14:52:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logAlertDetails status=SUCCESS method=AlarmsNotifications.logAlertDetails()[pri:41, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:37 IST" name="getResult" finished-at="2024-02-01T14:52:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickCompleteStatusButton status=SUCCESS method=AlarmsNotifications.clickCompleteStatusButton()[pri:42, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="completedStatusSweetAlert()[pri:43, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:37 IST" name="completedStatusSweetAlert" finished-at="2024-02-01T14:52:40 IST" duration-ms="3005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- completedStatusSweetAlert -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:40 IST" name="getResult" finished-at="2024-02-01T14:52:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=completedStatusSweetAlert status=SUCCESS method=AlarmsNotifications.completedStatusSweetAlert()[pri:43, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickCompleteSweetAlertOKButton()[pri:44, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:40 IST" name="clickCompleteSweetAlertOKButton" finished-at="2024-02-01T14:52:40 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickCompleteSweetAlertOKButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:40 IST" name="getResult" finished-at="2024-02-01T14:52:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickCompleteSweetAlertOKButton status=SUCCESS method=AlarmsNotifications.clickCompleteSweetAlertOKButton()[pri:44, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="deviceDetailsPopUPClose()[pri:45, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:40 IST" name="deviceDetailsPopUPClose" finished-at="2024-02-01T14:52:44 IST" duration-ms="4006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deviceDetailsPopUPClose -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:44 IST" name="getResult" finished-at="2024-02-01T14:52:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deviceDetailsPopUPClose status=SUCCESS method=AlarmsNotifications.deviceDetailsPopUPClose()[pri:45, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="unAssignAlert()[pri:46, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:44 IST" name="unAssignAlert" finished-at="2024-02-01T14:52:46 IST" duration-ms="2002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unAssignAlert -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:46 IST" name="getResult" finished-at="2024-02-01T14:52:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unAssignAlert status=SUCCESS method=AlarmsNotifications.unAssignAlert()[pri:46, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="unAssignAlertStatus()[pri:47, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:46 IST" name="unAssignAlertStatus" finished-at="2024-02-01T14:52:49 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unAssignAlertStatus -->
        <test-method signature="unAssignSweetAlertOKButton()[pri:48, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:49 IST" name="unAssignSweetAlertOKButton" finished-at="2024-02-01T14:52:49 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unAssignSweetAlertOKButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:49 IST" name="getResult" finished-at="2024-02-01T14:52:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unAssignAlertStatus status=SUCCESS method=AlarmsNotifications.unAssignAlertStatus()[pri:47, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:49 IST" name="getResult" finished-at="2024-02-01T14:52:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unAssignSweetAlertOKButton status=SUCCESS method=AlarmsNotifications.unAssignSweetAlertOKButton()[pri:48, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateActionStatus()[pri:49, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:49 IST" name="validateActionStatus" finished-at="2024-02-01T14:52:49 IST" duration-ms="5" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: #alertsPageDeviceAlertTable
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [a4b072d7-04d6-4593-9244-25383160ea4c, findElement {using=id, value=alertsPageDeviceAlertTable}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:18201, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1209640, moz:profile: /tmp/rust_mozprofilejuL0Sc, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:18201/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: a4b072d7-04d6-4593-9244-25383160ea4c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: #alertsPageDeviceAlertTable
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [a4b072d7-04d6-4593-9244-25383160ea4c, findElement {using=id, value=alertsPageDeviceAlertTable}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:18201, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1209640, moz:profile: /tmp/rust_mozprofilejuL0Sc, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:18201/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: a4b072d7-04d6-4593-9244-25383160ea4c
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.AlarmsNotifications.validateActionStatus(AlarmsNotifications.java:962)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateActionStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:49 IST" name="getResult" finished-at="2024-02-01T14:52:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateActionStatus status=FAILURE method=AlarmsNotifications.validateActionStatus()[pri:49, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:50, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:49 IST" name="logout" finished-at="2024-02-01T14:52:54 IST" duration-ms="5240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:54 IST" name="getResult" finished-at="2024-02-01T14:52:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=AlarmsNotifications.logout()[pri:50, instance:com.selenium.AlarmsNotifications@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.AlarmsNotifications@a2431d0]" started-at="2024-02-01T14:52:54 IST" name="tearDown" finished-at="2024-02-01T14:52:54 IST" duration-ms="398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.AlarmsNotifications -->
    </test> <!-- AlarmsNotifications -->
    <test started-at="2024-02-01T14:52:54 IST" name="AlertMessages" finished-at="2024-02-01T14:55:41 IST" duration-ms="166925">
      <class name="com.selenium.AlertMessages">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:52:54 IST" name="setUp" finished-at="2024-02-01T14:52:57 IST" duration-ms="2433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:52:57 IST" name="login" finished-at="2024-02-01T14:53:04 IST" duration-ms="6748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:04 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:53:09 IST" duration-ms="5091" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:04 IST" name="getResult" finished-at="2024-02-01T14:53:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=AlertMessages.login()[pri:1, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:09 IST" name="getResult" finished-at="2024-02-01T14:53:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=AlertMessages.revenueDashboardOpen()[pri:2, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteConfigurationPage()[pri:3, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:09 IST" name="siteConfigurationPage" finished-at="2024-02-01T14:53:11 IST" duration-ms="2494" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteConfigurationPage -->
        <test-method signature="jstreeOrg()[pri:4, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:11 IST" name="jstreeOrg" finished-at="2024-02-01T14:53:14 IST" duration-ms="3258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jstreeOrg -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:11 IST" name="getResult" finished-at="2024-02-01T14:53:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteConfigurationPage status=SUCCESS method=AlertMessages.siteConfigurationPage()[pri:3, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:14 IST" name="getResult" finished-at="2024-02-01T14:53:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=jstreeOrg status=SUCCESS method=AlertMessages.jstreeOrg()[pri:4, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="applicationMsgs()[pri:5, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:14 IST" name="applicationMsgs" finished-at="2024-02-01T14:53:17 IST" duration-ms="2228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applicationMsgs -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:17 IST" name="getResult" finished-at="2024-02-01T14:53:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=applicationMsgs status=SUCCESS method=AlertMessages.applicationMsgs()[pri:5, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="applicationMsgsAnchor()[pri:6, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:17 IST" name="applicationMsgsAnchor" finished-at="2024-02-01T14:53:22 IST" duration-ms="5259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applicationMsgsAnchor -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:22 IST" name="getResult" finished-at="2024-02-01T14:53:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=applicationMsgsAnchor status=SUCCESS method=AlertMessages.applicationMsgsAnchor()[pri:6, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectEng()[pri:7, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:22 IST" name="selectEng" finished-at="2024-02-01T14:53:25 IST" duration-ms="3342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectEng -->
        <test-method signature="createMessage_English()[pri:8, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:25 IST" name="createMessage_English" finished-at="2024-02-01T14:53:25 IST" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMessage_English -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:25 IST" name="getResult" finished-at="2024-02-01T14:53:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectEng status=SUCCESS method=AlertMessages.selectEng()[pri:7, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="msgSubmit()[pri:9, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:25 IST" name="msgSubmit" finished-at="2024-02-01T14:53:29 IST" duration-ms="3214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- msgSubmit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:25 IST" name="getResult" finished-at="2024-02-01T14:53:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createMessage_English status=SUCCESS method=AlertMessages.createMessage_English()[pri:8, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:29 IST" name="getResult" finished-at="2024-02-01T14:53:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=msgSubmit status=SUCCESS method=AlertMessages.msgSubmit()[pri:9, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="alertStatus()[pri:10, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:29 IST" name="alertStatus" finished-at="2024-02-01T14:53:32 IST" duration-ms="3029" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:32 IST" name="getResult" finished-at="2024-02-01T14:53:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alertStatus status=SUCCESS method=AlertMessages.alertStatus()[pri:10, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="engStatusOk()[pri:11, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:32 IST" name="engStatusOk" finished-at="2024-02-01T14:53:35 IST" duration-ms="3236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- engStatusOk -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:35 IST" name="getResult" finished-at="2024-02-01T14:53:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=engStatusOk status=SUCCESS method=AlertMessages.engStatusOk()[pri:11, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="messagesToView()[pri:12, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:35 IST" name="messagesToView" finished-at="2024-02-01T14:53:40 IST" duration-ms="5282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- messagesToView -->
        <test-method signature="getAlertMessagesTableDetails()[pri:13, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:40 IST" name="getAlertMessagesTableDetails" finished-at="2024-02-01T14:53:40 IST" duration-ms="209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAlertMessagesTableDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:40 IST" name="getResult" finished-at="2024-02-01T14:53:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=messagesToView status=SUCCESS method=AlertMessages.messagesToView()[pri:12, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="engMsgDeleteRow()[pri:14, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:40 IST" name="engMsgDeleteRow" finished-at="2024-02-01T14:53:45 IST" duration-ms="5064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- engMsgDeleteRow -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:40 IST" name="getResult" finished-at="2024-02-01T14:53:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAlertMessagesTableDetails status=SUCCESS method=AlertMessages.getAlertMessagesTableDetails()[pri:13, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:45 IST" name="getResult" finished-at="2024-02-01T14:53:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=engMsgDeleteRow status=SUCCESS method=AlertMessages.engMsgDeleteRow()[pri:14, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="engMsgDeleteBtn()[pri:15, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:45 IST" name="engMsgDeleteBtn" finished-at="2024-02-01T14:53:48 IST" duration-ms="2248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- engMsgDeleteBtn -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:48 IST" name="getResult" finished-at="2024-02-01T14:53:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=engMsgDeleteBtn status=SUCCESS method=AlertMessages.engMsgDeleteBtn()[pri:15, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="alertDelStatus()[pri:16, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:48 IST" name="alertDelStatus" finished-at="2024-02-01T14:53:51 IST" duration-ms="3009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertDelStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:51 IST" name="getResult" finished-at="2024-02-01T14:53:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alertDelStatus status=SUCCESS method=AlertMessages.alertDelStatus()[pri:16, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="engDeleteOK()[pri:17, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:51 IST" name="engDeleteOK" finished-at="2024-02-01T14:53:54 IST" duration-ms="3236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- engDeleteOK -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:54 IST" name="getResult" finished-at="2024-02-01T14:53:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=engDeleteOK status=SUCCESS method=AlertMessages.engDeleteOK()[pri:17, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="applicationMsgs_ToCreate_Hindi()[pri:18, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:54 IST" name="applicationMsgs_ToCreate_Hindi" finished-at="2024-02-01T14:53:59 IST" duration-ms="5288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applicationMsgs_ToCreate_Hindi -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:59 IST" name="getResult" finished-at="2024-02-01T14:53:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=applicationMsgs_ToCreate_Hindi status=SUCCESS method=AlertMessages.applicationMsgs_ToCreate_Hindi()[pri:18, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectHindi()[pri:19, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:53:59 IST" name="selectHindi" finished-at="2024-02-01T14:54:02 IST" duration-ms="3312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectHindi -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:02 IST" name="getResult" finished-at="2024-02-01T14:54:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectHindi status=SUCCESS method=AlertMessages.selectHindi()[pri:19, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="createMessageHindi()[pri:20, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:03 IST" name="createMessageHindi" finished-at="2024-02-01T14:54:03 IST" duration-ms="97" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMessageHindi -->
        <test-method signature="hindiSubmit()[pri:21, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:03 IST" name="hindiSubmit" finished-at="2024-02-01T14:54:06 IST" duration-ms="3221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hindiSubmit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:03 IST" name="getResult" finished-at="2024-02-01T14:54:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createMessageHindi status=SUCCESS method=AlertMessages.createMessageHindi()[pri:20, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="alertHindiStatus()[pri:22, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:06 IST" name="alertHindiStatus" finished-at="2024-02-01T14:54:12 IST" duration-ms="6032" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertHindiStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:06 IST" name="getResult" finished-at="2024-02-01T14:54:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hindiSubmit status=SUCCESS method=AlertMessages.hindiSubmit()[pri:21, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:12 IST" name="getResult" finished-at="2024-02-01T14:54:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alertHindiStatus status=SUCCESS method=AlertMessages.alertHindiStatus()[pri:22, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="hindiOK()[pri:23, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:12 IST" name="hindiOK" finished-at="2024-02-01T14:54:15 IST" duration-ms="3299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hindiOK -->
        <test-method signature="messagesToView_AfterCreate_Hindi()[pri:24, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:15 IST" name="messagesToView_AfterCreate_Hindi" finished-at="2024-02-01T14:54:20 IST" duration-ms="5289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- messagesToView_AfterCreate_Hindi -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:15 IST" name="getResult" finished-at="2024-02-01T14:54:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hindiOK status=SUCCESS method=AlertMessages.hindiOK()[pri:23, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="messsgesAnchorHindi()[pri:25, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:20 IST" name="messsgesAnchorHindi" finished-at="2024-02-01T14:54:21 IST" duration-ms="143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- messsgesAnchorHindi -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:20 IST" name="getResult" finished-at="2024-02-01T14:54:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=messagesToView_AfterCreate_Hindi status=SUCCESS method=AlertMessages.messagesToView_AfterCreate_Hindi()[pri:24, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="hindiMsgDeleteRow()[pri:26, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:21 IST" name="hindiMsgDeleteRow" finished-at="2024-02-01T14:54:21 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hindiMsgDeleteRow -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:21 IST" name="getResult" finished-at="2024-02-01T14:54:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=messsgesAnchorHindi status=SUCCESS method=AlertMessages.messsgesAnchorHindi()[pri:25, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="deleteAlertMsgHindi()[pri:27, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:21 IST" name="deleteAlertMsgHindi" finished-at="2024-02-01T14:54:23 IST" duration-ms="2226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAlertMsgHindi -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:21 IST" name="getResult" finished-at="2024-02-01T14:54:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hindiMsgDeleteRow status=SUCCESS method=AlertMessages.hindiMsgDeleteRow()[pri:26, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="alertHindiDelStatus()[pri:28, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:23 IST" name="alertHindiDelStatus" finished-at="2024-02-01T14:54:29 IST" duration-ms="6010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertHindiDelStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:23 IST" name="getResult" finished-at="2024-02-01T14:54:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteAlertMsgHindi status=SUCCESS method=AlertMessages.deleteAlertMsgHindi()[pri:27, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:29 IST" name="getResult" finished-at="2024-02-01T14:54:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alertHindiDelStatus status=SUCCESS method=AlertMessages.alertHindiDelStatus()[pri:28, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="hindiDeleteOK()[pri:29, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:29 IST" name="hindiDeleteOK" finished-at="2024-02-01T14:54:32 IST" duration-ms="3213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hindiDeleteOK -->
        <test-method signature="applicationMsgs_ToCreate_TwiceEnglish()[pri:30, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:32 IST" name="applicationMsgs_ToCreate_TwiceEnglish" finished-at="2024-02-01T14:54:37 IST" duration-ms="5251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applicationMsgs_ToCreate_TwiceEnglish -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:32 IST" name="getResult" finished-at="2024-02-01T14:54:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hindiDeleteOK status=SUCCESS method=AlertMessages.hindiDeleteOK()[pri:29, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:37 IST" name="getResult" finished-at="2024-02-01T14:54:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=applicationMsgs_ToCreate_TwiceEnglish status=SUCCESS method=AlertMessages.applicationMsgs_ToCreate_TwiceEnglish()[pri:30, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="secondSelectEng()[pri:31, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:37 IST" name="secondSelectEng" finished-at="2024-02-01T14:54:41 IST" duration-ms="3335" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondSelectEng -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:41 IST" name="getResult" finished-at="2024-02-01T14:54:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=secondSelectEng status=SUCCESS method=AlertMessages.secondSelectEng()[pri:31, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="secondCreateEng()[pri:32, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:41 IST" name="secondCreateEng" finished-at="2024-02-01T14:54:41 IST" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondCreateEng -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:41 IST" name="getResult" finished-at="2024-02-01T14:54:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=secondCreateEng status=SUCCESS method=AlertMessages.secondCreateEng()[pri:32, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="secondMsgSubmit()[pri:33, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:41 IST" name="secondMsgSubmit" finished-at="2024-02-01T14:54:44 IST" duration-ms="3237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondMsgSubmit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:44 IST" name="getResult" finished-at="2024-02-01T14:54:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=secondMsgSubmit status=SUCCESS method=AlertMessages.secondMsgSubmit()[pri:33, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="secondStatus()[pri:34, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:44 IST" name="secondStatus" finished-at="2024-02-01T14:54:50 IST" duration-ms="6018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondStatus -->
        <test-method signature="secondStatusOk()[pri:35, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:50 IST" name="secondStatusOk" finished-at="2024-02-01T14:54:53 IST" duration-ms="3219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondStatusOk -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:50 IST" name="getResult" finished-at="2024-02-01T14:54:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=secondStatus status=SUCCESS method=AlertMessages.secondStatus()[pri:34, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:53 IST" name="getResult" finished-at="2024-02-01T14:54:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=secondStatusOk status=SUCCESS method=AlertMessages.secondStatusOk()[pri:35, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="messagesToView_AfterCreate_TwiceEnglish()[pri:36, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:53 IST" name="messagesToView_AfterCreate_TwiceEnglish" finished-at="2024-02-01T14:54:58 IST" duration-ms="5286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- messagesToView_AfterCreate_TwiceEnglish -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:58 IST" name="getResult" finished-at="2024-02-01T14:54:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=messagesToView_AfterCreate_TwiceEnglish status=SUCCESS method=AlertMessages.messagesToView_AfterCreate_TwiceEnglish()[pri:36, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="applicationMsgs_ToCreate_Marathi()[pri:37, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:54:58 IST" name="applicationMsgs_ToCreate_Marathi" finished-at="2024-02-01T14:55:04 IST" duration-ms="5285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applicationMsgs_ToCreate_Marathi -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:04 IST" name="getResult" finished-at="2024-02-01T14:55:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=applicationMsgs_ToCreate_Marathi status=SUCCESS method=AlertMessages.applicationMsgs_ToCreate_Marathi()[pri:37, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectMarathi()[pri:38, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:04 IST" name="selectMarathi" finished-at="2024-02-01T14:55:07 IST" duration-ms="3344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMarathi -->
        <test-method signature="createMessageMarathi()[pri:39, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:07 IST" name="createMessageMarathi" finished-at="2024-02-01T14:55:09 IST" duration-ms="2020" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMessageMarathi -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:07 IST" name="getResult" finished-at="2024-02-01T14:55:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMarathi status=SUCCESS method=AlertMessages.selectMarathi()[pri:38, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="MarathiSubmit()[pri:40, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:09 IST" name="MarathiSubmit" finished-at="2024-02-01T14:55:12 IST" duration-ms="3233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MarathiSubmit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:09 IST" name="getResult" finished-at="2024-02-01T14:55:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createMessageMarathi status=SUCCESS method=AlertMessages.createMessageMarathi()[pri:39, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="alertMarathiStatus()[pri:41, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:12 IST" name="alertMarathiStatus" finished-at="2024-02-01T14:55:18 IST" duration-ms="6022" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertMarathiStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:12 IST" name="getResult" finished-at="2024-02-01T14:55:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MarathiSubmit status=SUCCESS method=AlertMessages.MarathiSubmit()[pri:40, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:18 IST" name="getResult" finished-at="2024-02-01T14:55:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alertMarathiStatus status=SUCCESS method=AlertMessages.alertMarathiStatus()[pri:41, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="marathiOK()[pri:42, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:18 IST" name="marathiOK" finished-at="2024-02-01T14:55:22 IST" duration-ms="3279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- marathiOK -->
        <test-method signature="messagesToView_AfterCreate_Marathi()[pri:43, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:22 IST" name="messagesToView_AfterCreate_Marathi" finished-at="2024-02-01T14:55:27 IST" duration-ms="5256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- messagesToView_AfterCreate_Marathi -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:22 IST" name="getResult" finished-at="2024-02-01T14:55:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=marathiOK status=SUCCESS method=AlertMessages.marathiOK()[pri:42, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:27 IST" name="getResult" finished-at="2024-02-01T14:55:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=messagesToView_AfterCreate_Marathi status=SUCCESS method=AlertMessages.messagesToView_AfterCreate_Marathi()[pri:43, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="messsgesAnchorMarathi()[pri:44, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:27 IST" name="messsgesAnchorMarathi" finished-at="2024-02-01T14:55:27 IST" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- messsgesAnchorMarathi -->
        <test-method signature="marathiMsgDeleteRow()[pri:45, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:27 IST" name="marathiMsgDeleteRow" finished-at="2024-02-01T14:55:27 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- marathiMsgDeleteRow -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:27 IST" name="getResult" finished-at="2024-02-01T14:55:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=messsgesAnchorMarathi status=SUCCESS method=AlertMessages.messsgesAnchorMarathi()[pri:44, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="deleteAlertMsgMarathi()[pri:46, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:27 IST" name="deleteAlertMsgMarathi" finished-at="2024-02-01T14:55:29 IST" duration-ms="2278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAlertMsgMarathi -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:27 IST" name="getResult" finished-at="2024-02-01T14:55:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=marathiMsgDeleteRow status=SUCCESS method=AlertMessages.marathiMsgDeleteRow()[pri:45, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:29 IST" name="getResult" finished-at="2024-02-01T14:55:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteAlertMsgMarathi status=SUCCESS method=AlertMessages.deleteAlertMsgMarathi()[pri:46, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="alertMarathiDelStatus()[pri:47, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:29 IST" name="alertMarathiDelStatus" finished-at="2024-02-01T14:55:35 IST" duration-ms="6009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertMarathiDelStatus -->
        <test-method signature="marathiDeleteOK()[pri:48, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:35 IST" name="marathiDeleteOK" finished-at="2024-02-01T14:55:36 IST" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- marathiDeleteOK -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:35 IST" name="getResult" finished-at="2024-02-01T14:55:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alertMarathiDelStatus status=SUCCESS method=AlertMessages.alertMarathiDelStatus()[pri:47, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:36 IST" name="getResult" finished-at="2024-02-01T14:55:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=marathiDeleteOK status=SUCCESS method=AlertMessages.marathiDeleteOK()[pri:48, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:49, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:36 IST" name="logout" finished-at="2024-02-01T14:55:41 IST" duration-ms="5250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:41 IST" name="getResult" finished-at="2024-02-01T14:55:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=AlertMessages.logout()[pri:49, instance:com.selenium.AlertMessages@14555e0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.AlertMessages@14555e0a]" started-at="2024-02-01T14:55:41 IST" name="tearDown" finished-at="2024-02-01T14:55:41 IST" duration-ms="553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.AlertMessages -->
    </test> <!-- AlertMessages -->
    <test started-at="2024-02-01T14:55:41 IST" name="ApkImages" finished-at="2024-02-01T14:56:47 IST" duration-ms="65540">
      <class name="com.selenium.ApplicationImages">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:55:41 IST" name="setUp" finished-at="2024-02-01T14:55:44 IST" duration-ms="2260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:55:44 IST" name="login" finished-at="2024-02-01T14:55:51 IST" duration-ms="6865" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:55:51 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:55:56 IST" duration-ms="5163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:55:51 IST" name="getResult" finished-at="2024-02-01T14:55:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=ApplicationImages.login()[pri:1, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:55:56 IST" name="getResult" finished-at="2024-02-01T14:55:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=ApplicationImages.revenueDashboardOpen()[pri:2, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteConfigurationPage()[pri:3, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:55:56 IST" name="siteConfigurationPage" finished-at="2024-02-01T14:55:58 IST" duration-ms="2030" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteConfigurationPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:55:58 IST" name="getResult" finished-at="2024-02-01T14:55:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteConfigurationPage status=SUCCESS method=ApplicationImages.siteConfigurationPage()[pri:3, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="jstreeOrg()[pri:4, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:55:58 IST" name="jstreeOrg" finished-at="2024-02-01T14:55:59 IST" duration-ms="1006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jstreeOrg -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:55:59 IST" name="getResult" finished-at="2024-02-01T14:55:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=jstreeOrg status=SUCCESS method=ApplicationImages.jstreeOrg()[pri:4, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="applicationImages()[pri:5, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:55:59 IST" name="applicationImages" finished-at="2024-02-01T14:56:02 IST" duration-ms="3014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applicationImages -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:02 IST" name="getResult" finished-at="2024-02-01T14:56:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=applicationImages status=SUCCESS method=ApplicationImages.applicationImages()[pri:5, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="applicationImagesTreeOpen()[pri:6, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:02 IST" name="applicationImagesTreeOpen" finished-at="2024-02-01T14:56:05 IST" duration-ms="3008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applicationImagesTreeOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:05 IST" name="getResult" finished-at="2024-02-01T14:56:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=applicationImagesTreeOpen status=SUCCESS method=ApplicationImages.applicationImagesTreeOpen()[pri:6, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="androidTreeOpen()[pri:7, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:05 IST" name="androidTreeOpen" finished-at="2024-02-01T14:56:08 IST" duration-ms="3010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- androidTreeOpen -->
        <test-method signature="iOSTreeOpen()[pri:8, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:08 IST" name="iOSTreeOpen" finished-at="2024-02-01T14:56:11 IST" duration-ms="3003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iOSTreeOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:08 IST" name="getResult" finished-at="2024-02-01T14:56:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=androidTreeOpen status=SUCCESS method=ApplicationImages.androidTreeOpen()[pri:7, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mPOSTreeOpen()[pri:9, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:11 IST" name="mPOSTreeOpen" finished-at="2024-02-01T14:56:14 IST" duration-ms="3009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mPOSTreeOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:11 IST" name="getResult" finished-at="2024-02-01T14:56:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=iOSTreeOpen status=SUCCESS method=ApplicationImages.iOSTreeOpen()[pri:8, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:14 IST" name="getResult" finished-at="2024-02-01T14:56:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mPOSTreeOpen status=SUCCESS method=ApplicationImages.mPOSTreeOpen()[pri:9, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectAndroid()[pri:10, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:14 IST" name="selectAndroid" finished-at="2024-02-01T14:56:17 IST" duration-ms="3007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAndroid -->
        <test-method signature="getAndroidHeading()[pri:11, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:17 IST" name="getAndroidHeading" finished-at="2024-02-01T14:56:17 IST" duration-ms="6" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: #lblAndroidTitle
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f, findElement {using=id, value=lblAndroidTitle}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:4565, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1216341, moz:profile: /tmp/rust_mozprofileTN8bZh, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:4565/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: #lblAndroidTitle
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f, findElement {using=id, value=lblAndroidTitle}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:4565, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1216341, moz:profile: /tmp/rust_mozprofileTN8bZh, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:4565/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.ApplicationImages.getAndroidHeading(ApplicationImages.java:170)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAndroidHeading -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:17 IST" name="getResult" finished-at="2024-02-01T14:56:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAndroid status=SUCCESS method=ApplicationImages.selectAndroid()[pri:10, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:17 IST" name="getResult" finished-at="2024-02-01T14:56:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAndroidHeading status=FAILURE method=ApplicationImages.getAndroidHeading()[pri:11, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="androidDetails_Editable_Or_Not()[pri:12, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:17 IST" name="androidDetails_Editable_Or_Not" finished-at="2024-02-01T14:56:17 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- androidDetails_Editable_Or_Not -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:17 IST" name="getResult" finished-at="2024-02-01T14:56:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=androidDetails_Editable_Or_Not status=SUCCESS method=ApplicationImages.androidDetails_Editable_Or_Not()[pri:12, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getAndroidInfo()[pri:13, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:17 IST" name="getAndroidInfo" finished-at="2024-02-01T14:56:17 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAndroidInfo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:17 IST" name="getResult" finished-at="2024-02-01T14:56:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAndroidInfo status=SUCCESS method=ApplicationImages.getAndroidInfo()[pri:13, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectAndroidVersion()[pri:14, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:17 IST" name="selectAndroidVersion" finished-at="2024-02-01T14:56:20 IST" duration-ms="3005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAndroidVersion -->
        <test-method signature="getAndroidVersionDetails_Heading()[pri:15, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:20 IST" name="getAndroidVersionDetails_Heading" finished-at="2024-02-01T14:56:20 IST" duration-ms="5" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: #lblandroidVersionTitle
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f, findElement {using=id, value=lblandroidVersionTitle}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:4565, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1216341, moz:profile: /tmp/rust_mozprofileTN8bZh, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:4565/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: #lblandroidVersionTitle
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f, findElement {using=id, value=lblandroidVersionTitle}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:4565, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1216341, moz:profile: /tmp/rust_mozprofileTN8bZh, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:4565/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.ApplicationImages.getAndroidVersionDetails_Heading(ApplicationImages.java:251)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAndroidVersionDetails_Heading -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:20 IST" name="getResult" finished-at="2024-02-01T14:56:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAndroidVersion status=SUCCESS method=ApplicationImages.selectAndroidVersion()[pri:14, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:20 IST" name="getResult" finished-at="2024-02-01T14:56:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAndroidVersionDetails_Heading status=FAILURE method=ApplicationImages.getAndroidVersionDetails_Heading()[pri:15, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="androidVersion_Editable_or_Not()[pri:16, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:20 IST" name="androidVersion_Editable_or_Not" finished-at="2024-02-01T14:56:20 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- androidVersion_Editable_or_Not -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:20 IST" name="getResult" finished-at="2024-02-01T14:56:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=androidVersion_Editable_or_Not status=SUCCESS method=ApplicationImages.androidVersion_Editable_or_Not()[pri:16, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="apkAndroidDwnld()[pri:17, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:20 IST" name="apkAndroidDwnld" finished-at="2024-02-01T14:56:23 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apkAndroidDwnld -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:23 IST" name="getResult" finished-at="2024-02-01T14:56:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apkAndroidDwnld status=SUCCESS method=ApplicationImages.apkAndroidDwnld()[pri:17, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectIOS()[pri:18, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:23 IST" name="selectIOS" finished-at="2024-02-01T14:56:26 IST" duration-ms="3003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectIOS -->
        <test-method signature="getiOSDetails()[pri:19, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:26 IST" name="getiOSDetails" finished-at="2024-02-01T14:56:26 IST" duration-ms="2" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: #lbliosTitle
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f, findElement {using=id, value=lbliosTitle}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:4565, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1216341, moz:profile: /tmp/rust_mozprofileTN8bZh, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:4565/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: #lbliosTitle
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f, findElement {using=id, value=lbliosTitle}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:4565, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1216341, moz:profile: /tmp/rust_mozprofileTN8bZh, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:4565/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.ApplicationImages.getiOSDetails(ApplicationImages.java:331)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getiOSDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:26 IST" name="getResult" finished-at="2024-02-01T14:56:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectIOS status=SUCCESS method=ApplicationImages.selectIOS()[pri:18, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:26 IST" name="getResult" finished-at="2024-02-01T14:56:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getiOSDetails status=FAILURE method=ApplicationImages.getiOSDetails()[pri:19, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="iOSDetails_Editable_Or_Not()[pri:20, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:26 IST" name="iOSDetails_Editable_Or_Not" finished-at="2024-02-01T14:56:26 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iOSDetails_Editable_Or_Not -->
        <test-method signature="selectiOSVersion()[pri:21, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:26 IST" name="selectiOSVersion" finished-at="2024-02-01T14:56:29 IST" duration-ms="3007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectiOSVersion -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:26 IST" name="getResult" finished-at="2024-02-01T14:56:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=iOSDetails_Editable_Or_Not status=SUCCESS method=ApplicationImages.iOSDetails_Editable_Or_Not()[pri:20, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:29 IST" name="getResult" finished-at="2024-02-01T14:56:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectiOSVersion status=SUCCESS method=ApplicationImages.selectiOSVersion()[pri:21, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="iOSVersion_Editable_or_Not()[pri:22, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:29 IST" name="iOSVersion_Editable_or_Not" finished-at="2024-02-01T14:56:29 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iOSVersion_Editable_or_Not -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:29 IST" name="getResult" finished-at="2024-02-01T14:56:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=iOSVersion_Editable_or_Not status=SUCCESS method=ApplicationImages.iOSVersion_Editable_or_Not()[pri:22, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getiOSVersionDetails_Heading()[pri:23, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:29 IST" name="getiOSVersionDetails_Heading" finished-at="2024-02-01T14:56:29 IST" duration-ms="5" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: #lbliosVersionTitle
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f, findElement {using=id, value=lbliosVersionTitle}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:4565, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1216341, moz:profile: /tmp/rust_mozprofileTN8bZh, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:4565/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: #lbliosVersionTitle
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f, findElement {using=id, value=lbliosVersionTitle}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:4565, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1216341, moz:profile: /tmp/rust_mozprofileTN8bZh, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:4565/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.ApplicationImages.getiOSVersionDetails_Heading(ApplicationImages.java:423)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getiOSVersionDetails_Heading -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:29 IST" name="getResult" finished-at="2024-02-01T14:56:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getiOSVersionDetails_Heading status=FAILURE method=ApplicationImages.getiOSVersionDetails_Heading()[pri:23, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="apkiOSDwnld()[pri:24, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:29 IST" name="apkiOSDwnld" finished-at="2024-02-01T14:56:32 IST" duration-ms="3007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apkiOSDwnld -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:32 IST" name="getResult" finished-at="2024-02-01T14:56:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apkiOSDwnld status=SUCCESS method=ApplicationImages.apkiOSDwnld()[pri:24, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectmPOS()[pri:25, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:32 IST" name="selectmPOS" finished-at="2024-02-01T14:56:35 IST" duration-ms="3003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectmPOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:35 IST" name="getResult" finished-at="2024-02-01T14:56:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectmPOS status=SUCCESS method=ApplicationImages.selectmPOS()[pri:25, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getmPOSDetails()[pri:26, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:35 IST" name="getmPOSDetails" finished-at="2024-02-01T14:56:35 IST" duration-ms="2" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: #lblmposTitle
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f, findElement {using=id, value=lblmposTitle}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:4565, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1216341, moz:profile: /tmp/rust_mozprofileTN8bZh, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:4565/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: #lblmposTitle
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f, findElement {using=id, value=lblmposTitle}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:4565, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1216341, moz:profile: /tmp/rust_mozprofileTN8bZh, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:4565/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 6eb82aac-bf52-4ea2-b5e3-9de78f91ce3f
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.ApplicationImages.getmPOSDetails(ApplicationImages.java:468)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getmPOSDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:35 IST" name="getResult" finished-at="2024-02-01T14:56:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getmPOSDetails status=FAILURE method=ApplicationImages.getmPOSDetails()[pri:26, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mPOSDetails_Editable_Or_Not()[pri:27, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:35 IST" name="mPOSDetails_Editable_Or_Not" finished-at="2024-02-01T14:56:35 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mPOSDetails_Editable_Or_Not -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:35 IST" name="getResult" finished-at="2024-02-01T14:56:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mPOSDetails_Editable_Or_Not status=SUCCESS method=ApplicationImages.mPOSDetails_Editable_Or_Not()[pri:27, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectmPOSVersion()[pri:28, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:35 IST" name="selectmPOSVersion" finished-at="2024-02-01T14:56:38 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectmPOSVersion -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:38 IST" name="getResult" finished-at="2024-02-01T14:56:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectmPOSVersion status=SUCCESS method=ApplicationImages.selectmPOSVersion()[pri:28, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="apkmPOSDwnld()[pri:29, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:38 IST" name="apkmPOSDwnld" finished-at="2024-02-01T14:56:41 IST" duration-ms="3002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apkmPOSDwnld -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:41 IST" name="getResult" finished-at="2024-02-01T14:56:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=apkmPOSDwnld status=SUCCESS method=ApplicationImages.apkmPOSDwnld()[pri:29, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:30, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:41 IST" name="logout" finished-at="2024-02-01T14:56:46 IST" duration-ms="5240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:46 IST" name="getResult" finished-at="2024-02-01T14:56:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=ApplicationImages.logout()[pri:30, instance:com.selenium.ApplicationImages@71238fc2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.ApplicationImages@71238fc2]" started-at="2024-02-01T14:56:46 IST" name="tearDown" finished-at="2024-02-01T14:56:47 IST" duration-ms="808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.ApplicationImages -->
    </test> <!-- ApkImages -->
    <test started-at="2024-02-01T14:56:47 IST" name="SiteConfig" finished-at="2024-02-01T14:59:37 IST" duration-ms="170280">
      <class name="com.selenium.SiteConfig">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:56:47 IST" name="setUp" finished-at="2024-02-01T14:56:49 IST" duration-ms="2521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:56:49 IST" name="login" finished-at="2024-02-01T14:56:55 IST" duration-ms="5598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:56:55 IST" name="getResult" finished-at="2024-02-01T14:56:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=SiteConfig.login()[pri:1, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:56:55 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:57:00 IST" duration-ms="5302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:00 IST" name="getResult" finished-at="2024-02-01T14:57:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=SiteConfig.revenueDashboardOpen()[pri:2, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="siteConfigurationPage()[pri:3, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:00 IST" name="siteConfigurationPage" finished-at="2024-02-01T14:57:03 IST" duration-ms="2590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- siteConfigurationPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:03 IST" name="getResult" finished-at="2024-02-01T14:57:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=siteConfigurationPage status=SUCCESS method=SiteConfig.siteConfigurationPage()[pri:3, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="jstreeOrg()[pri:4, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:03 IST" name="jstreeOrg" finished-at="2024-02-01T14:57:05 IST" duration-ms="2415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jstreeOrg -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:05 IST" name="getResult" finished-at="2024-02-01T14:57:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=jstreeOrg status=SUCCESS method=SiteConfig.jstreeOrg()[pri:4, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="jstreeZone()[pri:5, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:05 IST" name="jstreeZone" finished-at="2024-02-01T14:57:07 IST" duration-ms="2004" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //li[@id='city_5']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//li[@id='city_5']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //li[@id='city_5']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//li[@id='city_5']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.SiteConfig.jstreeZone(SiteConfig.java:82)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jstreeZone -->
        <test-method signature="jstreeSites()[pri:6, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:07 IST" name="jstreeSites" finished-at="2024-02-01T14:57:07 IST" duration-ms="3" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //li[@id='zone_1']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//li[@id='zone_1']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //li[@id='zone_1']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//li[@id='zone_1']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.SiteConfig.jstreeSites(SiteConfig.java:87)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jstreeSites -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:07 IST" name="getResult" finished-at="2024-02-01T14:57:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=jstreeZone status=FAILURE method=SiteConfig.jstreeZone()[pri:5, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:07 IST" name="getResult" finished-at="2024-02-01T14:57:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=jstreeSites status=FAILURE method=SiteConfig.jstreeSites()[pri:6, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="jstreeOFFstreet()[pri:7, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:07 IST" name="jstreeOFFstreet" finished-at="2024-02-01T14:57:07 IST" duration-ms="11" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //*[@id='site_56']/ul
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//*[@id='site_56']/ul}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //*[@id='site_56']/ul
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//*[@id='site_56']/ul}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.SiteConfig.jstreeOFFstreet(SiteConfig.java:94)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jstreeOFFstreet -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:07 IST" name="getResult" finished-at="2024-02-01T14:57:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=jstreeOFFstreet status=FAILURE method=SiteConfig.jstreeOFFstreet()[pri:7, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="jstreeOFFstreetDevices()[pri:8, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:07 IST" name="jstreeOFFstreetDevices" finished-at="2024-02-01T14:57:08 IST" duration-ms="1008" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //*[@id='level_61']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//*[@id='level_61']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //*[@id='level_61']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//*[@id='level_61']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.SiteConfig.jstreeOFFstreetDevices(SiteConfig.java:101)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jstreeOFFstreetDevices -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:08 IST" name="getResult" finished-at="2024-02-01T14:57:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=jstreeOFFstreetDevices status=FAILURE method=SiteConfig.jstreeOFFstreetDevices()[pri:8, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addSingleDevicebtn()[pri:9, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:08 IST" name="addSingleDevicebtn" finished-at="2024-02-01T14:57:09 IST" duration-ms="1020" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <button id="btnAddDevices" class="btn btn-sm btn-primary float-right" type="button"> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=e1e672d9-de6f-4405-87a1-e8e4f2d5defd}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> xpath: //*[@id='btnAddDevices']]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <button id="btnAddDevices" class="btn btn-sm btn-primary float-right" type="button"> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=e1e672d9-de6f-4405-87a1-e8e4f2d5defd}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> xpath: //*[@id='btnAddDevices']]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at com.selenium.SiteConfig.addSingleDevicebtn(SiteConfig.java:109)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addSingleDevicebtn -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:09 IST" name="getResult" finished-at="2024-02-01T14:57:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addSingleDevicebtn status=FAILURE method=SiteConfig.addSingleDevicebtn()[pri:9, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectFasTag()[pri:10, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:09 IST" name="selectFasTag" finished-at="2024-02-01T14:57:09 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectFasTag -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:09 IST" name="getResult" finished-at="2024-02-01T14:57:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectFasTag status=SUCCESS method=SiteConfig.selectFasTag()[pri:10, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="fasTagControllerDetails()[pri:11, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:09 IST" name="fasTagControllerDetails" finished-at="2024-02-01T14:57:10 IST" duration-ms="1023" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <input id="fcDeviceName" class="form-control" name="fcDeviceName" type="text"> is not reachable by keyboard
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, sendKeysToElement {id=a0191bc7-3094-4c88-ba6f-d91a45576cdd, value=[Ljava.lang.CharSequence;@2c4a841d}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fcDeviceName]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <input id="fcDeviceName" class="form-control" name="fcDeviceName" type="text"> is not reachable by keyboard
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, sendKeysToElement {id=a0191bc7-3094-4c88-ba6f-d91a45576cdd, value=[Ljava.lang.CharSequence;@2c4a841d}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fcDeviceName]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:111)
at com.selenium.SiteConfig.fasTagControllerDetails(SiteConfig.java:137)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fasTagControllerDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:10 IST" name="getResult" finished-at="2024-02-01T14:57:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fasTagControllerDetails status=FAILURE method=SiteConfig.fasTagControllerDetails()[pri:11, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="openTreeSecondTime()[pri:12, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:10 IST" name="openTreeSecondTime" finished-at="2024-02-01T14:57:28 IST" duration-ms="18011" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: #ftControllerID_2
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=id, value=ftControllerID_2}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: #ftControllerID_2
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=id, value=ftControllerID_2}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.SiteConfig.openTreeSecondTime(SiteConfig.java:179)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openTreeSecondTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:28 IST" name="getResult" finished-at="2024-02-01T14:57:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openTreeSecondTime status=FAILURE method=SiteConfig.openTreeSecondTime()[pri:12, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addFasTag()[pri:13, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:28 IST" name="addFasTag" finished-at="2024-02-01T14:57:29 IST" duration-ms="10" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //*[@id='ftControllerID_2_anchor']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//*[@id='ftControllerID_2_anchor']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //*[@id='ftControllerID_2_anchor']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//*[@id='ftControllerID_2_anchor']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.SiteConfig.addFasTag(SiteConfig.java:185)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFasTag -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:29 IST" name="getResult" finished-at="2024-02-01T14:57:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addFasTag status=FAILURE method=SiteConfig.addFasTag()[pri:13, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addFasTagSelectftReader()[pri:14, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:29 IST" name="addFasTagSelectftReader" finished-at="2024-02-01T14:57:32 IST" duration-ms="3022" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <option> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=1f29365b-ca33-47d7-b30d-4b9368614180}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[[[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceCatagory]] -> xpath: .//option[@value = "FastagReader"]]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <option> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=1f29365b-ca33-47d7-b30d-4b9368614180}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[[[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceCatagory]] -> xpath: .//option[@value = "FastagReader"]]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at org.openqa.selenium.support.ui.Select.setSelected(Select.java:315)
at org.openqa.selenium.support.ui.Select.selectByValue(Select.java:195)
at com.selenium.SiteConfig.addFasTagSelectftReader(SiteConfig.java:195)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFasTagSelectftReader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:32 IST" name="getResult" finished-at="2024-02-01T14:57:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addFasTagSelectftReader status=FAILURE method=SiteConfig.addFasTagSelectftReader()[pri:14, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addFasTagEnterDetails()[pri:15, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:32 IST" name="addFasTagEnterDetails" finished-at="2024-02-01T14:57:32 IST" duration-ms="6" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <input id="fastagDeviceName" class="form-control" name="fastagDeviceName" type="text"> is not reachable by keyboard
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, sendKeysToElement {id=33ccbaac-d89c-4889-95cc-eece9ac5ffb0, value=[Ljava.lang.CharSequence;@6a021dd}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceName]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <input id="fastagDeviceName" class="form-control" name="fastagDeviceName" type="text"> is not reachable by keyboard
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, sendKeysToElement {id=33ccbaac-d89c-4889-95cc-eece9ac5ffb0, value=[Ljava.lang.CharSequence;@6a021dd}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceName]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:111)
at com.selenium.SiteConfig.addFasTagEnterDetails(SiteConfig.java:200)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFasTagEnterDetails -->
        <test-method signature="addbtnFasTagSelectftReader()[pri:16, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:32 IST" name="addbtnFasTagSelectftReader" finished-at="2024-02-01T14:57:32 IST" duration-ms="7" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <button id="btnFastagSaveDevices" class="btn btn-sm btn-primary" type="submit"> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=a98f8e53-8a70-4b76-b764-5a5a3645fadc}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: btnFastagSaveDevices]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <button id="btnFastagSaveDevices" class="btn btn-sm btn-primary" type="submit"> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=a98f8e53-8a70-4b76-b764-5a5a3645fadc}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: btnFastagSaveDevices]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at com.selenium.SiteConfig.addbtnFasTagSelectftReader(SiteConfig.java:210)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addbtnFasTagSelectftReader -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:32 IST" name="getResult" finished-at="2024-02-01T14:57:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addFasTagEnterDetails status=FAILURE method=SiteConfig.addFasTagEnterDetails()[pri:15, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="openTreeThirdTime()[pri:17, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:32 IST" name="openTreeThirdTime" finished-at="2024-02-01T14:57:46 IST" duration-ms="14047" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //li[@id='city_5']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//li[@id='city_5']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //li[@id='city_5']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//li[@id='city_5']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.SiteConfig.openTreeThirdTime(SiteConfig.java:234)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openTreeThirdTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:32 IST" name="getResult" finished-at="2024-02-01T14:57:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addbtnFasTagSelectftReader status=FAILURE method=SiteConfig.addbtnFasTagSelectftReader()[pri:16, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:46 IST" name="getResult" finished-at="2024-02-01T14:57:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openTreeThirdTime status=FAILURE method=SiteConfig.openTreeThirdTime()[pri:17, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addFasTagSelectftBarrier()[pri:18, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:46 IST" name="addFasTagSelectftBarrier" finished-at="2024-02-01T14:57:51 IST" duration-ms="5050" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <option> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=44931e8a-a562-4084-87a6-425dc7fac3ae}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[[[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceCatagory]] -> xpath: .//option[@value = "FastagBoomBarrier"]]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <option> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=44931e8a-a562-4084-87a6-425dc7fac3ae}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[[[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceCatagory]] -> xpath: .//option[@value = "FastagBoomBarrier"]]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at org.openqa.selenium.support.ui.Select.setSelected(Select.java:315)
at org.openqa.selenium.support.ui.Select.selectByValue(Select.java:195)
at com.selenium.SiteConfig.addFasTagSelectftBarrier(SiteConfig.java:259)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFasTagSelectftBarrier -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:51 IST" name="getResult" finished-at="2024-02-01T14:57:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addFasTagSelectftBarrier status=FAILURE method=SiteConfig.addFasTagSelectftBarrier()[pri:18, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addFtBarrierDetails()[pri:19, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:51 IST" name="addFtBarrierDetails" finished-at="2024-02-01T14:57:51 IST" duration-ms="13" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <input id="fastagDeviceName" class="form-control" name="fastagDeviceName" type="text"> is not reachable by keyboard
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, sendKeysToElement {id=33ccbaac-d89c-4889-95cc-eece9ac5ffb0, value=[Ljava.lang.CharSequence;@6e0f0e45}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceName]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <input id="fastagDeviceName" class="form-control" name="fastagDeviceName" type="text"> is not reachable by keyboard
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, sendKeysToElement {id=33ccbaac-d89c-4889-95cc-eece9ac5ffb0, value=[Ljava.lang.CharSequence;@6e0f0e45}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceName]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:111)
at com.selenium.SiteConfig.addFtBarrierDetails(SiteConfig.java:264)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFtBarrierDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:51 IST" name="getResult" finished-at="2024-02-01T14:57:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addFtBarrierDetails status=FAILURE method=SiteConfig.addFtBarrierDetails()[pri:19, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addbtnFasTagSelectftBarrier()[pri:20, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:51 IST" name="addbtnFasTagSelectftBarrier" finished-at="2024-02-01T14:57:51 IST" duration-ms="9" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <button id="btnFastagSaveDevices" class="btn btn-sm btn-primary" type="submit"> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=a98f8e53-8a70-4b76-b764-5a5a3645fadc}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: btnFastagSaveDevices]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <button id="btnFastagSaveDevices" class="btn btn-sm btn-primary" type="submit"> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=a98f8e53-8a70-4b76-b764-5a5a3645fadc}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: btnFastagSaveDevices]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at com.selenium.SiteConfig.addbtnFasTagSelectftBarrier(SiteConfig.java:275)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addbtnFasTagSelectftBarrier -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:51 IST" name="getResult" finished-at="2024-02-01T14:57:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addbtnFasTagSelectftBarrier status=FAILURE method=SiteConfig.addbtnFasTagSelectftBarrier()[pri:20, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="openTreeForthTime()[pri:21, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:57:51 IST" name="openTreeForthTime" finished-at="2024-02-01T14:58:04 IST" duration-ms="13340" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //li[@id='zone_1']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//li[@id='zone_1']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //li[@id='zone_1']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//li[@id='zone_1']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.SiteConfig.openTreeForthTime(SiteConfig.java:302)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openTreeForthTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:04 IST" name="getResult" finished-at="2024-02-01T14:58:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openTreeForthTime status=FAILURE method=SiteConfig.openTreeForthTime()[pri:21, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addFasTagSelectftDisplay()[pri:22, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:04 IST" name="addFasTagSelectftDisplay" finished-at="2024-02-01T14:58:07 IST" duration-ms="3054" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <option> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=4c7faa64-709e-47df-90b8-7b94d3d5b056}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[[[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceCatagory]] -> xpath: .//option[@value = "FastagDisplay"]]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <option> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=4c7faa64-709e-47df-90b8-7b94d3d5b056}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[[[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceCatagory]] -> xpath: .//option[@value = "FastagDisplay"]]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at org.openqa.selenium.support.ui.Select.setSelected(Select.java:315)
at org.openqa.selenium.support.ui.Select.selectByValue(Select.java:195)
at com.selenium.SiteConfig.addFasTagSelectftDisplay(SiteConfig.java:324)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFasTagSelectftDisplay -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:07 IST" name="getResult" finished-at="2024-02-01T14:58:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addFasTagSelectftDisplay status=FAILURE method=SiteConfig.addFasTagSelectftDisplay()[pri:22, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addFtDisplayDetails()[pri:23, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:07 IST" name="addFtDisplayDetails" finished-at="2024-02-01T14:58:09 IST" duration-ms="2016" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <input id="fastagDeviceName" class="form-control" name="fastagDeviceName" type="text"> is not reachable by keyboard
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, sendKeysToElement {id=33ccbaac-d89c-4889-95cc-eece9ac5ffb0, value=[Ljava.lang.CharSequence;@2a46f079}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceName]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <input id="fastagDeviceName" class="form-control" name="fastagDeviceName" type="text"> is not reachable by keyboard
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, sendKeysToElement {id=33ccbaac-d89c-4889-95cc-eece9ac5ffb0, value=[Ljava.lang.CharSequence;@2a46f079}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceName]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:111)
at com.selenium.SiteConfig.addFtDisplayDetails(SiteConfig.java:330)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFtDisplayDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:09 IST" name="getResult" finished-at="2024-02-01T14:58:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addFtDisplayDetails status=FAILURE method=SiteConfig.addFtDisplayDetails()[pri:23, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addbtnFasTagSelectftDisplay()[pri:24, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:09 IST" name="addbtnFasTagSelectftDisplay" finished-at="2024-02-01T14:58:09 IST" duration-ms="14" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <button id="btnFastagSaveDevices" class="btn btn-sm btn-primary" type="submit"> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=a98f8e53-8a70-4b76-b764-5a5a3645fadc}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: btnFastagSaveDevices]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <button id="btnFastagSaveDevices" class="btn btn-sm btn-primary" type="submit"> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=a98f8e53-8a70-4b76-b764-5a5a3645fadc}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: btnFastagSaveDevices]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at com.selenium.SiteConfig.addbtnFasTagSelectftDisplay(SiteConfig.java:340)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addbtnFasTagSelectftDisplay -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:09 IST" name="getResult" finished-at="2024-02-01T14:58:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addbtnFasTagSelectftDisplay status=FAILURE method=SiteConfig.addbtnFasTagSelectftDisplay()[pri:24, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="openTreeFifthTime()[pri:25, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:09 IST" name="openTreeFifthTime" finished-at="2024-02-01T14:58:19 IST" duration-ms="10025" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //li[@id='city_5']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//li[@id='city_5']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //li[@id='city_5']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//li[@id='city_5']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.SiteConfig.openTreeFifthTime(SiteConfig.java:364)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openTreeFifthTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:19 IST" name="getResult" finished-at="2024-02-01T14:58:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openTreeFifthTime status=FAILURE method=SiteConfig.openTreeFifthTime()[pri:25, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addFasTagSelectftPrinter()[pri:26, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:19 IST" name="addFasTagSelectftPrinter" finished-at="2024-02-01T14:58:22 IST" duration-ms="3045" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <option> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=fe172e87-d750-46a5-8e1b-abc51328a6fc}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[[[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceCatagory]] -> xpath: .//option[@value = "FastagMobilePrinter"]]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <option> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=fe172e87-d750-46a5-8e1b-abc51328a6fc}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[[[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceCatagory]] -> xpath: .//option[@value = "FastagMobilePrinter"]]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at org.openqa.selenium.support.ui.Select.setSelected(Select.java:315)
at org.openqa.selenium.support.ui.Select.selectByValue(Select.java:195)
at com.selenium.SiteConfig.addFasTagSelectftPrinter(SiteConfig.java:388)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFasTagSelectftPrinter -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:22 IST" name="getResult" finished-at="2024-02-01T14:58:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addFasTagSelectftPrinter status=FAILURE method=SiteConfig.addFasTagSelectftPrinter()[pri:26, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addFtPrinterDetails()[pri:27, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:22 IST" name="addFtPrinterDetails" finished-at="2024-02-01T14:58:22 IST" duration-ms="12" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <input id="fastagDeviceName" class="form-control" name="fastagDeviceName" type="text"> is not reachable by keyboard
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, sendKeysToElement {id=33ccbaac-d89c-4889-95cc-eece9ac5ffb0, value=[Ljava.lang.CharSequence;@42dda18}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceName]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <input id="fastagDeviceName" class="form-control" name="fastagDeviceName" type="text"> is not reachable by keyboard
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, sendKeysToElement {id=33ccbaac-d89c-4889-95cc-eece9ac5ffb0, value=[Ljava.lang.CharSequence;@42dda18}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceName]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:111)
at com.selenium.SiteConfig.addFtPrinterDetails(SiteConfig.java:393)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFtPrinterDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:22 IST" name="getResult" finished-at="2024-02-01T14:58:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addFtPrinterDetails status=FAILURE method=SiteConfig.addFtPrinterDetails()[pri:27, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addbtnFtPrinter()[pri:28, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:22 IST" name="addbtnFtPrinter" finished-at="2024-02-01T14:58:22 IST" duration-ms="14" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <button id="btnFastagSaveDevices" class="btn btn-sm btn-primary" type="submit"> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=a98f8e53-8a70-4b76-b764-5a5a3645fadc}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: btnFastagSaveDevices]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <button id="btnFastagSaveDevices" class="btn btn-sm btn-primary" type="submit"> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=a98f8e53-8a70-4b76-b764-5a5a3645fadc}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: btnFastagSaveDevices]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at com.selenium.SiteConfig.addbtnFtPrinter(SiteConfig.java:404)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addbtnFtPrinter -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:22 IST" name="getResult" finished-at="2024-02-01T14:58:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addbtnFtPrinter status=FAILURE method=SiteConfig.addbtnFtPrinter()[pri:28, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="openTreeSixthTime()[pri:29, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:22 IST" name="openTreeSixthTime" finished-at="2024-02-01T14:58:35 IST" duration-ms="12503" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //*[@id='site_56']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//*[@id='site_56']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //*[@id='site_56']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//*[@id='site_56']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.SiteConfig.openTreeSixthTime(SiteConfig.java:438)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openTreeSixthTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:35 IST" name="getResult" finished-at="2024-02-01T14:58:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openTreeSixthTime status=FAILURE method=SiteConfig.openTreeSixthTime()[pri:29, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addFasTagSelectFtmPOS()[pri:30, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:35 IST" name="addFasTagSelectFtmPOS" finished-at="2024-02-01T14:58:41 IST" duration-ms="6024" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <option> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=2468a732-e6fd-45b8-9548-c30d6e426e74}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[[[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceCatagory]] -> xpath: .//option[@value = "FastagMpos"]]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <option> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=2468a732-e6fd-45b8-9548-c30d6e426e74}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[[[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceCatagory]] -> xpath: .//option[@value = "FastagMpos"]]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at org.openqa.selenium.support.ui.Select.setSelected(Select.java:315)
at org.openqa.selenium.support.ui.Select.selectByValue(Select.java:195)
at com.selenium.SiteConfig.addFasTagSelectFtmPOS(SiteConfig.java:459)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFasTagSelectFtmPOS -->
        <test-method signature="addFtmPOSDetails()[pri:31, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:41 IST" name="addFtmPOSDetails" finished-at="2024-02-01T14:58:42 IST" duration-ms="1007" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <input id="fastagDeviceName" class="form-control" name="fastagDeviceName" type="text"> is not reachable by keyboard
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, sendKeysToElement {id=33ccbaac-d89c-4889-95cc-eece9ac5ffb0, value=[Ljava.lang.CharSequence;@7d236b95}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceName]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <input id="fastagDeviceName" class="form-control" name="fastagDeviceName" type="text"> is not reachable by keyboard
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, sendKeysToElement {id=33ccbaac-d89c-4889-95cc-eece9ac5ffb0, value=[Ljava.lang.CharSequence;@7d236b95}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: fastagDeviceName]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:111)
at com.selenium.SiteConfig.addFtmPOSDetails(SiteConfig.java:465)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addFtmPOSDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:41 IST" name="getResult" finished-at="2024-02-01T14:58:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addFasTagSelectFtmPOS status=FAILURE method=SiteConfig.addFasTagSelectFtmPOS()[pri:30, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:42 IST" name="getResult" finished-at="2024-02-01T14:58:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addFtmPOSDetails status=FAILURE method=SiteConfig.addFtmPOSDetails()[pri:31, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addbtnFasTagFtmPOS()[pri:32, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:42 IST" name="addbtnFasTagFtmPOS" finished-at="2024-02-01T14:58:45 IST" duration-ms="3005" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[Element <button id="btnFastagSaveDevices" class="btn btn-sm btn-primary" type="submit"> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=a98f8e53-8a70-4b76-b764-5a5a3645fadc}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: btnFastagSaveDevices]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: Element <button id="btnFastagSaveDevices" class="btn btn-sm btn-primary" type="submit"> could not be scrolled into view
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, clickElement {id=a98f8e53-8a70-4b76-b764-5a5a3645fadc}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Element: [[FirefoxDriver: firefox on linux (9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0)] -> id: btnFastagSaveDevices]
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at com.selenium.SiteConfig.addbtnFasTagFtmPOS(SiteConfig.java:479)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addbtnFasTagFtmPOS -->
        <test-method signature="openTreeSeventhTime()[pri:33, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:45 IST" name="openTreeSeventhTime" finished-at="2024-02-01T14:58:54 IST" duration-ms="9046" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //li[@id='city_5']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//li[@id='city_5']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //li[@id='city_5']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//li[@id='city_5']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.SiteConfig.openTreeSeventhTime(SiteConfig.java:503)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openTreeSeventhTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:45 IST" name="getResult" finished-at="2024-02-01T14:58:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addbtnFasTagFtmPOS status=FAILURE method=SiteConfig.addbtnFasTagFtmPOS()[pri:32, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:54 IST" name="getResult" finished-at="2024-02-01T14:58:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openTreeSeventhTime status=FAILURE method=SiteConfig.openTreeSeventhTime()[pri:33, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="updateController()[pri:34, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:58:54 IST" name="updateController" finished-at="2024-02-01T14:59:04 IST" duration-ms="10057" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: By.id: ftControllerPresentAt (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: By.id: ftControllerPresentAt (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:230)
at com.selenium.SiteConfig.updateController(SiteConfig.java:523)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateController -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:59:04 IST" name="getResult" finished-at="2024-02-01T14:59:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateController status=FAILURE method=SiteConfig.updateController()[pri:34, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="OpenTreeEighthTime()[pri:35, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:59:04 IST" name="OpenTreeEighthTime" finished-at="2024-02-01T14:59:10 IST" duration-ms="6239" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //li[@id='zone_1']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//li[@id='zone_1']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //li[@id='zone_1']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//li[@id='zone_1']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.SiteConfig.OpenTreeEighthTime(SiteConfig.java:542)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenTreeEighthTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:59:10 IST" name="getResult" finished-at="2024-02-01T14:59:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OpenTreeEighthTime status=FAILURE method=SiteConfig.OpenTreeEighthTime()[pri:35, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="deleteController()[pri:36, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:59:10 IST" name="deleteController" finished-at="2024-02-01T14:59:12 IST" duration-ms="2000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteController -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:59:12 IST" name="getResult" finished-at="2024-02-01T14:59:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteController status=SUCCESS method=SiteConfig.deleteController()[pri:36, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="OpenTreeNinthTime()[pri:37, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:59:12 IST" name="OpenTreeNinthTime" finished-at="2024-02-01T14:59:20 IST" duration-ms="8014" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //li[@id='city_5']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//li[@id='city_5']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //li[@id='city_5']/i
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//li[@id='city_5']/i}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.SiteConfig.OpenTreeNinthTime(SiteConfig.java:573)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenTreeNinthTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:59:20 IST" name="getResult" finished-at="2024-02-01T14:59:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OpenTreeNinthTime status=FAILURE method=SiteConfig.OpenTreeNinthTime()[pri:37, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="controllerDetailsView()[pri:38, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:59:20 IST" name="controllerDetailsView" finished-at="2024-02-01T14:59:22 IST" duration-ms="2007" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //a[@id='ftControllerID_2_anchor']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//a[@id='ftControllerID_2_anchor']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //a[@id='ftControllerID_2_anchor']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//a[@id='ftControllerID_2_anchor']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.SiteConfig.controllerDetailsView(SiteConfig.java:593)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- controllerDetailsView -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:59:22 IST" name="getResult" finished-at="2024-02-01T14:59:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=controllerDetailsView status=FAILURE method=SiteConfig.controllerDetailsView()[pri:38, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="fasTagReaderUpdate()[pri:39, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:59:22 IST" name="fasTagReaderUpdate" finished-at="2024-02-01T14:59:22 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fasTagReaderUpdate -->
        <test-method signature="OpenTreeTenthTime()[pri:40, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:59:22 IST" name="OpenTreeTenthTime" finished-at="2024-02-01T14:59:37 IST" duration-ms="14740" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //*[@id='site_56']/ul
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//*[@id='site_56']/ul}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //*[@id='site_56']/ul
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-39-generic', java.version: '18.0.2-ea'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0, findElement {using=xpath, value=//*[@id='site_56']/ul}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 121.0, moz:accessibilityChecks: false, moz:buildID: 20231220184444, moz:debuggerAddress: 127.0.0.1:2266, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 6.2.0-39-generic, moz:processID: 1217703, moz:profile: /tmp/rust_mozprofileWURFkL, moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://127.0.0.1:2266/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9ad7a0bc-b90b-473d-89f5-c72f6ce7faa0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at com.selenium.SiteConfig.OpenTreeTenthTime(SiteConfig.java:651)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenTreeTenthTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:59:22 IST" name="getResult" finished-at="2024-02-01T14:59:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fasTagReaderUpdate status=SUCCESS method=SiteConfig.fasTagReaderUpdate()[pri:39, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:59:37 IST" name="getResult" finished-at="2024-02-01T14:59:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OpenTreeTenthTime status=FAILURE method=SiteConfig.OpenTreeTenthTime()[pri:40, instance:com.selenium.SiteConfig@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.SiteConfig@2f217633]" started-at="2024-02-01T14:59:37 IST" name="tearDown" finished-at="2024-02-01T14:59:37 IST" duration-ms="356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.SiteConfig -->
    </test> <!-- SiteConfig -->
    <test started-at="2024-02-01T14:59:37 IST" name="PosManagement" finished-at="2024-02-01T15:06:27 IST" duration-ms="410110">
      <class name="com.selenium.PosManagement">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T14:59:37 IST" name="setUp" finished-at="2024-02-01T14:59:40 IST" duration-ms="2337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T14:59:40 IST" name="login" finished-at="2024-02-01T14:59:45 IST" duration-ms="5799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="revenueDashboardOpen()[pri:2, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T14:59:45 IST" name="revenueDashboardOpen" finished-at="2024-02-01T14:59:51 IST" duration-ms="5140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboardOpen -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T14:59:45 IST" name="getResult" finished-at="2024-02-01T14:59:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=PosManagement.login()[pri:1, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T14:59:51 IST" name="getResult" finished-at="2024-02-01T14:59:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboardOpen status=SUCCESS method=PosManagement.revenueDashboardOpen()[pri:2, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="posConfigurationPage()[pri:3, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T14:59:51 IST" name="posConfigurationPage" finished-at="2024-02-01T14:59:57 IST" duration-ms="6408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- posConfigurationPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T14:59:57 IST" name="getResult" finished-at="2024-02-01T14:59:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=posConfigurationPage status=SUCCESS method=PosManagement.posConfigurationPage()[pri:3, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectSiteName()[pri:4, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T14:59:57 IST" name="selectSiteName" finished-at="2024-02-01T15:00:04 IST" duration-ms="6580" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectSiteName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:04 IST" name="getResult" finished-at="2024-02-01T15:00:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectSiteName status=SUCCESS method=PosManagement.selectSiteName()[pri:4, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="parkingVehicleTab()[pri:5, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:04 IST" name="parkingVehicleTab" finished-at="2024-02-01T15:00:07 IST" duration-ms="3232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parkingVehicleTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:07 IST" name="getResult" finished-at="2024-02-01T15:00:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=parkingVehicleTab status=SUCCESS method=PosManagement.parkingVehicleTab()[pri:5, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickAddParkVehicle()[pri:6, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:07 IST" name="clickAddParkVehicle" finished-at="2024-02-01T15:00:10 IST" duration-ms="3242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAddParkVehicle -->
        <test-method signature="selectVehicle()[pri:7, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:10 IST" name="selectVehicle" finished-at="2024-02-01T15:00:16 IST" duration-ms="5554" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectVehicle -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:10 IST" name="getResult" finished-at="2024-02-01T15:00:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAddParkVehicle status=SUCCESS method=PosManagement.clickAddParkVehicle()[pri:6, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addVehicleBtn()[pri:8, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:16 IST" name="addVehicleBtn" finished-at="2024-02-01T15:00:21 IST" duration-ms="5235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addVehicleBtn -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:16 IST" name="getResult" finished-at="2024-02-01T15:00:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectVehicle status=SUCCESS method=PosManagement.selectVehicle()[pri:7, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:21 IST" name="getResult" finished-at="2024-02-01T15:00:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addVehicleBtn status=SUCCESS method=PosManagement.addVehicleBtn()[pri:8, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="extractPopupTextAddVehicle()[pri:9, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:21 IST" name="extractPopupTextAddVehicle" finished-at="2024-02-01T15:00:24 IST" duration-ms="3023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractPopupTextAddVehicle -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:24 IST" name="getResult" finished-at="2024-02-01T15:00:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractPopupTextAddVehicle status=SUCCESS method=PosManagement.extractPopupTextAddVehicle()[pri:9, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusOKAddVehicle()[pri:10, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:24 IST" name="statusOKAddVehicle" finished-at="2024-02-01T15:00:26 IST" duration-ms="2211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusOKAddVehicle -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:26 IST" name="getResult" finished-at="2024-02-01T15:00:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusOKAddVehicle status=SUCCESS method=PosManagement.statusOKAddVehicle()[pri:10, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="parkingChargesTab()[pri:11, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:26 IST" name="parkingChargesTab" finished-at="2024-02-01T15:00:29 IST" duration-ms="3211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parkingChargesTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:29 IST" name="getResult" finished-at="2024-02-01T15:00:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=parkingChargesTab status=SUCCESS method=PosManagement.parkingChargesTab()[pri:11, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="parkingChargesView()[pri:12, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:29 IST" name="parkingChargesView" finished-at="2024-02-01T15:00:32 IST" duration-ms="3231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parkingChargesView -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:32 IST" name="getResult" finished-at="2024-02-01T15:00:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=parkingChargesView status=SUCCESS method=PosManagement.parkingChargesView()[pri:12, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectAllWeekButtons()[pri:13, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:33 IST" name="selectAllWeekButtons" finished-at="2024-02-01T15:00:44 IST" duration-ms="11632" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAllWeekButtons -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:44 IST" name="getResult" finished-at="2024-02-01T15:00:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAllWeekButtons status=SUCCESS method=PosManagement.selectAllWeekButtons()[pri:13, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectWednesdayButton()[pri:14, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:44 IST" name="selectWednesdayButton" finished-at="2024-02-01T15:00:47 IST" duration-ms="3239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectWednesdayButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:47 IST" name="getResult" finished-at="2024-02-01T15:00:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectWednesdayButton status=SUCCESS method=PosManagement.selectWednesdayButton()[pri:14, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="updateInputValue()[pri:15, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:47 IST" name="updateInputValue" finished-at="2024-02-01T15:00:50 IST" duration-ms="3053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateInputValue -->
        <test-method signature="pChargesSubmitBtn()[pri:16, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:50 IST" name="pChargesSubmitBtn" finished-at="2024-02-01T15:00:53 IST" duration-ms="2231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pChargesSubmitBtn -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:50 IST" name="getResult" finished-at="2024-02-01T15:00:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateInputValue status=SUCCESS method=PosManagement.updateInputValue()[pri:15, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:53 IST" name="getResult" finished-at="2024-02-01T15:00:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=pChargesSubmitBtn status=SUCCESS method=PosManagement.pChargesSubmitBtn()[pri:16, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="extractUpdateParckingChargesText()[pri:17, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:53 IST" name="extractUpdateParckingChargesText" finished-at="2024-02-01T15:00:55 IST" duration-ms="2036" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractUpdateParckingChargesText -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:55 IST" name="getResult" finished-at="2024-02-01T15:00:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractUpdateParckingChargesText status=SUCCESS method=PosManagement.extractUpdateParckingChargesText()[pri:17, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="parkingChargeStatusOK()[pri:18, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:55 IST" name="parkingChargeStatusOK" finished-at="2024-02-01T15:00:56 IST" duration-ms="1248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parkingChargeStatusOK -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:56 IST" name="getResult" finished-at="2024-02-01T15:00:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=parkingChargeStatusOK status=SUCCESS method=PosManagement.parkingChargeStatusOK()[pri:18, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectReserveCharges()[pri:21, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:56 IST" name="selectReserveCharges" finished-at="2024-02-01T15:00:56 IST" duration-ms="240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectReserveCharges -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:56 IST" name="getResult" finished-at="2024-02-01T15:00:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectReserveCharges status=SUCCESS method=PosManagement.selectReserveCharges()[pri:21, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="reserveChargesEditBtn()[pri:22, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:56 IST" name="reserveChargesEditBtn" finished-at="2024-02-01T15:00:56 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reserveChargesEditBtn -->
        <test-method signature="updatereservationCharges()[pri:23, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:56 IST" name="updatereservationCharges" finished-at="2024-02-01T15:00:56 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatereservationCharges -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:56 IST" name="getResult" finished-at="2024-02-01T15:00:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=reserveChargesEditBtn status=SUCCESS method=PosManagement.reserveChargesEditBtn()[pri:22, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:56 IST" name="getResult" finished-at="2024-02-01T15:00:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updatereservationCharges status=SUCCESS method=PosManagement.updatereservationCharges()[pri:23, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="updateReservationsSubmitBtn()[pri:24, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:56 IST" name="updateReservationsSubmitBtn" finished-at="2024-02-01T15:00:58 IST" duration-ms="2012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateReservationsSubmitBtn -->
        <test-method signature="reserveChargesUpdatePopupText()[pri:25, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:58 IST" name="reserveChargesUpdatePopupText" finished-at="2024-02-01T15:01:00 IST" duration-ms="2009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reserveChargesUpdatePopupText -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:00:58 IST" name="getResult" finished-at="2024-02-01T15:00:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateReservationsSubmitBtn status=SUCCESS method=PosManagement.updateReservationsSubmitBtn()[pri:24, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="reserveChargeUpdateStatusOK()[pri:26, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:00 IST" name="reserveChargeUpdateStatusOK" finished-at="2024-02-01T15:01:01 IST" duration-ms="1008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reserveChargeUpdateStatusOK -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:00 IST" name="getResult" finished-at="2024-02-01T15:01:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=reserveChargesUpdatePopupText status=SUCCESS method=PosManagement.reserveChargesUpdatePopupText()[pri:25, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:01 IST" name="getResult" finished-at="2024-02-01T15:01:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=reserveChargeUpdateStatusOK status=SUCCESS method=PosManagement.reserveChargeUpdateStatusOK()[pri:26, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectParkingChargesTabTwice()[pri:27, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:01 IST" name="selectParkingChargesTabTwice" finished-at="2024-02-01T15:01:04 IST" duration-ms="3020" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectParkingChargesTabTwice -->
        <test-method signature="clickVerifyAddReserveBtn()[pri:28, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:04 IST" name="clickVerifyAddReserveBtn" finished-at="2024-02-01T15:01:07 IST" duration-ms="3015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickVerifyAddReserveBtn -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:04 IST" name="getResult" finished-at="2024-02-01T15:01:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectParkingChargesTabTwice status=SUCCESS method=PosManagement.selectParkingChargesTabTwice()[pri:27, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:07 IST" name="getResult" finished-at="2024-02-01T15:01:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickVerifyAddReserveBtn status=SUCCESS method=PosManagement.clickVerifyAddReserveBtn()[pri:28, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addReservationChargesVehicleType()[pri:29, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:07 IST" name="addReservationChargesVehicleType" finished-at="2024-02-01T15:01:10 IST" duration-ms="3016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addReservationChargesVehicleType -->
        <test-method signature="addReservationInputCharges()[pri:30, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:10 IST" name="addReservationInputCharges" finished-at="2024-02-01T15:01:13 IST" duration-ms="3013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addReservationInputCharges -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:10 IST" name="getResult" finished-at="2024-02-01T15:01:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addReservationChargesVehicleType status=SUCCESS method=PosManagement.addReservationChargesVehicleType()[pri:29, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addReservationChargesDateSelection()[pri:31, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:13 IST" name="addReservationChargesDateSelection" finished-at="2024-02-01T15:01:16 IST" duration-ms="3019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addReservationChargesDateSelection -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:13 IST" name="getResult" finished-at="2024-02-01T15:01:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addReservationInputCharges status=SUCCESS method=PosManagement.addReservationInputCharges()[pri:30, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:16 IST" name="getResult" finished-at="2024-02-01T15:01:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addReservationChargesDateSelection status=SUCCESS method=PosManagement.addReservationChargesDateSelection()[pri:31, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addReservationChargesDay()[pri:32, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:16 IST" name="addReservationChargesDay" finished-at="2024-02-01T15:01:19 IST" duration-ms="3015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addReservationChargesDay -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:19 IST" name="getResult" finished-at="2024-02-01T15:01:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addReservationChargesDay status=SUCCESS method=PosManagement.addReservationChargesDay()[pri:32, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addReservationChargesDuration()[pri:33, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:19 IST" name="addReservationChargesDuration" finished-at="2024-02-01T15:01:22 IST" duration-ms="3013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addReservationChargesDuration -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:22 IST" name="getResult" finished-at="2024-02-01T15:01:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addReservationChargesDuration status=SUCCESS method=PosManagement.addReservationChargesDuration()[pri:33, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickVerifySaveReserveBtn()[pri:34, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:22 IST" name="clickVerifySaveReserveBtn" finished-at="2024-02-01T15:01:28 IST" duration-ms="6014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickVerifySaveReserveBtn -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:28 IST" name="getResult" finished-at="2024-02-01T15:01:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickVerifySaveReserveBtn status=SUCCESS method=PosManagement.clickVerifySaveReserveBtn()[pri:34, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="extractAddReservationCharges()[pri:35, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:28 IST" name="extractAddReservationCharges" finished-at="2024-02-01T15:01:30 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractAddReservationCharges -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:30 IST" name="getResult" finished-at="2024-02-01T15:01:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractAddReservationCharges status=SUCCESS method=PosManagement.extractAddReservationCharges()[pri:35, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="okStatusAddReservation()[pri:36, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:30 IST" name="okStatusAddReservation" finished-at="2024-02-01T15:01:31 IST" duration-ms="1007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- okStatusAddReservation -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:31 IST" name="getResult" finished-at="2024-02-01T15:01:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=okStatusAddReservation status=SUCCESS method=PosManagement.okStatusAddReservation()[pri:36, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="popUpCloseAddReservation()[pri:37, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:31 IST" name="popUpCloseAddReservation" finished-at="2024-02-01T15:01:33 IST" duration-ms="2013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- popUpCloseAddReservation -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:33 IST" name="getResult" finished-at="2024-02-01T15:01:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=popUpCloseAddReservation status=SUCCESS method=PosManagement.popUpCloseAddReservation()[pri:37, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectParkingChargesTabThrice()[pri:38, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:33 IST" name="selectParkingChargesTabThrice" finished-at="2024-02-01T15:01:36 IST" duration-ms="3049" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectParkingChargesTabThrice -->
        <test-method signature="selectSpecialCharges()[pri:39, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:36 IST" name="selectSpecialCharges" finished-at="2024-02-01T15:01:42 IST" duration-ms="5247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectSpecialCharges -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:36 IST" name="getResult" finished-at="2024-02-01T15:01:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectParkingChargesTabThrice status=SUCCESS method=PosManagement.selectParkingChargesTabThrice()[pri:38, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:42 IST" name="getResult" finished-at="2024-02-01T15:01:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectSpecialCharges status=SUCCESS method=PosManagement.selectSpecialCharges()[pri:39, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="splChargesWeekBtn()[pri:40, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:42 IST" name="splChargesWeekBtn" finished-at="2024-02-01T15:01:53 IST" duration-ms="11602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splChargesWeekBtn -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:53 IST" name="getResult" finished-at="2024-02-01T15:01:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=splChargesWeekBtn status=SUCCESS method=PosManagement.splChargesWeekBtn()[pri:40, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickSCAddBtn()[pri:41, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:53 IST" name="clickSCAddBtn" finished-at="2024-02-01T15:01:56 IST" duration-ms="2238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickSCAddBtn -->
        <test-method signature="selectWednesdayButtonTwice()[pri:41, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:56 IST" name="selectWednesdayButtonTwice" finished-at="2024-02-01T15:01:59 IST" duration-ms="3223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectWednesdayButtonTwice -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:56 IST" name="getResult" finished-at="2024-02-01T15:01:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickSCAddBtn status=SUCCESS method=PosManagement.clickSCAddBtn()[pri:41, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:59 IST" name="getResult" finished-at="2024-02-01T15:01:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectWednesdayButtonTwice status=SUCCESS method=PosManagement.selectWednesdayButtonTwice()[pri:41, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="splChargesStartHour()[pri:42, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:01:59 IST" name="splChargesStartHour" finished-at="2024-02-01T15:02:01 IST" duration-ms="2221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splChargesStartHour -->
        <test-method signature="splChargesEndHour()[pri:43, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:01 IST" name="splChargesEndHour" finished-at="2024-02-01T15:02:03 IST" duration-ms="2408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splChargesEndHour -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:01 IST" name="getResult" finished-at="2024-02-01T15:02:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=splChargesStartHour status=SUCCESS method=PosManagement.splChargesStartHour()[pri:42, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="splChargesEnterCharges()[pri:44, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:03 IST" name="splChargesEnterCharges" finished-at="2024-02-01T15:02:06 IST" duration-ms="2246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splChargesEnterCharges -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:03 IST" name="getResult" finished-at="2024-02-01T15:02:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=splChargesEndHour status=SUCCESS method=PosManagement.splChargesEndHour()[pri:43, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:06 IST" name="getResult" finished-at="2024-02-01T15:02:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=splChargesEnterCharges status=SUCCESS method=PosManagement.splChargesEnterCharges()[pri:44, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="splChargesEnterDisCharges()[pri:45, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:06 IST" name="splChargesEnterDisCharges" finished-at="2024-02-01T15:02:08 IST" duration-ms="2227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splChargesEnterDisCharges -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:08 IST" name="getResult" finished-at="2024-02-01T15:02:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=splChargesEnterDisCharges status=SUCCESS method=PosManagement.splChargesEnterDisCharges()[pri:45, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="splChargeCardDisCharges()[pri:46, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:08 IST" name="splChargeCardDisCharges" finished-at="2024-02-01T15:02:10 IST" duration-ms="2225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splChargeCardDisCharges -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:10 IST" name="getResult" finished-at="2024-02-01T15:02:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=splChargeCardDisCharges status=SUCCESS method=PosManagement.splChargeCardDisCharges()[pri:46, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="splChargeUPIDisCharges()[pri:47, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:10 IST" name="splChargeUPIDisCharges" finished-at="2024-02-01T15:02:12 IST" duration-ms="2245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- splChargeUPIDisCharges -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:12 IST" name="getResult" finished-at="2024-02-01T15:02:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=splChargeUPIDisCharges status=SUCCESS method=PosManagement.splChargeUPIDisCharges()[pri:47, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addSplChargesSubmitBtn()[pri:48, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:12 IST" name="addSplChargesSubmitBtn" finished-at="2024-02-01T15:02:15 IST" duration-ms="2225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addSplChargesSubmitBtn -->
        <test-method signature="addSpecialChargesPopUptext()[pri:49, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:15 IST" name="addSpecialChargesPopUptext" finished-at="2024-02-01T15:02:18 IST" duration-ms="3027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addSpecialChargesPopUptext -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:15 IST" name="getResult" finished-at="2024-02-01T15:02:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addSplChargesSubmitBtn status=SUCCESS method=PosManagement.addSplChargesSubmitBtn()[pri:48, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:18 IST" name="getResult" finished-at="2024-02-01T15:02:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addSpecialChargesPopUptext status=SUCCESS method=PosManagement.addSpecialChargesPopUptext()[pri:49, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addSpecialChargesStatusOK()[pri:50, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:18 IST" name="addSpecialChargesStatusOK" finished-at="2024-02-01T15:02:20 IST" duration-ms="2230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addSpecialChargesStatusOK -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:20 IST" name="getResult" finished-at="2024-02-01T15:02:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addSpecialChargesStatusOK status=SUCCESS method=PosManagement.addSpecialChargesStatusOK()[pri:50, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="specialChargesView()[pri:51, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:20 IST" name="specialChargesView" finished-at="2024-02-01T15:02:25 IST" duration-ms="5571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- specialChargesView -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:25 IST" name="getResult" finished-at="2024-02-01T15:02:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=specialChargesView status=SUCCESS method=PosManagement.specialChargesView()[pri:51, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectWednesdayButtonThrice()[pri:52, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:25 IST" name="selectWednesdayButtonThrice" finished-at="2024-02-01T15:02:29 IST" duration-ms="3235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectWednesdayButtonThrice -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:29 IST" name="getResult" finished-at="2024-02-01T15:02:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectWednesdayButtonThrice status=SUCCESS method=PosManagement.selectWednesdayButtonThrice()[pri:52, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="deleteSpecialCharges()[pri:53, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:29 IST" name="deleteSpecialCharges" finished-at="2024-02-01T15:02:34 IST" duration-ms="5237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteSpecialCharges -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:34 IST" name="getResult" finished-at="2024-02-01T15:02:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteSpecialCharges status=SUCCESS method=PosManagement.deleteSpecialCharges()[pri:53, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="deleteSpecialChargesPopUptext()[pri:54, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:34 IST" name="deleteSpecialChargesPopUptext" finished-at="2024-02-01T15:02:37 IST" duration-ms="3007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteSpecialChargesPopUptext -->
        <test-method signature="deleteSpecialChargesStatusOK()[pri:55, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:37 IST" name="deleteSpecialChargesStatusOK" finished-at="2024-02-01T15:02:39 IST" duration-ms="2215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteSpecialChargesStatusOK -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:37 IST" name="getResult" finished-at="2024-02-01T15:02:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteSpecialChargesPopUptext status=SUCCESS method=PosManagement.deleteSpecialChargesPopUptext()[pri:54, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:39 IST" name="getResult" finished-at="2024-02-01T15:02:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteSpecialChargesStatusOK status=SUCCESS method=PosManagement.deleteSpecialChargesStatusOK()[pri:55, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="parkingChargesViewTwice()[pri:56, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:39 IST" name="parkingChargesViewTwice" finished-at="2024-02-01T15:02:42 IST" duration-ms="3008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parkingChargesViewTwice -->
        <test-method signature="selectSpecialChargesTwice()[pri:57, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:42 IST" name="selectSpecialChargesTwice" finished-at="2024-02-01T15:02:47 IST" duration-ms="5017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectSpecialChargesTwice -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:42 IST" name="getResult" finished-at="2024-02-01T15:02:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=parkingChargesViewTwice status=SUCCESS method=PosManagement.parkingChargesViewTwice()[pri:56, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectValetCharges()[pri:58, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:47 IST" name="selectValetCharges" finished-at="2024-02-01T15:02:52 IST" duration-ms="5280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectValetCharges -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:47 IST" name="getResult" finished-at="2024-02-01T15:02:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectSpecialChargesTwice status=SUCCESS method=PosManagement.selectSpecialChargesTwice()[pri:57, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:52 IST" name="getResult" finished-at="2024-02-01T15:02:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectValetCharges status=SUCCESS method=PosManagement.selectValetCharges()[pri:58, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickValetChargesAddBtn()[pri:59, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:52 IST" name="clickValetChargesAddBtn" finished-at="2024-02-01T15:02:57 IST" duration-ms="4242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickValetChargesAddBtn -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:57 IST" name="getResult" finished-at="2024-02-01T15:02:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickValetChargesAddBtn status=SUCCESS method=PosManagement.clickValetChargesAddBtn()[pri:59, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="editValetCharges()[pri:60, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:57 IST" name="editValetCharges" finished-at="2024-02-01T15:02:59 IST" duration-ms="2259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editValetCharges -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:59 IST" name="getResult" finished-at="2024-02-01T15:02:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editValetCharges status=SUCCESS method=PosManagement.editValetCharges()[pri:60, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addValetChargesDateSelection()[pri:61, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:02:59 IST" name="addValetChargesDateSelection" finished-at="2024-02-01T15:03:07 IST" duration-ms="7971" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addValetChargesDateSelection -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:07 IST" name="getResult" finished-at="2024-02-01T15:03:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addValetChargesDateSelection status=SUCCESS method=PosManagement.addValetChargesDateSelection()[pri:61, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addValetChargesDay()[pri:62, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:07 IST" name="addValetChargesDay" finished-at="2024-02-01T15:03:11 IST" duration-ms="3764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addValetChargesDay -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:11 IST" name="getResult" finished-at="2024-02-01T15:03:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addValetChargesDay status=SUCCESS method=PosManagement.addValetChargesDay()[pri:62, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addValetChargesDuration()[pri:63, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:11 IST" name="addValetChargesDuration" finished-at="2024-02-01T15:03:14 IST" duration-ms="3725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addValetChargesDuration -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:14 IST" name="getResult" finished-at="2024-02-01T15:03:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addValetChargesDuration status=SUCCESS method=PosManagement.addValetChargesDuration()[pri:63, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addValetChargesSubmitBtn()[pri:64, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:14 IST" name="addValetChargesSubmitBtn" finished-at="2024-02-01T15:03:18 IST" duration-ms="3256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addValetChargesSubmitBtn -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:18 IST" name="getResult" finished-at="2024-02-01T15:03:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addValetChargesSubmitBtn status=SUCCESS method=PosManagement.addValetChargesSubmitBtn()[pri:64, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addValetChargesPopupText()[pri:65, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:18 IST" name="addValetChargesPopupText" finished-at="2024-02-01T15:03:21 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addValetChargesPopupText -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:21 IST" name="getResult" finished-at="2024-02-01T15:03:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addValetChargesPopupText status=SUCCESS method=PosManagement.addValetChargesPopupText()[pri:65, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addValetChargesStatusOK()[pri:66, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:21 IST" name="addValetChargesStatusOK" finished-at="2024-02-01T15:03:37 IST" duration-ms="16610" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addValetChargesStatusOK -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:37 IST" name="getResult" finished-at="2024-02-01T15:03:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addValetChargesStatusOK status=SUCCESS method=PosManagement.addValetChargesStatusOK()[pri:66, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickValetChargesEditBtn()[pri:67, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:37 IST" name="clickValetChargesEditBtn" finished-at="2024-02-01T15:03:42 IST" duration-ms="5004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickValetChargesEditBtn -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:42 IST" name="getResult" finished-at="2024-02-01T15:03:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickValetChargesEditBtn status=SUCCESS method=PosManagement.clickValetChargesEditBtn()[pri:67, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="updateChargeInValetCharges()[pri:68, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:42 IST" name="updateChargeInValetCharges" finished-at="2024-02-01T15:03:45 IST" duration-ms="3007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateChargeInValetCharges -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:45 IST" name="getResult" finished-at="2024-02-01T15:03:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateChargeInValetCharges status=SUCCESS method=PosManagement.updateChargeInValetCharges()[pri:68, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="updateValetChargesDateSelection()[pri:69, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:45 IST" name="updateValetChargesDateSelection" finished-at="2024-02-01T15:03:48 IST" duration-ms="3014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateValetChargesDateSelection -->
        <test-method signature="updateValetChargesSubmitBtn()[pri:70, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:48 IST" name="updateValetChargesSubmitBtn" finished-at="2024-02-01T15:03:51 IST" duration-ms="3014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateValetChargesSubmitBtn -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:48 IST" name="getResult" finished-at="2024-02-01T15:03:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateValetChargesDateSelection status=SUCCESS method=PosManagement.updateValetChargesDateSelection()[pri:69, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:51 IST" name="getResult" finished-at="2024-02-01T15:03:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateValetChargesSubmitBtn status=SUCCESS method=PosManagement.updateValetChargesSubmitBtn()[pri:70, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="updateValetChargesPopupText()[pri:71, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:51 IST" name="updateValetChargesPopupText" finished-at="2024-02-01T15:03:54 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateValetChargesPopupText -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:54 IST" name="getResult" finished-at="2024-02-01T15:03:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateValetChargesPopupText status=SUCCESS method=PosManagement.updateValetChargesPopupText()[pri:71, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="updateValetChargesStatusOK()[pri:72, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:54 IST" name="updateValetChargesStatusOK" finished-at="2024-02-01T15:03:56 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateValetChargesStatusOK -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:56 IST" name="getResult" finished-at="2024-02-01T15:03:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateValetChargesStatusOK status=SUCCESS method=PosManagement.updateValetChargesStatusOK()[pri:72, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="parkingPassesTab()[pri:73, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:03:56 IST" name="parkingPassesTab" finished-at="2024-02-01T15:04:02 IST" duration-ms="5736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parkingPassesTab -->
        <test-method signature="clickParkingPassesEditBtn()[pri:74, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:02 IST" name="clickParkingPassesEditBtn" finished-at="2024-02-01T15:04:05 IST" duration-ms="3223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickParkingPassesEditBtn -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:02 IST" name="getResult" finished-at="2024-02-01T15:04:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=parkingPassesTab status=SUCCESS method=PosManagement.parkingPassesTab()[pri:73, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="setPassPrice()[pri:75, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:05 IST" name="setPassPrice" finished-at="2024-02-01T15:04:07 IST" duration-ms="2057" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setPassPrice -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:05 IST" name="getResult" finished-at="2024-02-01T15:04:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickParkingPassesEditBtn status=SUCCESS method=PosManagement.clickParkingPassesEditBtn()[pri:74, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:07 IST" name="getResult" finished-at="2024-02-01T15:04:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setPassPrice status=SUCCESS method=PosManagement.setPassPrice()[pri:75, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickUpdatePassButton()[pri:76, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:07 IST" name="clickUpdatePassButton" finished-at="2024-02-01T15:04:10 IST" duration-ms="2269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickUpdatePassButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:10 IST" name="getResult" finished-at="2024-02-01T15:04:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickUpdatePassButton status=SUCCESS method=PosManagement.clickUpdatePassButton()[pri:76, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="updatePassPopupText()[pri:77, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:10 IST" name="updatePassPopupText" finished-at="2024-02-01T15:04:12 IST" duration-ms="2031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatePassPopupText -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:12 IST" name="getResult" finished-at="2024-02-01T15:04:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updatePassPopupText status=SUCCESS method=PosManagement.updatePassPopupText()[pri:77, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="updatePassstatusOK()[pri:78, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:12 IST" name="updatePassstatusOK" finished-at="2024-02-01T15:04:13 IST" duration-ms="1229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatePassstatusOK -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:13 IST" name="getResult" finished-at="2024-02-01T15:04:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updatePassstatusOK status=SUCCESS method=PosManagement.updatePassstatusOK()[pri:78, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectOptionFromDropdown()[pri:79, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:13 IST" name="selectOptionFromDropdown" finished-at="2024-02-01T15:04:16 IST" duration-ms="3237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOptionFromDropdown -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:16 IST" name="getResult" finished-at="2024-02-01T15:04:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectOptionFromDropdown status=SUCCESS method=PosManagement.selectOptionFromDropdown()[pri:79, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="performPassesTabSearch()[pri:80, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:16 IST" name="performPassesTabSearch" finished-at="2024-02-01T15:04:19 IST" duration-ms="3047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performPassesTabSearch -->
        <test-method signature="attenderShiftsTab()[pri:81, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:19 IST" name="attenderShiftsTab" finished-at="2024-02-01T15:04:22 IST" duration-ms="3235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- attenderShiftsTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:19 IST" name="getResult" finished-at="2024-02-01T15:04:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=performPassesTabSearch status=SUCCESS method=PosManagement.performPassesTabSearch()[pri:80, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:22 IST" name="getResult" finished-at="2024-02-01T15:04:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=attenderShiftsTab status=SUCCESS method=PosManagement.attenderShiftsTab()[pri:81, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="openModalDialog()[pri:84, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:22 IST" name="openModalDialog" finished-at="2024-02-01T15:04:26 IST" duration-ms="3238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openModalDialog -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:26 IST" name="getResult" finished-at="2024-02-01T15:04:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openModalDialog status=SUCCESS method=PosManagement.openModalDialog()[pri:84, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="updateShifts()[pri:85, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:26 IST" name="updateShifts" finished-at="2024-02-01T15:04:29 IST" duration-ms="3308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateShifts -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:29 IST" name="getResult" finished-at="2024-02-01T15:04:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateShifts status=SUCCESS method=PosManagement.updateShifts()[pri:85, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="updateShiftPopupText()[pri:86, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:29 IST" name="updateShiftPopupText" finished-at="2024-02-01T15:04:33 IST" duration-ms="4024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateShiftPopupText -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:33 IST" name="getResult" finished-at="2024-02-01T15:04:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateShiftPopupText status=SUCCESS method=PosManagement.updateShiftPopupText()[pri:86, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="updateShiftstatusOK()[pri:87, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:33 IST" name="updateShiftstatusOK" finished-at="2024-02-01T15:04:36 IST" duration-ms="3212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateShiftstatusOK -->
        <test-method signature="clickAddAttenderShiftButton()[pri:88, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:36 IST" name="clickAddAttenderShiftButton" finished-at="2024-02-01T15:04:39 IST" duration-ms="3222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAddAttenderShiftButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:36 IST" name="getResult" finished-at="2024-02-01T15:04:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateShiftstatusOK status=SUCCESS method=PosManagement.updateShiftstatusOK()[pri:87, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addAttenderShift()[pri:89, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:39 IST" name="addAttenderShift" finished-at="2024-02-01T15:04:52 IST" duration-ms="12596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAttenderShift -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:39 IST" name="getResult" finished-at="2024-02-01T15:04:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAddAttenderShiftButton status=SUCCESS method=PosManagement.clickAddAttenderShiftButton()[pri:88, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addShiftPopupText()[pri:90, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:52 IST" name="addShiftPopupText" finished-at="2024-02-01T15:04:54 IST" duration-ms="2024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addShiftPopupText -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:52 IST" name="getResult" finished-at="2024-02-01T15:04:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addAttenderShift status=SUCCESS method=PosManagement.addAttenderShift()[pri:89, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addShiftstatusOK()[pri:91, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:54 IST" name="addShiftstatusOK" finished-at="2024-02-01T15:04:55 IST" duration-ms="1223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addShiftstatusOK -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:54 IST" name="getResult" finished-at="2024-02-01T15:04:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addShiftPopupText status=SUCCESS method=PosManagement.addShiftPopupText()[pri:90, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:55 IST" name="getResult" finished-at="2024-02-01T15:04:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addShiftstatusOK status=SUCCESS method=PosManagement.addShiftstatusOK()[pri:91, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addShiftPopUPClose()[pri:92, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:55 IST" name="addShiftPopUPClose" finished-at="2024-02-01T15:04:57 IST" duration-ms="2223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addShiftPopUPClose -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:57 IST" name="getResult" finished-at="2024-02-01T15:04:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addShiftPopUPClose status=SUCCESS method=PosManagement.addShiftPopUPClose()[pri:92, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="hawkerTab()[pri:93, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:04:57 IST" name="hawkerTab" finished-at="2024-02-01T15:05:01 IST" duration-ms="3230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hawkerTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:01 IST" name="getResult" finished-at="2024-02-01T15:05:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hawkerTab status=SUCCESS method=PosManagement.hawkerTab()[pri:93, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickAddHawkerButton()[pri:94, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:01 IST" name="clickAddHawkerButton" finished-at="2024-02-01T15:05:03 IST" duration-ms="2224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAddHawkerButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:03 IST" name="getResult" finished-at="2024-02-01T15:05:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAddHawkerButton status=SUCCESS method=PosManagement.clickAddHawkerButton()[pri:94, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickEditHawkerButton()[pri:95, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:03 IST" name="clickEditHawkerButton" finished-at="2024-02-01T15:05:20 IST" duration-ms="16695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickEditHawkerButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:20 IST" name="getResult" finished-at="2024-02-01T15:05:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickEditHawkerButton status=SUCCESS method=PosManagement.clickEditHawkerButton()[pri:95, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="updateHawker()[pri:96, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:20 IST" name="updateHawker" finished-at="2024-02-01T15:05:22 IST" duration-ms="2234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateHawker -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:22 IST" name="getResult" finished-at="2024-02-01T15:05:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateHawker status=SUCCESS method=PosManagement.updateHawker()[pri:96, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="AddHawkerPopUp()[pri:97, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:22 IST" name="AddHawkerPopUp" finished-at="2024-02-01T15:05:26 IST" duration-ms="4013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddHawkerPopUp -->
        <test-method signature="AddHawkerPopUpStatus()[pri:98, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:26 IST" name="AddHawkerPopUpStatus" finished-at="2024-02-01T15:05:29 IST" duration-ms="3221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddHawkerPopUpStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:26 IST" name="getResult" finished-at="2024-02-01T15:05:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddHawkerPopUp status=SUCCESS method=PosManagement.AddHawkerPopUp()[pri:97, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:29 IST" name="getResult" finished-at="2024-02-01T15:05:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddHawkerPopUpStatus status=SUCCESS method=PosManagement.AddHawkerPopUpStatus()[pri:98, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="viewHawkerDetails()[pri:99, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:29 IST" name="viewHawkerDetails" finished-at="2024-02-01T15:05:31 IST" duration-ms="2238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewHawkerDetails -->
        <test-method signature="updateHawkerDetails()[pri:100, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:31 IST" name="updateHawkerDetails" finished-at="2024-02-01T15:05:36 IST" duration-ms="4221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateHawkerDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:31 IST" name="getResult" finished-at="2024-02-01T15:05:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewHawkerDetails status=SUCCESS method=PosManagement.viewHawkerDetails()[pri:99, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:36 IST" name="getResult" finished-at="2024-02-01T15:05:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateHawkerDetails status=SUCCESS method=PosManagement.updateHawkerDetails()[pri:100, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="hawkerUpdate()[pri:101, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:36 IST" name="hawkerUpdate" finished-at="2024-02-01T15:05:38 IST" duration-ms="2219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hawkerUpdate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:38 IST" name="getResult" finished-at="2024-02-01T15:05:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hawkerUpdate status=SUCCESS method=PosManagement.hawkerUpdate()[pri:101, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="hawkerUpdatePopUp()[pri:102, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:38 IST" name="hawkerUpdatePopUp" finished-at="2024-02-01T15:05:42 IST" duration-ms="4025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hawkerUpdatePopUp -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:42 IST" name="getResult" finished-at="2024-02-01T15:05:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hawkerUpdatePopUp status=SUCCESS method=PosManagement.hawkerUpdatePopUp()[pri:102, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="hawkerUpdateStatus()[pri:103, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:42 IST" name="hawkerUpdateStatus" finished-at="2024-02-01T15:05:45 IST" duration-ms="3225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hawkerUpdateStatus -->
        <test-method signature="deleteHawker()[pri:104, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:45 IST" name="deleteHawker" finished-at="2024-02-01T15:05:46 IST" duration-ms="1224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteHawker -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:45 IST" name="getResult" finished-at="2024-02-01T15:05:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hawkerUpdateStatus status=SUCCESS method=PosManagement.hawkerUpdateStatus()[pri:103, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:46 IST" name="getResult" finished-at="2024-02-01T15:05:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteHawker status=SUCCESS method=PosManagement.deleteHawker()[pri:104, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="hawkerDeletePopUp()[pri:105, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:46 IST" name="hawkerDeletePopUp" finished-at="2024-02-01T15:05:49 IST" duration-ms="3026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hawkerDeletePopUp -->
        <test-method signature="hawkerDeleteStatus()[pri:106, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:49 IST" name="hawkerDeleteStatus" finished-at="2024-02-01T15:05:51 IST" duration-ms="2229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hawkerDeleteStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:49 IST" name="getResult" finished-at="2024-02-01T15:05:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hawkerDeletePopUp status=SUCCESS method=PosManagement.hawkerDeletePopUp()[pri:105, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyAdvertisementTab()[pri:107, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:51 IST" name="verifyAdvertisementTab" finished-at="2024-02-01T15:05:55 IST" duration-ms="3221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdvertisementTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:51 IST" name="getResult" finished-at="2024-02-01T15:05:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hawkerDeleteStatus status=SUCCESS method=PosManagement.hawkerDeleteStatus()[pri:106, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:55 IST" name="getResult" finished-at="2024-02-01T15:05:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAdvertisementTab status=SUCCESS method=PosManagement.verifyAdvertisementTab()[pri:107, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="advertisementTab()[pri:108, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:55 IST" name="advertisementTab" finished-at="2024-02-01T15:05:55 IST" duration-ms="240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- advertisementTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:55 IST" name="getResult" finished-at="2024-02-01T15:05:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=advertisementTab status=SUCCESS method=PosManagement.advertisementTab()[pri:108, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickAddAdvertisementButton()[pri:109, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:55 IST" name="clickAddAdvertisementButton" finished-at="2024-02-01T15:05:57 IST" duration-ms="2237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAddAdvertisementButton -->
        <test-method signature="sendKeysToFieldsAdvertTypeField()[pri:110, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:57 IST" name="sendKeysToFieldsAdvertTypeField" finished-at="2024-02-01T15:05:59 IST" duration-ms="2034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendKeysToFieldsAdvertTypeField -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:57 IST" name="getResult" finished-at="2024-02-01T15:05:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAddAdvertisementButton status=SUCCESS method=PosManagement.clickAddAdvertisementButton()[pri:109, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:59 IST" name="getResult" finished-at="2024-02-01T15:05:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sendKeysToFieldsAdvertTypeField status=SUCCESS method=PosManagement.sendKeysToFieldsAdvertTypeField()[pri:110, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="sendKeysInAdvertSubTypeField()[pri:111, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:05:59 IST" name="sendKeysInAdvertSubTypeField" finished-at="2024-02-01T15:06:01 IST" duration-ms="2034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendKeysInAdvertSubTypeField -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:01 IST" name="getResult" finished-at="2024-02-01T15:06:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sendKeysInAdvertSubTypeField status=SUCCESS method=PosManagement.sendKeysInAdvertSubTypeField()[pri:111, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="sendKeysTophoneNumberField()[pri:112, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:01 IST" name="sendKeysTophoneNumberField" finished-at="2024-02-01T15:06:03 IST" duration-ms="2021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendKeysTophoneNumberField -->
        <test-method signature="sendKeysToaddressField()[pri:113, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:03 IST" name="sendKeysToaddressField" finished-at="2024-02-01T15:06:05 IST" duration-ms="2018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendKeysToaddressField -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:03 IST" name="getResult" finished-at="2024-02-01T15:06:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sendKeysTophoneNumberField status=SUCCESS method=PosManagement.sendKeysTophoneNumberField()[pri:112, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="advertiseSendKeysStartDateTime()[pri:114, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:05 IST" name="advertiseSendKeysStartDateTime" finished-at="2024-02-01T15:06:08 IST" duration-ms="2386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- advertiseSendKeysStartDateTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:05 IST" name="getResult" finished-at="2024-02-01T15:06:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sendKeysToaddressField status=SUCCESS method=PosManagement.sendKeysToaddressField()[pri:113, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:08 IST" name="getResult" finished-at="2024-02-01T15:06:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=advertiseSendKeysStartDateTime status=SUCCESS method=PosManagement.advertiseSendKeysStartDateTime()[pri:114, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="advertiseSendKeysEndDateTime()[pri:115, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:08 IST" name="advertiseSendKeysEndDateTime" finished-at="2024-02-01T15:06:10 IST" duration-ms="2400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- advertiseSendKeysEndDateTime -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:10 IST" name="getResult" finished-at="2024-02-01T15:06:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=advertiseSendKeysEndDateTime status=SUCCESS method=PosManagement.advertiseSendKeysEndDateTime()[pri:115, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="advertiseSendKeysCharges()[pri:116, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:10 IST" name="advertiseSendKeysCharges" finished-at="2024-02-01T15:06:12 IST" duration-ms="2026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- advertiseSendKeysCharges -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:12 IST" name="getResult" finished-at="2024-02-01T15:06:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=advertiseSendKeysCharges status=SUCCESS method=PosManagement.advertiseSendKeysCharges()[pri:116, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addAdvertiseButton()[pri:117, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:12 IST" name="addAdvertiseButton" finished-at="2024-02-01T15:06:15 IST" duration-ms="3246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAdvertiseButton -->
        <test-method signature="advertiseAddPopUp()[pri:118, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:15 IST" name="advertiseAddPopUp" finished-at="2024-02-01T15:06:17 IST" duration-ms="2022" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- advertiseAddPopUp -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:15 IST" name="getResult" finished-at="2024-02-01T15:06:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addAdvertiseButton status=SUCCESS method=PosManagement.addAdvertiseButton()[pri:117, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="advertiseAddStatus()[pri:119, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:17 IST" name="advertiseAddStatus" finished-at="2024-02-01T15:06:19 IST" duration-ms="1220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- advertiseAddStatus -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:17 IST" name="getResult" finished-at="2024-02-01T15:06:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=advertiseAddPopUp status=SUCCESS method=PosManagement.advertiseAddPopUp()[pri:118, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="performAdvertiseSearch()[pri:120, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:19 IST" name="performAdvertiseSearch" finished-at="2024-02-01T15:06:22 IST" duration-ms="3067" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performAdvertiseSearch -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:19 IST" name="getResult" finished-at="2024-02-01T15:06:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=advertiseAddStatus status=SUCCESS method=PosManagement.advertiseAddStatus()[pri:119, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:22 IST" name="getResult" finished-at="2024-02-01T15:06:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=performAdvertiseSearch status=SUCCESS method=PosManagement.performAdvertiseSearch()[pri:120, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:121, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:22 IST" name="logout" finished-at="2024-02-01T15:06:27 IST" duration-ms="5281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:27 IST" name="tearDown" finished-at="2024-02-01T15:06:27 IST" duration-ms="443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PosManagement@72e5a8e]" started-at="2024-02-01T15:06:27 IST" name="getResult" finished-at="2024-02-01T15:06:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=PosManagement.logout()[pri:121, instance:com.selenium.PosManagement@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.selenium.PosManagement -->
    </test> <!-- PosManagement -->
    <test started-at="2024-02-01T15:06:27 IST" name="PaymentManagement" finished-at="2024-02-01T15:09:53 IST" duration-ms="205385">
      <class name="com.selenium.PaymentManagement">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:06:27 IST" name="setUp" finished-at="2024-02-01T15:06:30 IST" duration-ms="2371" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:06:30 IST" name="login" finished-at="2024-02-01T15:06:36 IST" duration-ms="5993" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:06:36 IST" name="getResult" finished-at="2024-02-01T15:06:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=PaymentManagement.login()[pri:1, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDashboard()[pri:2, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:06:36 IST" name="revenueDashboard" finished-at="2024-02-01T15:06:41 IST" duration-ms="5317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboard -->
        <test-method signature="paymentMgmtPage()[pri:3, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:06:41 IST" name="paymentMgmtPage" finished-at="2024-02-01T15:06:48 IST" duration-ms="6493" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paymentMgmtPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:06:41 IST" name="getResult" finished-at="2024-02-01T15:06:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboard status=SUCCESS method=PaymentManagement.revenueDashboard()[pri:2, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:06:48 IST" name="getResult" finished-at="2024-02-01T15:06:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paymentMgmtPage status=SUCCESS method=PaymentManagement.paymentMgmtPage()[pri:3, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectCreatedPageSite()[pri:4, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:06:48 IST" name="selectCreatedPageSite" finished-at="2024-02-01T15:06:50 IST" duration-ms="2007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCreatedPageSite -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:06:50 IST" name="getResult" finished-at="2024-02-01T15:06:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCreatedPageSite status=SUCCESS method=PaymentManagement.selectCreatedPageSite()[pri:4, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectStartDate()[pri:5, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:06:50 IST" name="selectStartDate" finished-at="2024-02-01T15:06:53 IST" duration-ms="3024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStartDate -->
        <test-method signature="selectEndDate()[pri:6, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:06:53 IST" name="selectEndDate" finished-at="2024-02-01T15:06:56 IST" duration-ms="3038" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectEndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:06:53 IST" name="getResult" finished-at="2024-02-01T15:06:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStartDate status=SUCCESS method=PaymentManagement.selectStartDate()[pri:5, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:06:56 IST" name="getResult" finished-at="2024-02-01T15:06:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectEndDate status=SUCCESS method=PaymentManagement.selectEndDate()[pri:6, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectEntryType()[pri:7, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:06:56 IST" name="selectEntryType" finished-at="2024-02-01T15:06:59 IST" duration-ms="3365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectEntryType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:06:59 IST" name="getResult" finished-at="2024-02-01T15:06:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectEntryType status=SUCCESS method=PaymentManagement.selectEntryType()[pri:7, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectTransactionEntry()[pri:8, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:06:59 IST" name="selectTransactionEntry" finished-at="2024-02-01T15:07:09 IST" duration-ms="10006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTransactionEntry -->
        <test-method signature="verifyAutoFillFields()[pri:9, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:09 IST" name="verifyAutoFillFields" finished-at="2024-02-01T15:07:09 IST" duration-ms="142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAutoFillFields -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:09 IST" name="getResult" finished-at="2024-02-01T15:07:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectTransactionEntry status=SUCCESS method=PaymentManagement.selectTransactionEntry()[pri:8, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="select()[pri:10, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:09 IST" name="select" finished-at="2024-02-01T15:07:12 IST" duration-ms="3045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- select -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:09 IST" name="getResult" finished-at="2024-02-01T15:07:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAutoFillFields status=SUCCESS method=PaymentManagement.verifyAutoFillFields()[pri:9, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:12 IST" name="getResult" finished-at="2024-02-01T15:07:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=select status=SUCCESS method=PaymentManagement.select()[pri:10, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="enterVehicleNumber()[pri:11, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:12 IST" name="enterVehicleNumber" finished-at="2024-02-01T15:07:13 IST" duration-ms="1020" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:13 IST" name="getResult" finished-at="2024-02-01T15:07:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterVehicleNumber status=SUCCESS method=PaymentManagement.enterVehicleNumber()[pri:11, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectVehicleType()[pri:12, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:13 IST" name="selectVehicleType" finished-at="2024-02-01T15:07:16 IST" duration-ms="3049" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectVehicleType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:16 IST" name="getResult" finished-at="2024-02-01T15:07:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectVehicleType status=SUCCESS method=PaymentManagement.selectVehicleType()[pri:12, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="enterEmail()[pri:13, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:16 IST" name="enterEmail" finished-at="2024-02-01T15:07:16 IST" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterEmail -->
        <test-method signature="discountAmount()[pri:14, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:16 IST" name="discountAmount" finished-at="2024-02-01T15:07:16 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- discountAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:16 IST" name="getResult" finished-at="2024-02-01T15:07:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterEmail status=SUCCESS method=PaymentManagement.enterEmail()[pri:13, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:16 IST" name="getResult" finished-at="2024-02-01T15:07:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=discountAmount status=SUCCESS method=PaymentManagement.discountAmount()[pri:14, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectPaymentType()[pri:15, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:16 IST" name="selectPaymentType" finished-at="2024-02-01T15:07:16 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPaymentType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:16 IST" name="getResult" finished-at="2024-02-01T15:07:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectPaymentType status=SUCCESS method=PaymentManagement.selectPaymentType()[pri:15, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectStatusType()[pri:16, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:16 IST" name="selectStatusType" finished-at="2024-02-01T15:07:16 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStatusType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:16 IST" name="getResult" finished-at="2024-02-01T15:07:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStatusType status=SUCCESS method=PaymentManagement.selectStatusType()[pri:16, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addPaymentBtn()[pri:17, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:16 IST" name="addPaymentBtn" finished-at="2024-02-01T15:07:21 IST" duration-ms="5134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPaymentBtn -->
        <test-method signature="getEntryTransDetails()[pri:17, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:21 IST" name="getEntryTransDetails" finished-at="2024-02-01T15:07:27 IST" duration-ms="5285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEntryTransDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:21 IST" name="getResult" finished-at="2024-02-01T15:07:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addPaymentBtn status=SUCCESS method=PaymentManagement.addPaymentBtn()[pri:17, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="extractPopupText()[pri:18, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:27 IST" name="extractPopupText" finished-at="2024-02-01T15:07:29 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractPopupText -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:27 IST" name="getResult" finished-at="2024-02-01T15:07:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEntryTransDetails status=SUCCESS method=PaymentManagement.getEntryTransDetails()[pri:17, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:29 IST" name="getResult" finished-at="2024-02-01T15:07:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractPopupText status=SUCCESS method=PaymentManagement.extractPopupText()[pri:18, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusOK()[pri:19, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:29 IST" name="statusOK" finished-at="2024-02-01T15:07:31 IST" duration-ms="2002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusOK -->
        <test-method signature="selectStartDateExit()[pri:20, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:31 IST" name="selectStartDateExit" finished-at="2024-02-01T15:07:37 IST" duration-ms="6495" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStartDateExit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:31 IST" name="getResult" finished-at="2024-02-01T15:07:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusOK status=SUCCESS method=PaymentManagement.statusOK()[pri:19, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:37 IST" name="getResult" finished-at="2024-02-01T15:07:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStartDateExit status=SUCCESS method=PaymentManagement.selectStartDateExit()[pri:20, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectEndDateExit()[pri:21, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:37 IST" name="selectEndDateExit" finished-at="2024-02-01T15:07:40 IST" duration-ms="3034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectEndDateExit -->
        <test-method signature="selectExitType()[pri:22, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:40 IST" name="selectExitType" finished-at="2024-02-01T15:07:44 IST" duration-ms="3344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectExitType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:40 IST" name="getResult" finished-at="2024-02-01T15:07:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectEndDateExit status=SUCCESS method=PaymentManagement.selectEndDateExit()[pri:21, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:44 IST" name="getResult" finished-at="2024-02-01T15:07:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectExitType status=SUCCESS method=PaymentManagement.selectExitType()[pri:22, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectTransactionExit()[pri:23, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:44 IST" name="selectTransactionExit" finished-at="2024-02-01T15:07:44 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTransactionExit -->
        <test-method signature="selectTransactionTypeExit()[pri:24, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:44 IST" name="selectTransactionTypeExit" finished-at="2024-02-01T15:07:44 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTransactionTypeExit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:44 IST" name="getResult" finished-at="2024-02-01T15:07:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectTransactionExit status=SUCCESS method=PaymentManagement.selectTransactionExit()[pri:23, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="enterVehicleNumberExit()[pri:25, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:44 IST" name="enterVehicleNumberExit" finished-at="2024-02-01T15:07:45 IST" duration-ms="1040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterVehicleNumberExit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:44 IST" name="getResult" finished-at="2024-02-01T15:07:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectTransactionTypeExit status=SUCCESS method=PaymentManagement.selectTransactionTypeExit()[pri:24, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectVehicleTypeExit()[pri:26, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:45 IST" name="selectVehicleTypeExit" finished-at="2024-02-01T15:07:48 IST" duration-ms="3023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectVehicleTypeExit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:45 IST" name="getResult" finished-at="2024-02-01T15:07:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterVehicleNumberExit status=SUCCESS method=PaymentManagement.enterVehicleNumberExit()[pri:25, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="enterEmailExit()[pri:27, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:48 IST" name="enterEmailExit" finished-at="2024-02-01T15:07:48 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterEmailExit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:48 IST" name="getResult" finished-at="2024-02-01T15:07:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectVehicleTypeExit status=SUCCESS method=PaymentManagement.selectVehicleTypeExit()[pri:26, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="discountAmountExit()[pri:28, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:48 IST" name="discountAmountExit" finished-at="2024-02-01T15:07:48 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- discountAmountExit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:48 IST" name="getResult" finished-at="2024-02-01T15:07:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterEmailExit status=SUCCESS method=PaymentManagement.enterEmailExit()[pri:27, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectPaymentTypeExit()[pri:29, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:48 IST" name="selectPaymentTypeExit" finished-at="2024-02-01T15:07:48 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPaymentTypeExit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:48 IST" name="getResult" finished-at="2024-02-01T15:07:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=discountAmountExit status=SUCCESS method=PaymentManagement.discountAmountExit()[pri:28, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectStatusTypeExit()[pri:30, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:48 IST" name="selectStatusTypeExit" finished-at="2024-02-01T15:07:48 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStatusTypeExit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:48 IST" name="getResult" finished-at="2024-02-01T15:07:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectPaymentTypeExit status=SUCCESS method=PaymentManagement.selectPaymentTypeExit()[pri:29, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getExitTransDetails()[pri:31, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:48 IST" name="getExitTransDetails" finished-at="2024-02-01T15:07:53 IST" duration-ms="5259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getExitTransDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:48 IST" name="getResult" finished-at="2024-02-01T15:07:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStatusTypeExit status=SUCCESS method=PaymentManagement.selectStatusTypeExit()[pri:30, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addPaymentBtnExit()[pri:32, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:53 IST" name="addPaymentBtnExit" finished-at="2024-02-01T15:07:58 IST" duration-ms="5169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPaymentBtnExit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:53 IST" name="getResult" finished-at="2024-02-01T15:07:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getExitTransDetails status=SUCCESS method=PaymentManagement.getExitTransDetails()[pri:31, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:58 IST" name="getResult" finished-at="2024-02-01T15:07:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addPaymentBtnExit status=SUCCESS method=PaymentManagement.addPaymentBtnExit()[pri:32, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="extractPopupTextExit()[pri:33, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:07:58 IST" name="extractPopupTextExit" finished-at="2024-02-01T15:08:00 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractPopupTextExit -->
        <test-method signature="statusOKExit()[pri:34, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:00 IST" name="statusOKExit" finished-at="2024-02-01T15:08:02 IST" duration-ms="2007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusOKExit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:00 IST" name="getResult" finished-at="2024-02-01T15:08:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractPopupTextExit status=SUCCESS method=PaymentManagement.extractPopupTextExit()[pri:33, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:02 IST" name="getResult" finished-at="2024-02-01T15:08:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusOKExit status=SUCCESS method=PaymentManagement.statusOKExit()[pri:34, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectStartDatePass()[pri:35, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:02 IST" name="selectStartDatePass" finished-at="2024-02-01T15:08:11 IST" duration-ms="8330" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStartDatePass -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:11 IST" name="getResult" finished-at="2024-02-01T15:08:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStartDatePass status=SUCCESS method=PaymentManagement.selectStartDatePass()[pri:35, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectEndDatePass()[pri:36, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:11 IST" name="selectEndDatePass" finished-at="2024-02-01T15:08:14 IST" duration-ms="3038" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectEndDatePass -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:14 IST" name="getResult" finished-at="2024-02-01T15:08:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectEndDatePass status=SUCCESS method=PaymentManagement.selectEndDatePass()[pri:36, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectPassType()[pri:37, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:14 IST" name="selectPassType" finished-at="2024-02-01T15:08:17 IST" duration-ms="3337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPassType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:17 IST" name="getResult" finished-at="2024-02-01T15:08:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectPassType status=SUCCESS method=PaymentManagement.selectPassType()[pri:37, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectPassTrans()[pri:38, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:17 IST" name="selectPassTrans" finished-at="2024-02-01T15:08:17 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPassTrans -->
        <test-method signature="selectPassTransType()[pri:39, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:17 IST" name="selectPassTransType" finished-at="2024-02-01T15:08:17 IST" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPassTransType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:17 IST" name="getResult" finished-at="2024-02-01T15:08:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectPassTrans status=SUCCESS method=PaymentManagement.selectPassTrans()[pri:38, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:17 IST" name="getResult" finished-at="2024-02-01T15:08:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectPassTransType status=SUCCESS method=PaymentManagement.selectPassTransType()[pri:39, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="enterPassVehicleNumber()[pri:40, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:17 IST" name="enterPassVehicleNumber" finished-at="2024-02-01T15:08:18 IST" duration-ms="1041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterPassVehicleNumber -->
        <test-method signature="selectPassVehicleType()[pri:41, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:18 IST" name="selectPassVehicleType" finished-at="2024-02-01T15:08:21 IST" duration-ms="3023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPassVehicleType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:18 IST" name="getResult" finished-at="2024-02-01T15:08:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterPassVehicleNumber status=SUCCESS method=PaymentManagement.enterPassVehicleNumber()[pri:40, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:21 IST" name="getResult" finished-at="2024-02-01T15:08:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectPassVehicleType status=SUCCESS method=PaymentManagement.selectPassVehicleType()[pri:41, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="enterPassEmail()[pri:42, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:21 IST" name="enterPassEmail" finished-at="2024-02-01T15:08:21 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterPassEmail -->
        <test-method signature="discountAmountPass()[pri:43, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:21 IST" name="discountAmountPass" finished-at="2024-02-01T15:08:21 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- discountAmountPass -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:21 IST" name="getResult" finished-at="2024-02-01T15:08:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterPassEmail status=SUCCESS method=PaymentManagement.enterPassEmail()[pri:42, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectPaymentTypePass()[pri:44, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:21 IST" name="selectPaymentTypePass" finished-at="2024-02-01T15:08:21 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPaymentTypePass -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:21 IST" name="getResult" finished-at="2024-02-01T15:08:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=discountAmountPass status=SUCCESS method=PaymentManagement.discountAmountPass()[pri:43, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectStatusTypePass()[pri:45, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:21 IST" name="selectStatusTypePass" finished-at="2024-02-01T15:08:21 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStatusTypePass -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:21 IST" name="getResult" finished-at="2024-02-01T15:08:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectPaymentTypePass status=SUCCESS method=PaymentManagement.selectPaymentTypePass()[pri:44, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:21 IST" name="getResult" finished-at="2024-02-01T15:08:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStatusTypePass status=SUCCESS method=PaymentManagement.selectStatusTypePass()[pri:45, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getPassTransDetails()[pri:46, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:21 IST" name="getPassTransDetails" finished-at="2024-02-01T15:08:26 IST" duration-ms="5187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPassTransDetails -->
        <test-method signature="addPaymentBtnPass()[pri:47, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:26 IST" name="addPaymentBtnPass" finished-at="2024-02-01T15:08:31 IST" duration-ms="5135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPaymentBtnPass -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:26 IST" name="getResult" finished-at="2024-02-01T15:08:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getPassTransDetails status=SUCCESS method=PaymentManagement.getPassTransDetails()[pri:46, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="extractPopupTextPass()[pri:48, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:31 IST" name="extractPopupTextPass" finished-at="2024-02-01T15:08:33 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractPopupTextPass -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:31 IST" name="getResult" finished-at="2024-02-01T15:08:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addPaymentBtnPass status=SUCCESS method=PaymentManagement.addPaymentBtnPass()[pri:47, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:33 IST" name="getResult" finished-at="2024-02-01T15:08:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractPopupTextPass status=SUCCESS method=PaymentManagement.extractPopupTextPass()[pri:48, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusOKPass()[pri:49, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:33 IST" name="statusOKPass" finished-at="2024-02-01T15:08:36 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusOKPass -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:36 IST" name="getResult" finished-at="2024-02-01T15:08:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusOKPass status=SUCCESS method=PaymentManagement.statusOKPass()[pri:49, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectStartDateReserve()[pri:50, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:36 IST" name="selectStartDateReserve" finished-at="2024-02-01T15:08:42 IST" duration-ms="6143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStartDateReserve -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:42 IST" name="getResult" finished-at="2024-02-01T15:08:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStartDateReserve status=SUCCESS method=PaymentManagement.selectStartDateReserve()[pri:50, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectEndDateReserve()[pri:51, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:42 IST" name="selectEndDateReserve" finished-at="2024-02-01T15:08:45 IST" duration-ms="3017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectEndDateReserve -->
        <test-method signature="selectReserveType()[pri:52, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:45 IST" name="selectReserveType" finished-at="2024-02-01T15:08:48 IST" duration-ms="3314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectReserveType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:45 IST" name="getResult" finished-at="2024-02-01T15:08:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectEndDateReserve status=SUCCESS method=PaymentManagement.selectEndDateReserve()[pri:51, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:48 IST" name="getResult" finished-at="2024-02-01T15:08:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectReserveType status=SUCCESS method=PaymentManagement.selectReserveType()[pri:52, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="tableNextPage()[pri:53, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:48 IST" name="tableNextPage" finished-at="2024-02-01T15:08:51 IST" duration-ms="3265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableNextPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:51 IST" name="getResult" finished-at="2024-02-01T15:08:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tableNextPage status=SUCCESS method=PaymentManagement.tableNextPage()[pri:53, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectReserveTrans()[pri:54, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:51 IST" name="selectReserveTrans" finished-at="2024-02-01T15:08:56 IST" duration-ms="5008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectReserveTrans -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:56 IST" name="getResult" finished-at="2024-02-01T15:08:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectReserveTrans status=SUCCESS method=PaymentManagement.selectReserveTrans()[pri:54, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectReserveTransType()[pri:55, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:56 IST" name="selectReserveTransType" finished-at="2024-02-01T15:08:56 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectReserveTransType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:56 IST" name="getResult" finished-at="2024-02-01T15:08:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectReserveTransType status=SUCCESS method=PaymentManagement.selectReserveTransType()[pri:55, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="enterReserveVehicleNumber()[pri:56, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:56 IST" name="enterReserveVehicleNumber" finished-at="2024-02-01T15:08:57 IST" duration-ms="1021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterReserveVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:57 IST" name="getResult" finished-at="2024-02-01T15:08:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterReserveVehicleNumber status=SUCCESS method=PaymentManagement.enterReserveVehicleNumber()[pri:56, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectReserveVehicleType()[pri:57, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:08:57 IST" name="selectReserveVehicleType" finished-at="2024-02-01T15:09:00 IST" duration-ms="3043" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectReserveVehicleType -->
        <test-method signature="enterReserveEmail()[pri:58, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:00 IST" name="enterReserveEmail" finished-at="2024-02-01T15:09:00 IST" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterReserveEmail -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:00 IST" name="getResult" finished-at="2024-02-01T15:09:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectReserveVehicleType status=SUCCESS method=PaymentManagement.selectReserveVehicleType()[pri:57, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="discountAmountReserve()[pri:59, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:00 IST" name="discountAmountReserve" finished-at="2024-02-01T15:09:00 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- discountAmountReserve -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:00 IST" name="getResult" finished-at="2024-02-01T15:09:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterReserveEmail status=SUCCESS method=PaymentManagement.enterReserveEmail()[pri:58, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectPaymentTypeReserve()[pri:60, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:00 IST" name="selectPaymentTypeReserve" finished-at="2024-02-01T15:09:00 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPaymentTypeReserve -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:00 IST" name="getResult" finished-at="2024-02-01T15:09:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=discountAmountReserve status=SUCCESS method=PaymentManagement.discountAmountReserve()[pri:59, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectStatusTypeReserve()[pri:61, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:00 IST" name="selectStatusTypeReserve" finished-at="2024-02-01T15:09:00 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStatusTypeReserve -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:00 IST" name="getResult" finished-at="2024-02-01T15:09:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectPaymentTypeReserve status=SUCCESS method=PaymentManagement.selectPaymentTypeReserve()[pri:60, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getReserveTransDetails()[pri:62, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:00 IST" name="getReserveTransDetails" finished-at="2024-02-01T15:09:06 IST" duration-ms="5147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReserveTransDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:00 IST" name="getResult" finished-at="2024-02-01T15:09:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStatusTypeReserve status=SUCCESS method=PaymentManagement.selectStatusTypeReserve()[pri:61, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:06 IST" name="getResult" finished-at="2024-02-01T15:09:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getReserveTransDetails status=SUCCESS method=PaymentManagement.getReserveTransDetails()[pri:62, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addPaymentBtnReserve()[pri:63, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:06 IST" name="addPaymentBtnReserve" finished-at="2024-02-01T15:09:11 IST" duration-ms="5076" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPaymentBtnReserve -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:11 IST" name="getResult" finished-at="2024-02-01T15:09:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addPaymentBtnReserve status=SUCCESS method=PaymentManagement.addPaymentBtnReserve()[pri:63, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="extractPopupTextReserve()[pri:64, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:11 IST" name="extractPopupTextReserve" finished-at="2024-02-01T15:09:13 IST" duration-ms="2005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractPopupTextReserve -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:13 IST" name="getResult" finished-at="2024-02-01T15:09:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractPopupTextReserve status=SUCCESS method=PaymentManagement.extractPopupTextReserve()[pri:64, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusOKReserve()[pri:65, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:13 IST" name="statusOKReserve" finished-at="2024-02-01T15:09:15 IST" duration-ms="2008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusOKReserve -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:15 IST" name="getResult" finished-at="2024-02-01T15:09:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusOKReserve status=SUCCESS method=PaymentManagement.statusOKReserve()[pri:65, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectSite()[pri:66, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:15 IST" name="selectSite" finished-at="2024-02-01T15:09:16 IST" duration-ms="1520" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectSite -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:16 IST" name="getResult" finished-at="2024-02-01T15:09:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectSite status=SUCCESS method=PaymentManagement.selectSite()[pri:66, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="redirectManagePage()[pri:67, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:16 IST" name="redirectManagePage" finished-at="2024-02-01T15:09:19 IST" duration-ms="3028" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectManagePage -->
        <test-method signature="manageDatesEnabled()[pri:68, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:19 IST" name="manageDatesEnabled" finished-at="2024-02-01T15:09:22 IST" duration-ms="3007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- manageDatesEnabled -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:19 IST" name="getResult" finished-at="2024-02-01T15:09:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectManagePage status=SUCCESS method=PaymentManagement.redirectManagePage()[pri:67, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:22 IST" name="getResult" finished-at="2024-02-01T15:09:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=manageDatesEnabled status=SUCCESS method=PaymentManagement.manageDatesEnabled()[pri:68, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectManageStartDate()[pri:69, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:22 IST" name="selectManageStartDate" finished-at="2024-02-01T15:09:23 IST" duration-ms="1006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectManageStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:23 IST" name="getResult" finished-at="2024-02-01T15:09:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectManageStartDate status=SUCCESS method=PaymentManagement.selectManageStartDate()[pri:69, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectManageEndDate()[pri:70, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:23 IST" name="selectManageEndDate" finished-at="2024-02-01T15:09:23 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectManageEndDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:23 IST" name="getResult" finished-at="2024-02-01T15:09:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectManageEndDate status=SUCCESS method=PaymentManagement.selectManageEndDate()[pri:70, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectMPOSdeviceType()[pri:71, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:23 IST" name="selectMPOSdeviceType" finished-at="2024-02-01T15:09:26 IST" duration-ms="3005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMPOSdeviceType -->
        <test-method signature="selectAndroiddeviceType()[pri:72, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:26 IST" name="selectAndroiddeviceType" finished-at="2024-02-01T15:09:29 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAndroiddeviceType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:26 IST" name="getResult" finished-at="2024-02-01T15:09:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMPOSdeviceType status=SUCCESS method=PaymentManagement.selectMPOSdeviceType()[pri:71, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:29 IST" name="getResult" finished-at="2024-02-01T15:09:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAndroiddeviceType status=SUCCESS method=PaymentManagement.selectAndroiddeviceType()[pri:72, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectIOSdeviceType()[pri:73, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:29 IST" name="selectIOSdeviceType" finished-at="2024-02-01T15:09:32 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectIOSdeviceType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:32 IST" name="getResult" finished-at="2024-02-01T15:09:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectIOSdeviceType status=SUCCESS method=PaymentManagement.selectIOSdeviceType()[pri:73, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectMobileMposdeviceType()[pri:74, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:32 IST" name="selectMobileMposdeviceType" finished-at="2024-02-01T15:09:35 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMobileMposdeviceType -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:35 IST" name="getResult" finished-at="2024-02-01T15:09:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMobileMposdeviceType status=SUCCESS method=PaymentManagement.selectMobileMposdeviceType()[pri:74, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectIOSdeviceTypeAction()[pri:75, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:35 IST" name="selectIOSdeviceTypeAction" finished-at="2024-02-01T15:09:38 IST" duration-ms="3002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectIOSdeviceTypeAction -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:38 IST" name="getResult" finished-at="2024-02-01T15:09:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectIOSdeviceTypeAction status=SUCCESS method=PaymentManagement.selectIOSdeviceTypeAction()[pri:75, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="manageViewBtn()[pri:76, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:38 IST" name="manageViewBtn" finished-at="2024-02-01T15:09:41 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- manageViewBtn -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:41 IST" name="getResult" finished-at="2024-02-01T15:09:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=manageViewBtn status=SUCCESS method=PaymentManagement.manageViewBtn()[pri:76, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getDataMPOS()[pri:77, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:41 IST" name="getDataMPOS" finished-at="2024-02-01T15:09:41 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDataMPOS -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:41 IST" name="getResult" finished-at="2024-02-01T15:09:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getDataMPOS status=SUCCESS method=PaymentManagement.getDataMPOS()[pri:77, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="performPaymentActions()[pri:78, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:41 IST" name="performPaymentActions" finished-at="2024-02-01T15:09:41 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performPaymentActions -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:41 IST" name="getResult" finished-at="2024-02-01T15:09:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=performPaymentActions status=SUCCESS method=PaymentManagement.performPaymentActions()[pri:78, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="paymentPopUpClose()[pri:79, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:41 IST" name="paymentPopUpClose" finished-at="2024-02-01T15:09:43 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paymentPopUpClose -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:43 IST" name="getResult" finished-at="2024-02-01T15:09:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paymentPopUpClose status=SUCCESS method=PaymentManagement.paymentPopUpClose()[pri:79, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="deleteRecord()[pri:80, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:43 IST" name="deleteRecord" finished-at="2024-02-01T15:09:43 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteRecord -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:43 IST" name="getResult" finished-at="2024-02-01T15:09:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteRecord status=SUCCESS method=PaymentManagement.deleteRecord()[pri:80, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectOptionFromDropdown()[pri:81, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:43 IST" name="selectOptionFromDropdown" finished-at="2024-02-01T15:09:46 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOptionFromDropdown -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:46 IST" name="getResult" finished-at="2024-02-01T15:09:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectOptionFromDropdown status=SUCCESS method=PaymentManagement.selectOptionFromDropdown()[pri:81, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="performSearch()[pri:82, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:46 IST" name="performSearch" finished-at="2024-02-01T15:09:49 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performSearch -->
        <test-method signature="performSearchValidate()[pri:83, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:49 IST" name="performSearchValidate" finished-at="2024-02-01T15:09:52 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performSearchValidate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:49 IST" name="getResult" finished-at="2024-02-01T15:09:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=performSearch status=SUCCESS method=PaymentManagement.performSearch()[pri:82, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:52 IST" name="getResult" finished-at="2024-02-01T15:09:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=performSearchValidate status=SUCCESS method=PaymentManagement.performSearchValidate()[pri:83, instance:com.selenium.PaymentManagement@740cae06] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.PaymentManagement@740cae06]" started-at="2024-02-01T15:09:52 IST" name="tearDown" finished-at="2024-02-01T15:09:53 IST" duration-ms="432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.PaymentManagement -->
    </test> <!-- PaymentManagement -->
    <test started-at="2024-02-01T15:09:53 IST" name="Roles" finished-at="2024-02-01T15:11:28 IST" duration-ms="95104">
      <class name="com.selenium.Roles">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:09:53 IST" name="setUp" finished-at="2024-02-01T15:09:55 IST" duration-ms="2090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:09:55 IST" name="login" finished-at="2024-02-01T15:10:02 IST" duration-ms="7338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:02 IST" name="getResult" finished-at="2024-02-01T15:10:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=Roles.login()[pri:1, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDashboard()[pri:2, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:02 IST" name="revenueDashboard" finished-at="2024-02-01T15:10:08 IST" duration-ms="5296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboard -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:08 IST" name="getResult" finished-at="2024-02-01T15:10:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboard status=SUCCESS method=Roles.revenueDashboard()[pri:2, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="userMgmtPage()[pri:3, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:08 IST" name="userMgmtPage" finished-at="2024-02-01T15:10:11 IST" duration-ms="3013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userMgmtPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:11 IST" name="getResult" finished-at="2024-02-01T15:10:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userMgmtPage status=SUCCESS method=Roles.userMgmtPage()[pri:3, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickAddRoleBtn()[pri:4, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:11 IST" name="clickAddRoleBtn" finished-at="2024-02-01T15:10:16 IST" duration-ms="5007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAddRoleBtn -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:16 IST" name="getResult" finished-at="2024-02-01T15:10:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAddRoleBtn status=SUCCESS method=Roles.clickAddRoleBtn()[pri:4, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectAdminRole()[pri:5, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:16 IST" name="selectAdminRole" finished-at="2024-02-01T15:10:16 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAdminRole -->
        <test-method signature="verifyAutoFillForAdminRole()[pri:6, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:16 IST" name="verifyAutoFillForAdminRole" finished-at="2024-02-01T15:10:16 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAutoFillForAdminRole -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:16 IST" name="getResult" finished-at="2024-02-01T15:10:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAdminRole status=SUCCESS method=Roles.selectAdminRole()[pri:5, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickSaveButton()[pri:7, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:16 IST" name="clickSaveButton" finished-at="2024-02-01T15:10:16 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickSaveButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:16 IST" name="getResult" finished-at="2024-02-01T15:10:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAutoFillForAdminRole status=SUCCESS method=Roles.verifyAutoFillForAdminRole()[pri:6, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:16 IST" name="getResult" finished-at="2024-02-01T15:10:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickSaveButton status=SUCCESS method=Roles.clickSaveButton()[pri:7, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="extractPopupText()[pri:8, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:16 IST" name="extractPopupText" finished-at="2024-02-01T15:10:18 IST" duration-ms="2007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractPopupText -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:18 IST" name="getResult" finished-at="2024-02-01T15:10:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractPopupText status=SUCCESS method=Roles.extractPopupText()[pri:8, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusOK()[pri:9, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:18 IST" name="statusOK" finished-at="2024-02-01T15:10:20 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusOK -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:20 IST" name="getResult" finished-at="2024-02-01T15:10:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusOK status=SUCCESS method=Roles.statusOK()[pri:9, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addRolesPopUpClose()[pri:10, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:20 IST" name="addRolesPopUpClose" finished-at="2024-02-01T15:10:22 IST" duration-ms="2016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRolesPopUpClose -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:22 IST" name="getResult" finished-at="2024-02-01T15:10:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addRolesPopUpClose status=SUCCESS method=Roles.addRolesPopUpClose()[pri:10, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyAdminActions()[pri:11, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:22 IST" name="verifyAdminActions" finished-at="2024-02-01T15:10:22 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdminActions -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:22 IST" name="getResult" finished-at="2024-02-01T15:10:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAdminActions status=SUCCESS method=Roles.verifyAdminActions()[pri:11, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickCSVButton()[pri:12, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:22 IST" name="clickCSVButton" finished-at="2024-02-01T15:10:25 IST" duration-ms="3012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickCSVButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:25 IST" name="getResult" finished-at="2024-02-01T15:10:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickCSVButton status=SUCCESS method=Roles.clickCSVButton()[pri:12, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickPDFButton()[pri:13, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:25 IST" name="clickPDFButton" finished-at="2024-02-01T15:10:28 IST" duration-ms="3007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickPDFButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:28 IST" name="getResult" finished-at="2024-02-01T15:10:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickPDFButton status=SUCCESS method=Roles.clickPDFButton()[pri:13, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="performManagerRoleEdit()[pri:14, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:28 IST" name="performManagerRoleEdit" finished-at="2024-02-01T15:10:32 IST" duration-ms="4007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performManagerRoleEdit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:32 IST" name="getResult" finished-at="2024-02-01T15:10:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=performManagerRoleEdit status=SUCCESS method=Roles.performManagerRoleEdit()[pri:14, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectAccessTypeRead()[pri:15, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:32 IST" name="selectAccessTypeRead" finished-at="2024-02-01T15:10:32 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAccessTypeRead -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:32 IST" name="getResult" finished-at="2024-02-01T15:10:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAccessTypeRead status=SUCCESS method=Roles.selectAccessTypeRead()[pri:15, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getEditRoleDetails()[pri:16, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:32 IST" name="getEditRoleDetails" finished-at="2024-02-01T15:10:35 IST" duration-ms="3003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEditRoleDetails -->
        <test-method signature="checkUpdateButton()[pri:17, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:35 IST" name="checkUpdateButton" finished-at="2024-02-01T15:10:38 IST" duration-ms="3004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkUpdateButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:35 IST" name="getResult" finished-at="2024-02-01T15:10:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEditRoleDetails status=SUCCESS method=Roles.getEditRoleDetails()[pri:16, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="updateUser()[pri:18, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:38 IST" name="updateUser" finished-at="2024-02-01T15:10:40 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:38 IST" name="getResult" finished-at="2024-02-01T15:10:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkUpdateButton status=SUCCESS method=Roles.checkUpdateButton()[pri:17, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:40 IST" name="getResult" finished-at="2024-02-01T15:10:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateUser status=SUCCESS method=Roles.updateUser()[pri:18, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="updateStatusOK()[pri:19, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:40 IST" name="updateStatusOK" finished-at="2024-02-01T15:10:42 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateStatusOK -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:42 IST" name="getResult" finished-at="2024-02-01T15:10:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateStatusOK status=SUCCESS method=Roles.updateStatusOK()[pri:19, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="performManagerRoleDelete()[pri:20, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:42 IST" name="performManagerRoleDelete" finished-at="2024-02-01T15:10:47 IST" duration-ms="5006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performManagerRoleDelete -->
        <test-method signature="confirmDeleteAction()[pri:21, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:47 IST" name="confirmDeleteAction" finished-at="2024-02-01T15:10:47 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirmDeleteAction -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:47 IST" name="getResult" finished-at="2024-02-01T15:10:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=performManagerRoleDelete status=SUCCESS method=Roles.performManagerRoleDelete()[pri:20, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyManagerRoleDeletion()[pri:22, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:47 IST" name="verifyManagerRoleDeletion" finished-at="2024-02-01T15:10:47 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyManagerRoleDeletion -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:47 IST" name="getResult" finished-at="2024-02-01T15:10:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=confirmDeleteAction status=SUCCESS method=Roles.confirmDeleteAction()[pri:21, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:47 IST" name="getResult" finished-at="2024-02-01T15:10:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyManagerRoleDeletion status=SUCCESS method=Roles.verifyManagerRoleDeletion()[pri:22, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="tableNextPage()[pri:23, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:47 IST" name="tableNextPage" finished-at="2024-02-01T15:10:50 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableNextPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:50 IST" name="getResult" finished-at="2024-02-01T15:10:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tableNextPage status=SUCCESS method=Roles.tableNextPage()[pri:23, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickAddRoleBtnTwice()[pri:24, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:50 IST" name="clickAddRoleBtnTwice" finished-at="2024-02-01T15:10:55 IST" duration-ms="5005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAddRoleBtnTwice -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:55 IST" name="getResult" finished-at="2024-02-01T15:10:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAddRoleBtnTwice status=SUCCESS method=Roles.clickAddRoleBtnTwice()[pri:24, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyAutoFillForAttenderRole()[pri:25, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:55 IST" name="verifyAutoFillForAttenderRole" finished-at="2024-02-01T15:10:55 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAutoFillForAttenderRole -->
        <test-method signature="clickSaveButtonTwice()[pri:26, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:55 IST" name="clickSaveButtonTwice" finished-at="2024-02-01T15:10:55 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickSaveButtonTwice -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:55 IST" name="getResult" finished-at="2024-02-01T15:10:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAutoFillForAttenderRole status=SUCCESS method=Roles.verifyAutoFillForAttenderRole()[pri:25, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="extractPopupTextTwice()[pri:27, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:55 IST" name="extractPopupTextTwice" finished-at="2024-02-01T15:10:57 IST" duration-ms="2007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractPopupTextTwice -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:55 IST" name="getResult" finished-at="2024-02-01T15:10:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickSaveButtonTwice status=SUCCESS method=Roles.clickSaveButtonTwice()[pri:26, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:57 IST" name="getResult" finished-at="2024-02-01T15:10:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractPopupTextTwice status=SUCCESS method=Roles.extractPopupTextTwice()[pri:27, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusOKTwice()[pri:28, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:57 IST" name="statusOKTwice" finished-at="2024-02-01T15:10:59 IST" duration-ms="2003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusOKTwice -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:59 IST" name="getResult" finished-at="2024-02-01T15:10:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusOKTwice status=SUCCESS method=Roles.statusOKTwice()[pri:28, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addRolesPopUpCloseTwice()[pri:29, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:10:59 IST" name="addRolesPopUpCloseTwice" finished-at="2024-02-01T15:11:01 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRolesPopUpCloseTwice -->
        <test-method signature="performAttenderRoleEdit()[pri:30, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:01 IST" name="performAttenderRoleEdit" finished-at="2024-02-01T15:11:05 IST" duration-ms="4007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performAttenderRoleEdit -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:01 IST" name="getResult" finished-at="2024-02-01T15:11:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addRolesPopUpCloseTwice status=SUCCESS method=Roles.addRolesPopUpCloseTwice()[pri:29, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:05 IST" name="getResult" finished-at="2024-02-01T15:11:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=performAttenderRoleEdit status=SUCCESS method=Roles.performAttenderRoleEdit()[pri:30, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectAccessTypeAttenderRead()[pri:31, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:05 IST" name="selectAccessTypeAttenderRead" finished-at="2024-02-01T15:11:05 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAccessTypeAttenderRead -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:05 IST" name="getResult" finished-at="2024-02-01T15:11:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAccessTypeAttenderRead status=SUCCESS method=Roles.selectAccessTypeAttenderRead()[pri:31, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getEditAttenderRoleDetails()[pri:32, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:05 IST" name="getEditAttenderRoleDetails" finished-at="2024-02-01T15:11:08 IST" duration-ms="3012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEditAttenderRoleDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:08 IST" name="getResult" finished-at="2024-02-01T15:11:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEditAttenderRoleDetails status=SUCCESS method=Roles.getEditAttenderRoleDetails()[pri:32, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="checkAttenderUpdateButton()[pri:33, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:08 IST" name="checkAttenderUpdateButton" finished-at="2024-02-01T15:11:11 IST" duration-ms="3009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAttenderUpdateButton -->
        <test-method signature="updateUserTwice()[pri:34, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:11 IST" name="updateUserTwice" finished-at="2024-02-01T15:11:13 IST" duration-ms="2010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUserTwice -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:11 IST" name="getResult" finished-at="2024-02-01T15:11:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkAttenderUpdateButton status=SUCCESS method=Roles.checkAttenderUpdateButton()[pri:33, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:13 IST" name="getResult" finished-at="2024-02-01T15:11:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateUserTwice status=SUCCESS method=Roles.updateUserTwice()[pri:34, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="updateStatusOKTwice()[pri:35, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:13 IST" name="updateStatusOKTwice" finished-at="2024-02-01T15:11:15 IST" duration-ms="2008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateStatusOKTwice -->
        <test-method signature="performAttenderRoleDelete()[pri:36, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:15 IST" name="performAttenderRoleDelete" finished-at="2024-02-01T15:11:20 IST" duration-ms="5009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performAttenderRoleDelete -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:15 IST" name="getResult" finished-at="2024-02-01T15:11:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateStatusOKTwice status=SUCCESS method=Roles.updateStatusOKTwice()[pri:35, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:20 IST" name="getResult" finished-at="2024-02-01T15:11:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=performAttenderRoleDelete status=SUCCESS method=Roles.performAttenderRoleDelete()[pri:36, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="confirmAttenderDeleteAction()[pri:37, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:20 IST" name="confirmAttenderDeleteAction" finished-at="2024-02-01T15:11:20 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirmAttenderDeleteAction -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:20 IST" name="getResult" finished-at="2024-02-01T15:11:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=confirmAttenderDeleteAction status=SUCCESS method=Roles.confirmAttenderDeleteAction()[pri:37, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyAttenderRoleDeletion()[pri:38, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:20 IST" name="verifyAttenderRoleDeletion" finished-at="2024-02-01T15:11:20 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAttenderRoleDeletion -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:20 IST" name="getResult" finished-at="2024-02-01T15:11:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAttenderRoleDeletion status=SUCCESS method=Roles.verifyAttenderRoleDeletion()[pri:38, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchUserRole()[pri:39, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:20 IST" name="searchUserRole" finished-at="2024-02-01T15:11:25 IST" duration-ms="5007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchUserRole -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:25 IST" name="getResult" finished-at="2024-02-01T15:11:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchUserRole status=SUCCESS method=Roles.searchUserRole()[pri:39, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:40, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:25 IST" name="logout" finished-at="2024-02-01T15:11:27 IST" duration-ms="2280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:27 IST" name="getResult" finished-at="2024-02-01T15:11:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=Roles.logout()[pri:40, instance:com.selenium.Roles@563f38c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.Roles@563f38c4]" started-at="2024-02-01T15:11:27 IST" name="tearDown" finished-at="2024-02-01T15:11:28 IST" duration-ms="810" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.Roles -->
    </test> <!-- Roles -->
    <test started-at="2024-02-01T15:11:28 IST" name="Users" finished-at="2024-02-01T15:13:11 IST" duration-ms="103361">
      <class name="com.selenium.Users">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:11:28 IST" name="setUp" finished-at="2024-02-01T15:11:30 IST" duration-ms="2261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:11:30 IST" name="login" finished-at="2024-02-01T15:11:36 IST" duration-ms="6019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="revenueDashboard()[pri:2, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:11:36 IST" name="revenueDashboard" finished-at="2024-02-01T15:11:41 IST" duration-ms="5213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboard -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:11:36 IST" name="getResult" finished-at="2024-02-01T15:11:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=Users.login()[pri:1, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="userMgmtPage()[pri:3, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:11:41 IST" name="userMgmtPage" finished-at="2024-02-01T15:11:45 IST" duration-ms="3393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userMgmtPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:11:41 IST" name="getResult" finished-at="2024-02-01T15:11:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboard status=SUCCESS method=Users.revenueDashboard()[pri:2, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickAddUserButton()[pri:4, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:11:45 IST" name="clickAddUserButton" finished-at="2024-02-01T15:11:48 IST" duration-ms="3417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAddUserButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:11:45 IST" name="getResult" finished-at="2024-02-01T15:11:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userMgmtPage status=SUCCESS method=Users.userMgmtPage()[pri:3, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="fillAndSubmitUserForm()[pri:5, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:11:48 IST" name="fillAndSubmitUserForm" finished-at="2024-02-01T15:11:49 IST" duration-ms="413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillAndSubmitUserForm -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:11:48 IST" name="getResult" finished-at="2024-02-01T15:11:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAddUserButton status=SUCCESS method=Users.clickAddUserButton()[pri:4, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickSaveButton()[pri:6, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:11:49 IST" name="clickSaveButton" finished-at="2024-02-01T15:11:52 IST" duration-ms="3280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickSaveButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:11:49 IST" name="getResult" finished-at="2024-02-01T15:11:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillAndSubmitUserForm status=SUCCESS method=Users.fillAndSubmitUserForm()[pri:5, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="extractPopupText()[pri:7, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:11:52 IST" name="extractPopupText" finished-at="2024-02-01T15:11:55 IST" duration-ms="3008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractPopupText -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:11:52 IST" name="getResult" finished-at="2024-02-01T15:11:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickSaveButton status=SUCCESS method=Users.clickSaveButton()[pri:6, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:11:55 IST" name="getResult" finished-at="2024-02-01T15:11:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractPopupText status=SUCCESS method=Users.extractPopupText()[pri:7, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusOK()[pri:8, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:11:55 IST" name="statusOK" finished-at="2024-02-01T15:12:00 IST" duration-ms="5005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusOK -->
        <test-method signature="addUsersPopUpClose()[pri:9, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:00 IST" name="addUsersPopUpClose" finished-at="2024-02-01T15:12:02 IST" duration-ms="2012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addUsersPopUpClose -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:00 IST" name="getResult" finished-at="2024-02-01T15:12:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusOK status=SUCCESS method=Users.statusOK()[pri:8, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickAddUserButtonTwice()[pri:10, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:02 IST" name="clickAddUserButtonTwice" finished-at="2024-02-01T15:12:10 IST" duration-ms="8017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAddUserButtonTwice -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:02 IST" name="getResult" finished-at="2024-02-01T15:12:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addUsersPopUpClose status=SUCCESS method=Users.addUsersPopUpClose()[pri:9, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:10 IST" name="getResult" finished-at="2024-02-01T15:12:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAddUserButtonTwice status=SUCCESS method=Users.clickAddUserButtonTwice()[pri:10, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyAdminUserDetailsInTable()[pri:10, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:10 IST" name="verifyAdminUserDetailsInTable" finished-at="2024-02-01T15:12:15 IST" duration-ms="5004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdminUserDetailsInTable -->
        <test-method signature="fillAttederUserForm()[pri:11, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:15 IST" name="fillAttederUserForm" finished-at="2024-02-01T15:12:15 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillAttederUserForm -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:15 IST" name="getResult" finished-at="2024-02-01T15:12:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAdminUserDetailsInTable status=SUCCESS method=Users.verifyAdminUserDetailsInTable()[pri:10, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickAttenderSaveButton()[pri:12, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:15 IST" name="clickAttenderSaveButton" finished-at="2024-02-01T15:12:18 IST" duration-ms="3014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAttenderSaveButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:15 IST" name="getResult" finished-at="2024-02-01T15:12:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillAttederUserForm status=SUCCESS method=Users.fillAttederUserForm()[pri:11, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:18 IST" name="getResult" finished-at="2024-02-01T15:12:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAttenderSaveButton status=SUCCESS method=Users.clickAttenderSaveButton()[pri:12, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="extractPopupTextAttender()[pri:13, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:18 IST" name="extractPopupTextAttender" finished-at="2024-02-01T15:12:21 IST" duration-ms="3002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractPopupTextAttender -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:21 IST" name="getResult" finished-at="2024-02-01T15:12:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractPopupTextAttender status=SUCCESS method=Users.extractPopupTextAttender()[pri:13, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusOKAttender()[pri:14, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:21 IST" name="statusOKAttender" finished-at="2024-02-01T15:12:26 IST" duration-ms="5002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusOKAttender -->
        <test-method signature="verifyAttenderUserDetailsInTable()[pri:16, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:26 IST" name="verifyAttenderUserDetailsInTable" finished-at="2024-02-01T15:12:31 IST" duration-ms="5003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAttenderUserDetailsInTable -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:26 IST" name="getResult" finished-at="2024-02-01T15:12:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusOKAttender status=SUCCESS method=Users.statusOKAttender()[pri:14, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyAdminActions()[pri:17, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:31 IST" name="verifyAdminActions" finished-at="2024-02-01T15:12:31 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdminActions -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:31 IST" name="getResult" finished-at="2024-02-01T15:12:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAttenderUserDetailsInTable status=SUCCESS method=Users.verifyAttenderUserDetailsInTable()[pri:16, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:31 IST" name="getResult" finished-at="2024-02-01T15:12:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAdminActions status=SUCCESS method=Users.verifyAdminActions()[pri:17, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyAttenderUserEdit()[pri:18, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:31 IST" name="verifyAttenderUserEdit" finished-at="2024-02-01T15:12:31 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAttenderUserEdit -->
        <test-method signature="verifyAttenderUserDelete()[pri:22, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:31 IST" name="verifyAttenderUserDelete" finished-at="2024-02-01T15:12:34 IST" duration-ms="3058" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAttenderUserDelete -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:31 IST" name="getResult" finished-at="2024-02-01T15:12:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAttenderUserEdit status=SUCCESS method=Users.verifyAttenderUserEdit()[pri:18, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="confirmAttenderDeleteAction()[pri:23, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:34 IST" name="confirmAttenderDeleteAction" finished-at="2024-02-01T15:12:34 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirmAttenderDeleteAction -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:34 IST" name="getResult" finished-at="2024-02-01T15:12:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAttenderUserDelete status=SUCCESS method=Users.verifyAttenderUserDelete()[pri:22, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="extractPopupTextDeleteAttender()[pri:24, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:34 IST" name="extractPopupTextDeleteAttender" finished-at="2024-02-01T15:12:42 IST" duration-ms="8009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractPopupTextDeleteAttender -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:34 IST" name="getResult" finished-at="2024-02-01T15:12:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=confirmAttenderDeleteAction status=SUCCESS method=Users.confirmAttenderDeleteAction()[pri:23, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusOKDeleteAttender()[pri:25, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:42 IST" name="statusOKDeleteAttender" finished-at="2024-02-01T15:12:47 IST" duration-ms="5005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusOKDeleteAttender -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:42 IST" name="getResult" finished-at="2024-02-01T15:12:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractPopupTextDeleteAttender status=SUCCESS method=Users.extractPopupTextDeleteAttender()[pri:24, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyAttenderRoleDeletion()[pri:26, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:47 IST" name="verifyAttenderRoleDeletion" finished-at="2024-02-01T15:12:50 IST" duration-ms="3165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAttenderRoleDeletion -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:47 IST" name="getResult" finished-at="2024-02-01T15:12:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusOKDeleteAttender status=SUCCESS method=Users.statusOKDeleteAttender()[pri:25, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:50 IST" name="getResult" finished-at="2024-02-01T15:12:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAttenderRoleDeletion status=SUCCESS method=Users.verifyAttenderRoleDeletion()[pri:26, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="tableNextPage()[pri:27, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:50 IST" name="tableNextPage" finished-at="2024-02-01T15:12:53 IST" duration-ms="3026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableNextPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:53 IST" name="getResult" finished-at="2024-02-01T15:12:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tableNextPage status=SUCCESS method=Users.tableNextPage()[pri:27, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchAndVerifyAdminCount()[pri:28, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:12:53 IST" name="searchAndVerifyAdminCount" finished-at="2024-02-01T15:13:00 IST" duration-ms="7081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchAndVerifyAdminCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:13:00 IST" name="getResult" finished-at="2024-02-01T15:13:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchAndVerifyAdminCount status=SUCCESS method=Users.searchAndVerifyAdminCount()[pri:28, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downloadCSV()[pri:29, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:13:00 IST" name="downloadCSV" finished-at="2024-02-01T15:13:05 IST" duration-ms="5030" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadCSV -->
        <test-method signature="downloadPDF()[pri:30, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:13:05 IST" name="downloadPDF" finished-at="2024-02-01T15:13:08 IST" duration-ms="3040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadPDF -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:13:05 IST" name="getResult" finished-at="2024-02-01T15:13:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadCSV status=SUCCESS method=Users.downloadCSV()[pri:29, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:13:08 IST" name="getResult" finished-at="2024-02-01T15:13:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadPDF status=SUCCESS method=Users.downloadPDF()[pri:30, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:31, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:13:08 IST" name="logout" finished-at="2024-02-01T15:13:10 IST" duration-ms="2016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:13:10 IST" name="getResult" finished-at="2024-02-01T15:13:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=Users.logout()[pri:31, instance:com.selenium.Users@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.Users@53fb3dab]" started-at="2024-02-01T15:13:10 IST" name="tearDown" finished-at="2024-02-01T15:13:11 IST" duration-ms="814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.Users -->
    </test> <!-- Users -->
    <test started-at="2024-02-01T15:13:11 IST" name="UserSiteAssignment" finished-at="2024-02-01T15:15:00 IST" duration-ms="108627">
      <class name="com.selenium.UserSiteAssign">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:11 IST" name="setUp" finished-at="2024-02-01T15:13:13 IST" duration-ms="2135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:13 IST" name="login" finished-at="2024-02-01T15:13:19 IST" duration-ms="5975" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="revenueDashboard()[pri:2, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:19 IST" name="revenueDashboard" finished-at="2024-02-01T15:13:25 IST" duration-ms="5190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboard -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:19 IST" name="getResult" finished-at="2024-02-01T15:13:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=UserSiteAssign.login()[pri:1, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:25 IST" name="getResult" finished-at="2024-02-01T15:13:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboard status=SUCCESS method=UserSiteAssign.revenueDashboard()[pri:2, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="userMgmtPage()[pri:3, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:25 IST" name="userMgmtPage" finished-at="2024-02-01T15:13:28 IST" duration-ms="3391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userMgmtPage -->
        <test-method signature="selectManagerFromDropdown()[pri:4, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:28 IST" name="selectManagerFromDropdown" finished-at="2024-02-01T15:13:31 IST" duration-ms="3257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectManagerFromDropdown -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:28 IST" name="getResult" finished-at="2024-02-01T15:13:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userMgmtPage status=SUCCESS method=UserSiteAssign.userMgmtPage()[pri:3, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectjncManager()[pri:5, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:31 IST" name="selectjncManager" finished-at="2024-02-01T15:13:35 IST" duration-ms="3482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectjncManager -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:31 IST" name="getResult" finished-at="2024-02-01T15:13:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectManagerFromDropdown status=SUCCESS method=UserSiteAssign.selectManagerFromDropdown()[pri:4, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:35 IST" name="getResult" finished-at="2024-02-01T15:13:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectjncManager status=SUCCESS method=UserSiteAssign.selectjncManager()[pri:5, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="managerCount()[pri:6, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:35 IST" name="managerCount" finished-at="2024-02-01T15:13:40 IST" duration-ms="5272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- managerCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:40 IST" name="getResult" finished-at="2024-02-01T15:13:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=managerCount status=SUCCESS method=UserSiteAssign.managerCount()[pri:6, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickUnAssignButton()[pri:7, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:40 IST" name="clickUnAssignButton" finished-at="2024-02-01T15:13:45 IST" duration-ms="5275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickUnAssignButton -->
        <test-method signature="confirmManagerUnassignAction()[pri:8, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:45 IST" name="confirmManagerUnassignAction" finished-at="2024-02-01T15:13:46 IST" duration-ms="264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirmManagerUnassignAction -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:45 IST" name="getResult" finished-at="2024-02-01T15:13:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickUnAssignButton status=SUCCESS method=UserSiteAssign.clickUnAssignButton()[pri:7, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:46 IST" name="getResult" finished-at="2024-02-01T15:13:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=confirmManagerUnassignAction status=SUCCESS method=UserSiteAssign.confirmManagerUnassignAction()[pri:8, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="extractPopupTextManager()[pri:8, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:46 IST" name="extractPopupTextManager" finished-at="2024-02-01T15:13:49 IST" duration-ms="3027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractPopupTextManager -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:49 IST" name="getResult" finished-at="2024-02-01T15:13:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractPopupTextManager status=SUCCESS method=UserSiteAssign.extractPopupTextManager()[pri:8, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusOKManager()[pri:9, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:49 IST" name="statusOKManager" finished-at="2024-02-01T15:13:54 IST" duration-ms="5211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusOKManager -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:54 IST" name="getResult" finished-at="2024-02-01T15:13:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusOKManager status=SUCCESS method=UserSiteAssign.statusOKManager()[pri:9, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyTableAfterUnAssign()[pri:10, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:54 IST" name="verifyTableAfterUnAssign" finished-at="2024-02-01T15:13:54 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableAfterUnAssign -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:54 IST" name="getResult" finished-at="2024-02-01T15:13:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTableAfterUnAssign status=SUCCESS method=UserSiteAssign.verifyTableAfterUnAssign()[pri:10, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickAssignSiteButton()[pri:11, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:54 IST" name="clickAssignSiteButton" finished-at="2024-02-01T15:13:54 IST" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAssignSiteButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:54 IST" name="getResult" finished-at="2024-02-01T15:13:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAssignSiteButton status=SUCCESS method=UserSiteAssign.clickAssignSiteButton()[pri:11, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectSiteFromDropdown()[pri:13, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:54 IST" name="selectSiteFromDropdown" finished-at="2024-02-01T15:13:57 IST" duration-ms="3236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectSiteFromDropdown -->
        <test-method signature="selectSite()[pri:14, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:57 IST" name="selectSite" finished-at="2024-02-01T15:13:58 IST" duration-ms="720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectSite -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:57 IST" name="getResult" finished-at="2024-02-01T15:13:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectSiteFromDropdown status=SUCCESS method=UserSiteAssign.selectSiteFromDropdown()[pri:13, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:58 IST" name="getResult" finished-at="2024-02-01T15:13:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectSite status=SUCCESS method=UserSiteAssign.selectSite()[pri:14, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickAddSitesButton()[pri:15, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:13:58 IST" name="clickAddSitesButton" finished-at="2024-02-01T15:14:01 IST" duration-ms="3218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAddSitesButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:01 IST" name="getResult" finished-at="2024-02-01T15:14:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAddSitesButton status=SUCCESS method=UserSiteAssign.clickAddSitesButton()[pri:15, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="extractPopupTextAssign()[pri:16, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:01 IST" name="extractPopupTextAssign" finished-at="2024-02-01T15:14:04 IST" duration-ms="3025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractPopupTextAssign -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:04 IST" name="getResult" finished-at="2024-02-01T15:14:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractPopupTextAssign status=SUCCESS method=UserSiteAssign.extractPopupTextAssign()[pri:16, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusOKAssign()[pri:17, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:04 IST" name="statusOKAssign" finished-at="2024-02-01T15:14:09 IST" duration-ms="5252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusOKAssign -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:09 IST" name="getResult" finished-at="2024-02-01T15:14:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusOKAssign status=SUCCESS method=UserSiteAssign.statusOKAssign()[pri:17, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyTableAfterAssign()[pri:18, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:09 IST" name="verifyTableAfterAssign" finished-at="2024-02-01T15:14:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTableAfterAssign -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:09 IST" name="getResult" finished-at="2024-02-01T15:14:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTableAfterAssign status=SUCCESS method=UserSiteAssign.verifyTableAfterAssign()[pri:18, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickAttendersTab()[pri:19, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:09 IST" name="clickAttendersTab" finished-at="2024-02-01T15:14:15 IST" duration-ms="5221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAttendersTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:15 IST" name="getResult" finished-at="2024-02-01T15:14:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAttendersTab status=SUCCESS method=UserSiteAssign.clickAttendersTab()[pri:19, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="unassignAttender()[pri:20, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:15 IST" name="unassignAttender" finished-at="2024-02-01T15:14:15 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unassignAttender -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:15 IST" name="getResult" finished-at="2024-02-01T15:14:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unassignAttender status=SUCCESS method=UserSiteAssign.unassignAttender()[pri:20, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="extractPopupWarningTextAttender()[pri:21, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:15 IST" name="extractPopupWarningTextAttender" finished-at="2024-02-01T15:14:20 IST" duration-ms="5006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractPopupWarningTextAttender -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:20 IST" name="getResult" finished-at="2024-02-01T15:14:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractPopupWarningTextAttender status=SUCCESS method=UserSiteAssign.extractPopupWarningTextAttender()[pri:21, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusOKAttender()[pri:22, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:20 IST" name="statusOKAttender" finished-at="2024-02-01T15:14:23 IST" duration-ms="3006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusOKAttender -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:23 IST" name="getResult" finished-at="2024-02-01T15:14:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusOKAttender status=SUCCESS method=UserSiteAssign.statusOKAttender()[pri:22, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="extractPopupTextAttender()[pri:23, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:23 IST" name="extractPopupTextAttender" finished-at="2024-02-01T15:14:26 IST" duration-ms="3009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractPopupTextAttender -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:26 IST" name="getResult" finished-at="2024-02-01T15:14:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractPopupTextAttender status=SUCCESS method=UserSiteAssign.extractPopupTextAttender()[pri:23, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusOKUnAssignAttender()[pri:24, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:26 IST" name="statusOKUnAssignAttender" finished-at="2024-02-01T15:14:31 IST" duration-ms="5005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusOKUnAssignAttender -->
        <test-method signature="attendreCount()[pri:25, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:31 IST" name="attendreCount" finished-at="2024-02-01T15:14:36 IST" duration-ms="5320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- attendreCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:31 IST" name="getResult" finished-at="2024-02-01T15:14:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusOKUnAssignAttender status=SUCCESS method=UserSiteAssign.statusOKUnAssignAttender()[pri:24, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchAttender()[pri:26, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:36 IST" name="searchAttender" finished-at="2024-02-01T15:14:41 IST" duration-ms="5053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchAttender -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:36 IST" name="getResult" finished-at="2024-02-01T15:14:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=attendreCount status=SUCCESS method=UserSiteAssign.attendreCount()[pri:25, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickAddMoreButton()[pri:27, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:41 IST" name="clickAddMoreButton" finished-at="2024-02-01T15:14:44 IST" duration-ms="3267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAddMoreButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:41 IST" name="getResult" finished-at="2024-02-01T15:14:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchAttender status=SUCCESS method=UserSiteAssign.searchAttender()[pri:26, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickDropdownButton()[pri:28, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:44 IST" name="clickDropdownButton" finished-at="2024-02-01T15:14:48 IST" duration-ms="3233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickDropdownButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:44 IST" name="getResult" finished-at="2024-02-01T15:14:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAddMoreButton status=SUCCESS method=UserSiteAssign.clickAddMoreButton()[pri:27, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:48 IST" name="getResult" finished-at="2024-02-01T15:14:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickDropdownButton status=SUCCESS method=UserSiteAssign.clickDropdownButton()[pri:28, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectAttenderListItem()[pri:29, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:48 IST" name="selectAttenderListItem" finished-at="2024-02-01T15:14:48 IST" duration-ms="746" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAttenderListItem -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:48 IST" name="getResult" finished-at="2024-02-01T15:14:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAttenderListItem status=SUCCESS method=UserSiteAssign.selectAttenderListItem()[pri:29, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickAssignAttenderButton()[pri:30, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:48 IST" name="clickAssignAttenderButton" finished-at="2024-02-01T15:14:49 IST" duration-ms="236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAssignAttenderButton -->
        <test-method signature="extractPopupTextAddAttender()[pri:31, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:49 IST" name="extractPopupTextAddAttender" finished-at="2024-02-01T15:14:52 IST" duration-ms="3027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractPopupTextAddAttender -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:49 IST" name="getResult" finished-at="2024-02-01T15:14:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAssignAttenderButton status=SUCCESS method=UserSiteAssign.clickAssignAttenderButton()[pri:30, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:52 IST" name="getResult" finished-at="2024-02-01T15:14:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractPopupTextAddAttender status=SUCCESS method=UserSiteAssign.extractPopupTextAddAttender()[pri:31, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusOKAddAttender()[pri:32, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:52 IST" name="statusOKAddAttender" finished-at="2024-02-01T15:14:57 IST" duration-ms="5239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusOKAddAttender -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:57 IST" name="getResult" finished-at="2024-02-01T15:14:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusOKAddAttender status=SUCCESS method=UserSiteAssign.statusOKAddAttender()[pri:32, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:33, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:57 IST" name="logout" finished-at="2024-02-01T15:14:59 IST" duration-ms="2280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:59 IST" name="getResult" finished-at="2024-02-01T15:14:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=UserSiteAssign.logout()[pri:33, instance:com.selenium.UserSiteAssign@8458f04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.UserSiteAssign@8458f04]" started-at="2024-02-01T15:14:59 IST" name="tearDown" finished-at="2024-02-01T15:15:00 IST" duration-ms="772" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.UserSiteAssign -->
    </test> <!-- UserSiteAssignment -->
    <test started-at="2024-02-01T15:15:00 IST" name="UserZoneAssignment" finished-at="2024-02-01T15:16:25 IST" duration-ms="85077">
      <class name="com.selenium.UserZoneAssign">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:00 IST" name="setUp" finished-at="2024-02-01T15:15:03 IST" duration-ms="2944" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:03 IST" name="login" finished-at="2024-02-01T15:15:12 IST" duration-ms="9375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="revenueDashboard()[pri:2, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:12 IST" name="revenueDashboard" finished-at="2024-02-01T15:15:17 IST" duration-ms="5167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboard -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:12 IST" name="getResult" finished-at="2024-02-01T15:15:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=UserZoneAssign.login()[pri:1, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="userMgmtPage()[pri:3, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:17 IST" name="userMgmtPage" finished-at="2024-02-01T15:15:21 IST" duration-ms="3492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userMgmtPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:17 IST" name="getResult" finished-at="2024-02-01T15:15:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboard status=SUCCESS method=UserZoneAssign.revenueDashboard()[pri:2, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="officerCount()[pri:4, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:21 IST" name="officerCount" finished-at="2024-02-01T15:15:26 IST" duration-ms="5259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- officerCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:21 IST" name="getResult" finished-at="2024-02-01T15:15:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userMgmtPage status=SUCCESS method=UserZoneAssign.userMgmtPage()[pri:3, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:26 IST" name="getResult" finished-at="2024-02-01T15:15:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=officerCount status=SUCCESS method=UserZoneAssign.officerCount()[pri:4, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchOfficer()[pri:5, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:26 IST" name="searchOfficer" finished-at="2024-02-01T15:15:31 IST" duration-ms="5057" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchOfficer -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:31 IST" name="getResult" finished-at="2024-02-01T15:15:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchOfficer status=SUCCESS method=UserZoneAssign.searchOfficer()[pri:5, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickAddMoreOfficerButton()[pri:6, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:31 IST" name="clickAddMoreOfficerButton" finished-at="2024-02-01T15:15:34 IST" duration-ms="3236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAddMoreOfficerButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:34 IST" name="getResult" finished-at="2024-02-01T15:15:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAddMoreOfficerButton status=SUCCESS method=UserZoneAssign.clickAddMoreOfficerButton()[pri:6, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectOfficerList()[pri:7, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:34 IST" name="selectOfficerList" finished-at="2024-02-01T15:15:37 IST" duration-ms="3051" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOfficerList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:37 IST" name="getResult" finished-at="2024-02-01T15:15:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectOfficerList status=SUCCESS method=UserZoneAssign.selectOfficerList()[pri:7, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addMorePopUpClose()[pri:8, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:37 IST" name="addMorePopUpClose" finished-at="2024-02-01T15:15:40 IST" duration-ms="2220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMorePopUpClose -->
        <test-method signature="clickOperatorTab()[pri:9, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:40 IST" name="clickOperatorTab" finished-at="2024-02-01T15:15:45 IST" duration-ms="5234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOperatorTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:40 IST" name="getResult" finished-at="2024-02-01T15:15:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addMorePopUpClose status=SUCCESS method=UserZoneAssign.addMorePopUpClose()[pri:8, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:45 IST" name="getResult" finished-at="2024-02-01T15:15:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOperatorTab status=SUCCESS method=UserZoneAssign.clickOperatorTab()[pri:9, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="operatorCount()[pri:10, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:45 IST" name="operatorCount" finished-at="2024-02-01T15:15:50 IST" duration-ms="5285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- operatorCount -->
        <test-method signature="searchOperator()[pri:11, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:50 IST" name="searchOperator" finished-at="2024-02-01T15:15:53 IST" duration-ms="3055" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchOperator -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:50 IST" name="getResult" finished-at="2024-02-01T15:15:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=operatorCount status=SUCCESS method=UserZoneAssign.operatorCount()[pri:10, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectOperatorList()[pri:12, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:53 IST" name="selectOperatorList" finished-at="2024-02-01T15:15:56 IST" duration-ms="3011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOperatorList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:53 IST" name="getResult" finished-at="2024-02-01T15:15:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchOperator status=SUCCESS method=UserZoneAssign.searchOperator()[pri:11, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addMoreOperatorPopUpClose()[pri:13, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:56 IST" name="addMoreOperatorPopUpClose" finished-at="2024-02-01T15:15:58 IST" duration-ms="2005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMoreOperatorPopUpClose -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:56 IST" name="getResult" finished-at="2024-02-01T15:15:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectOperatorList status=SUCCESS method=UserZoneAssign.selectOperatorList()[pri:12, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:58 IST" name="getResult" finished-at="2024-02-01T15:15:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addMoreOperatorPopUpClose status=SUCCESS method=UserZoneAssign.addMoreOperatorPopUpClose()[pri:13, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickMonitorTab()[pri:14, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:15:58 IST" name="clickMonitorTab" finished-at="2024-02-01T15:16:04 IST" duration-ms="5232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickMonitorTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:16:04 IST" name="getResult" finished-at="2024-02-01T15:16:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickMonitorTab status=SUCCESS method=UserZoneAssign.clickMonitorTab()[pri:14, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="monitorCount()[pri:15, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:16:04 IST" name="monitorCount" finished-at="2024-02-01T15:16:09 IST" duration-ms="5251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- monitorCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:16:09 IST" name="getResult" finished-at="2024-02-01T15:16:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=monitorCount status=SUCCESS method=UserZoneAssign.monitorCount()[pri:15, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="searchMonitor()[pri:16, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:16:09 IST" name="searchMonitor" finished-at="2024-02-01T15:16:14 IST" duration-ms="5060" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMonitor -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:16:14 IST" name="getResult" finished-at="2024-02-01T15:16:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchMonitor status=SUCCESS method=UserZoneAssign.searchMonitor()[pri:16, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickAddMoreMonitorButton()[pri:17, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:16:14 IST" name="clickAddMoreMonitorButton" finished-at="2024-02-01T15:16:17 IST" duration-ms="3278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAddMoreMonitorButton -->
        <test-method signature="selectMonitor()[pri:18, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:16:17 IST" name="selectMonitor" finished-at="2024-02-01T15:16:20 IST" duration-ms="3047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMonitor -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:16:17 IST" name="getResult" finished-at="2024-02-01T15:16:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAddMoreMonitorButton status=SUCCESS method=UserZoneAssign.clickAddMoreMonitorButton()[pri:17, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:16:20 IST" name="getResult" finished-at="2024-02-01T15:16:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMonitor status=SUCCESS method=UserZoneAssign.selectMonitor()[pri:18, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="addMoreMonitorPopUpClose()[pri:19, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:16:20 IST" name="addMoreMonitorPopUpClose" finished-at="2024-02-01T15:16:22 IST" duration-ms="2014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMoreMonitorPopUpClose -->
        <test-method signature="logout()[pri:20, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:16:22 IST" name="logout" finished-at="2024-02-01T15:16:24 IST" duration-ms="2009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:16:22 IST" name="getResult" finished-at="2024-02-01T15:16:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addMoreMonitorPopUpClose status=SUCCESS method=UserZoneAssign.addMoreMonitorPopUpClose()[pri:19, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:16:24 IST" name="getResult" finished-at="2024-02-01T15:16:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=UserZoneAssign.logout()[pri:20, instance:com.selenium.UserZoneAssign@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.UserZoneAssign@6fa51cd4]" started-at="2024-02-01T15:16:24 IST" name="tearDown" finished-at="2024-02-01T15:16:25 IST" duration-ms="778" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.UserZoneAssign -->
    </test> <!-- UserZoneAssignment -->
    <test started-at="2024-02-01T15:16:25 IST" name="UserLogs" finished-at="2024-02-01T15:19:18 IST" duration-ms="172736">
      <class name="com.selenium.UserLogs">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:16:25 IST" name="setUp" finished-at="2024-02-01T15:16:27 IST" duration-ms="2535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:16:27 IST" name="login" finished-at="2024-02-01T15:16:33 IST" duration-ms="5674" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:16:33 IST" name="getResult" finished-at="2024-02-01T15:16:33 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=UserLogs.login()[pri:1, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDashboard()[pri:2, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:16:33 IST" name="revenueDashboard" finished-at="2024-02-01T15:16:38 IST" duration-ms="5203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboard -->
        <test-method signature="userLogsActivityPage()[pri:3, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:16:38 IST" name="userLogsActivityPage" finished-at="2024-02-01T15:16:42 IST" duration-ms="3479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLogsActivityPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:16:38 IST" name="getResult" finished-at="2024-02-01T15:16:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboard status=SUCCESS method=UserLogs.revenueDashboard()[pri:2, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:16:42 IST" name="getResult" finished-at="2024-02-01T15:16:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLogsActivityPage status=SUCCESS method=UserLogs.userLogsActivityPage()[pri:3, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectAdminUserRole()[pri:4, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:16:42 IST" name="selectAdminUserRole" finished-at="2024-02-01T15:16:47 IST" duration-ms="5348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAdminUserRole -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:16:47 IST" name="getResult" finished-at="2024-02-01T15:16:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAdminUserRole status=SUCCESS method=UserLogs.selectAdminUserRole()[pri:4, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectUserRoleList()[pri:5, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:16:47 IST" name="selectUserRoleList" finished-at="2024-02-01T15:16:50 IST" duration-ms="3143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectUserRoleList -->
        <test-method signature="selectAdminUser()[pri:6, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:16:50 IST" name="selectAdminUser" finished-at="2024-02-01T15:16:54 IST" duration-ms="3285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAdminUser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:16:50 IST" name="getResult" finished-at="2024-02-01T15:16:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectUserRoleList status=SUCCESS method=UserLogs.selectUserRoleList()[pri:5, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectUserList()[pri:7, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:16:54 IST" name="selectUserList" finished-at="2024-02-01T15:16:57 IST" duration-ms="3077" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectUserList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:16:54 IST" name="getResult" finished-at="2024-02-01T15:16:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAdminUser status=SUCCESS method=UserLogs.selectAdminUser()[pri:6, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="activityDatesEnabled()[pri:8, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:16:57 IST" name="activityDatesEnabled" finished-at="2024-02-01T15:16:58 IST" duration-ms="1007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- activityDatesEnabled -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:16:57 IST" name="getResult" finished-at="2024-02-01T15:16:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectUserList status=SUCCESS method=UserLogs.selectUserList()[pri:7, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="tableNextPage()[pri:9, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:16:58 IST" name="tableNextPage" finished-at="2024-02-01T15:17:04 IST" duration-ms="6483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableNextPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:16:58 IST" name="getResult" finished-at="2024-02-01T15:16:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=activityDatesEnabled status=SUCCESS method=UserLogs.activityDatesEnabled()[pri:8, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downloadAdminCSV()[pri:10, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:04 IST" name="downloadAdminCSV" finished-at="2024-02-01T15:17:07 IST" duration-ms="3271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadAdminCSV -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:04 IST" name="getResult" finished-at="2024-02-01T15:17:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tableNextPage status=SUCCESS method=UserLogs.tableNextPage()[pri:9, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downlaodAdminPDFButton()[pri:11, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:07 IST" name="downlaodAdminPDFButton" finished-at="2024-02-01T15:17:11 IST" duration-ms="3340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downlaodAdminPDFButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:07 IST" name="getResult" finished-at="2024-02-01T15:17:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadAdminCSV status=SUCCESS method=UserLogs.downloadAdminCSV()[pri:10, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectAccountUserRole()[pri:12, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:11 IST" name="selectAccountUserRole" finished-at="2024-02-01T15:17:16 IST" duration-ms="5234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAccountUserRole -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:11 IST" name="getResult" finished-at="2024-02-01T15:17:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downlaodAdminPDFButton status=SUCCESS method=UserLogs.downlaodAdminPDFButton()[pri:11, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:16 IST" name="getResult" finished-at="2024-02-01T15:17:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAccountUserRole status=SUCCESS method=UserLogs.selectAccountUserRole()[pri:12, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectAccountUser()[pri:13, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:16 IST" name="selectAccountUser" finished-at="2024-02-01T15:17:19 IST" duration-ms="3055" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAccountUser -->
        <test-method signature="downloadAccountCSV()[pri:14, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:19 IST" name="downloadAccountCSV" finished-at="2024-02-01T15:17:22 IST" duration-ms="3254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadAccountCSV -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:19 IST" name="getResult" finished-at="2024-02-01T15:17:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAccountUser status=SUCCESS method=UserLogs.selectAccountUser()[pri:13, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downlaodAccountPDFButton()[pri:15, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:22 IST" name="downlaodAccountPDFButton" finished-at="2024-02-01T15:17:26 IST" duration-ms="3437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downlaodAccountPDFButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:22 IST" name="getResult" finished-at="2024-02-01T15:17:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadAccountCSV status=SUCCESS method=UserLogs.downloadAccountCSV()[pri:14, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:26 IST" name="getResult" finished-at="2024-02-01T15:17:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downlaodAccountPDFButton status=SUCCESS method=UserLogs.downlaodAccountPDFButton()[pri:15, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectAttenderUserRole()[pri:16, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:26 IST" name="selectAttenderUserRole" finished-at="2024-02-01T15:17:31 IST" duration-ms="5306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAttenderUserRole -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:31 IST" name="getResult" finished-at="2024-02-01T15:17:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAttenderUserRole status=SUCCESS method=UserLogs.selectAttenderUserRole()[pri:16, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectAttenderUser()[pri:17, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:31 IST" name="selectAttenderUser" finished-at="2024-02-01T15:17:34 IST" duration-ms="3266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAttenderUser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:34 IST" name="getResult" finished-at="2024-02-01T15:17:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAttenderUser status=SUCCESS method=UserLogs.selectAttenderUser()[pri:17, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downloadAttenderCSV()[pri:18, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:34 IST" name="downloadAttenderCSV" finished-at="2024-02-01T15:17:38 IST" duration-ms="3224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadAttenderCSV -->
        <test-method signature="downlaodAttenderPDFButton()[pri:19, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:38 IST" name="downlaodAttenderPDFButton" finished-at="2024-02-01T15:17:41 IST" duration-ms="3404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downlaodAttenderPDFButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:38 IST" name="getResult" finished-at="2024-02-01T15:17:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadAttenderCSV status=SUCCESS method=UserLogs.downloadAttenderCSV()[pri:18, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectHelpDeskUserRole()[pri:20, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:41 IST" name="selectHelpDeskUserRole" finished-at="2024-02-01T15:17:46 IST" duration-ms="5277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectHelpDeskUserRole -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:41 IST" name="getResult" finished-at="2024-02-01T15:17:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downlaodAttenderPDFButton status=SUCCESS method=UserLogs.downlaodAttenderPDFButton()[pri:19, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectHelpDeskUser()[pri:21, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:46 IST" name="selectHelpDeskUser" finished-at="2024-02-01T15:17:49 IST" duration-ms="3073" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectHelpDeskUser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:46 IST" name="getResult" finished-at="2024-02-01T15:17:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectHelpDeskUserRole status=SUCCESS method=UserLogs.selectHelpDeskUserRole()[pri:20, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:49 IST" name="getResult" finished-at="2024-02-01T15:17:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectHelpDeskUser status=SUCCESS method=UserLogs.selectHelpDeskUser()[pri:21, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downloadHelpDeskCSV()[pri:22, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:49 IST" name="downloadHelpDeskCSV" finished-at="2024-02-01T15:17:53 IST" duration-ms="3270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadHelpDeskCSV -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:53 IST" name="getResult" finished-at="2024-02-01T15:17:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadHelpDeskCSV status=SUCCESS method=UserLogs.downloadHelpDeskCSV()[pri:22, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downlaodAHelpDeskPDFButton()[pri:23, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:53 IST" name="downlaodAHelpDeskPDFButton" finished-at="2024-02-01T15:17:56 IST" duration-ms="3383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downlaodAHelpDeskPDFButton -->
        <test-method signature="selectManagerUserRole()[pri:24, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:56 IST" name="selectManagerUserRole" finished-at="2024-02-01T15:18:01 IST" duration-ms="5284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectManagerUserRole -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:17:56 IST" name="getResult" finished-at="2024-02-01T15:17:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downlaodAHelpDeskPDFButton status=SUCCESS method=UserLogs.downlaodAHelpDeskPDFButton()[pri:23, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectManagerUser()[pri:25, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:01 IST" name="selectManagerUser" finished-at="2024-02-01T15:18:05 IST" duration-ms="3307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectManagerUser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:01 IST" name="getResult" finished-at="2024-02-01T15:18:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectManagerUserRole status=SUCCESS method=UserLogs.selectManagerUserRole()[pri:24, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downloadManagerCSV()[pri:26, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:05 IST" name="downloadManagerCSV" finished-at="2024-02-01T15:18:08 IST" duration-ms="3275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadManagerCSV -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:05 IST" name="getResult" finished-at="2024-02-01T15:18:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectManagerUser status=SUCCESS method=UserLogs.selectManagerUser()[pri:25, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:08 IST" name="getResult" finished-at="2024-02-01T15:18:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadManagerCSV status=SUCCESS method=UserLogs.downloadManagerCSV()[pri:26, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downlaodManagerPDFButton()[pri:27, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:08 IST" name="downlaodManagerPDFButton" finished-at="2024-02-01T15:18:11 IST" duration-ms="3324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downlaodManagerPDFButton -->
        <test-method signature="selectMonitorUserRole()[pri:28, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:11 IST" name="selectMonitorUserRole" finished-at="2024-02-01T15:18:17 IST" duration-ms="5300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMonitorUserRole -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:11 IST" name="getResult" finished-at="2024-02-01T15:18:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downlaodManagerPDFButton status=SUCCESS method=UserLogs.downlaodManagerPDFButton()[pri:27, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:17 IST" name="getResult" finished-at="2024-02-01T15:18:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMonitorUserRole status=SUCCESS method=UserLogs.selectMonitorUserRole()[pri:28, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectMonitorUser()[pri:29, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:17 IST" name="selectMonitorUser" finished-at="2024-02-01T15:18:20 IST" duration-ms="3334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMonitorUser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:20 IST" name="getResult" finished-at="2024-02-01T15:18:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMonitorUser status=SUCCESS method=UserLogs.selectMonitorUser()[pri:29, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downloadMonitorCSV()[pri:30, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:20 IST" name="downloadMonitorCSV" finished-at="2024-02-01T15:18:23 IST" duration-ms="3251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadMonitorCSV -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:23 IST" name="getResult" finished-at="2024-02-01T15:18:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadMonitorCSV status=SUCCESS method=UserLogs.downloadMonitorCSV()[pri:30, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downlaodMonitorPDFButton()[pri:31, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:23 IST" name="downlaodMonitorPDFButton" finished-at="2024-02-01T15:18:26 IST" duration-ms="3296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downlaodMonitorPDFButton -->
        <test-method signature="selectOperatorUserRole()[pri:32, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:26 IST" name="selectOperatorUserRole" finished-at="2024-02-01T15:18:32 IST" duration-ms="5313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOperatorUserRole -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:26 IST" name="getResult" finished-at="2024-02-01T15:18:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downlaodMonitorPDFButton status=SUCCESS method=UserLogs.downlaodMonitorPDFButton()[pri:31, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:32 IST" name="getResult" finished-at="2024-02-01T15:18:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectOperatorUserRole status=SUCCESS method=UserLogs.selectOperatorUserRole()[pri:32, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectOperatorUser()[pri:33, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:32 IST" name="selectOperatorUser" finished-at="2024-02-01T15:18:35 IST" duration-ms="3332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOperatorUser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:35 IST" name="getResult" finished-at="2024-02-01T15:18:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectOperatorUser status=SUCCESS method=UserLogs.selectOperatorUser()[pri:33, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downloadOperatorCSV()[pri:34, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:35 IST" name="downloadOperatorCSV" finished-at="2024-02-01T15:18:38 IST" duration-ms="3231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadOperatorCSV -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:38 IST" name="getResult" finished-at="2024-02-01T15:18:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadOperatorCSV status=SUCCESS method=UserLogs.downloadOperatorCSV()[pri:34, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downlaodOperatorPDFButton()[pri:35, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:38 IST" name="downlaodOperatorPDFButton" finished-at="2024-02-01T15:18:42 IST" duration-ms="3328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downlaodOperatorPDFButton -->
        <test-method signature="selectServiceUserRole()[pri:36, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:42 IST" name="selectServiceUserRole" finished-at="2024-02-01T15:18:47 IST" duration-ms="5309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectServiceUserRole -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:42 IST" name="getResult" finished-at="2024-02-01T15:18:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downlaodOperatorPDFButton status=SUCCESS method=UserLogs.downlaodOperatorPDFButton()[pri:35, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectServiceUser()[pri:37, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:47 IST" name="selectServiceUser" finished-at="2024-02-01T15:18:50 IST" duration-ms="3258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectServiceUser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:47 IST" name="getResult" finished-at="2024-02-01T15:18:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectServiceUserRole status=SUCCESS method=UserLogs.selectServiceUserRole()[pri:36, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downloadServiceCSV()[pri:38, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:50 IST" name="downloadServiceCSV" finished-at="2024-02-01T15:18:53 IST" duration-ms="3271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadServiceCSV -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:50 IST" name="getResult" finished-at="2024-02-01T15:18:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectServiceUser status=SUCCESS method=UserLogs.selectServiceUser()[pri:37, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:53 IST" name="getResult" finished-at="2024-02-01T15:18:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadServiceCSV status=SUCCESS method=UserLogs.downloadServiceCSV()[pri:38, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downlaodServicePDFButton()[pri:39, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:53 IST" name="downlaodServicePDFButton" finished-at="2024-02-01T15:18:57 IST" duration-ms="3357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downlaodServicePDFButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:57 IST" name="getResult" finished-at="2024-02-01T15:18:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downlaodServicePDFButton status=SUCCESS method=UserLogs.downlaodServicePDFButton()[pri:39, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectSupportUserRole()[pri:40, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:18:57 IST" name="selectSupportUserRole" finished-at="2024-02-01T15:19:02 IST" duration-ms="5285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectSupportUserRole -->
        <test-method signature="selectSupportUser()[pri:41, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:19:02 IST" name="selectSupportUser" finished-at="2024-02-01T15:19:05 IST" duration-ms="3304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectSupportUser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:19:02 IST" name="getResult" finished-at="2024-02-01T15:19:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectSupportUserRole status=SUCCESS method=UserLogs.selectSupportUserRole()[pri:40, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:19:05 IST" name="getResult" finished-at="2024-02-01T15:19:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectSupportUser status=SUCCESS method=UserLogs.selectSupportUser()[pri:41, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downloadSupportCSV()[pri:42, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:19:05 IST" name="downloadSupportCSV" finished-at="2024-02-01T15:19:09 IST" duration-ms="3270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadSupportCSV -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:19:09 IST" name="getResult" finished-at="2024-02-01T15:19:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadSupportCSV status=SUCCESS method=UserLogs.downloadSupportCSV()[pri:42, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="downlaodSupportPDFButton()[pri:43, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:19:09 IST" name="downlaodSupportPDFButton" finished-at="2024-02-01T15:19:12 IST" duration-ms="3358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downlaodSupportPDFButton -->
        <test-method signature="logout()[pri:44, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:19:12 IST" name="logout" finished-at="2024-02-01T15:19:17 IST" duration-ms="5277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:19:12 IST" name="getResult" finished-at="2024-02-01T15:19:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downlaodSupportPDFButton status=SUCCESS method=UserLogs.downlaodSupportPDFButton()[pri:43, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:19:17 IST" name="getResult" finished-at="2024-02-01T15:19:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=UserLogs.logout()[pri:44, instance:com.selenium.UserLogs@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.UserLogs@359df09a]" started-at="2024-02-01T15:19:17 IST" name="tearDown" finished-at="2024-02-01T15:19:18 IST" duration-ms="411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.UserLogs -->
    </test> <!-- UserLogs -->
    <test started-at="2024-02-01T15:19:18 IST" name="AttenderLiveSessions" finished-at="2024-02-01T15:20:16 IST" duration-ms="58589">
      <class name="com.selenium.AttenderLiveSessions">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:18 IST" name="setUp" finished-at="2024-02-01T15:19:20 IST" duration-ms="2450" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:20 IST" name="login" finished-at="2024-02-01T15:19:26 IST" duration-ms="6158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:26 IST" name="getResult" finished-at="2024-02-01T15:19:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=AttenderLiveSessions.login()[pri:1, instance:com.selenium.AttenderLiveSessions@548a24a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDashboard()[pri:2, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:26 IST" name="revenueDashboard" finished-at="2024-02-01T15:19:32 IST" duration-ms="5229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboard -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:32 IST" name="getResult" finished-at="2024-02-01T15:19:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboard status=SUCCESS method=AttenderLiveSessions.revenueDashboard()[pri:2, instance:com.selenium.AttenderLiveSessions@548a24a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="attenderLiveSessionsPage()[pri:3, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:32 IST" name="attenderLiveSessionsPage" finished-at="2024-02-01T15:19:35 IST" duration-ms="3705" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- attenderLiveSessionsPage -->
        <test-method signature="selectSitesList()[pri:4, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:35 IST" name="selectSitesList" finished-at="2024-02-01T15:19:44 IST" duration-ms="8597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectSitesList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:35 IST" name="getResult" finished-at="2024-02-01T15:19:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=attenderLiveSessionsPage status=SUCCESS method=AttenderLiveSessions.attenderLiveSessionsPage()[pri:3, instance:com.selenium.AttenderLiveSessions@548a24a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="attenderSessionCount()[pri:5, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:44 IST" name="attenderSessionCount" finished-at="2024-02-01T15:19:49 IST" duration-ms="5298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- attenderSessionCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:44 IST" name="getResult" finished-at="2024-02-01T15:19:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectSitesList status=SUCCESS method=AttenderLiveSessions.selectSitesList()[pri:4, instance:com.selenium.AttenderLiveSessions@548a24a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:49 IST" name="getResult" finished-at="2024-02-01T15:19:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=attenderSessionCount status=SUCCESS method=AttenderLiveSessions.attenderSessionCount()[pri:5, instance:com.selenium.AttenderLiveSessions@548a24a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="clickLogoutButton()[pri:7, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:49 IST" name="clickLogoutButton" finished-at="2024-02-01T15:19:49 IST" duration-ms="341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickLogoutButton -->
        <test-method signature="confirmAttenderLogoutAction()[pri:8, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:49 IST" name="confirmAttenderLogoutAction" finished-at="2024-02-01T15:19:50 IST" duration-ms="300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirmAttenderLogoutAction -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:49 IST" name="getResult" finished-at="2024-02-01T15:19:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickLogoutButton status=SUCCESS method=AttenderLiveSessions.clickLogoutButton()[pri:7, instance:com.selenium.AttenderLiveSessions@548a24a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:50 IST" name="getResult" finished-at="2024-02-01T15:19:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=confirmAttenderLogoutAction status=SUCCESS method=AttenderLiveSessions.confirmAttenderLogoutAction()[pri:8, instance:com.selenium.AttenderLiveSessions@548a24a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectReason()[pri:9, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:50 IST" name="selectReason" finished-at="2024-02-01T15:19:53 IST" duration-ms="3294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectReason -->
        <test-method signature="clickSubmitButtonWithExplicitWait()[pri:10, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:53 IST" name="clickSubmitButtonWithExplicitWait" finished-at="2024-02-01T15:19:53 IST" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickSubmitButtonWithExplicitWait -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:53 IST" name="getResult" finished-at="2024-02-01T15:19:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectReason status=SUCCESS method=AttenderLiveSessions.selectReason()[pri:9, instance:com.selenium.AttenderLiveSessions@548a24a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:53 IST" name="getResult" finished-at="2024-02-01T15:19:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickSubmitButtonWithExplicitWait status=SUCCESS method=AttenderLiveSessions.clickSubmitButtonWithExplicitWait()[pri:10, instance:com.selenium.AttenderLiveSessions@548a24a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="extractPopupText()[pri:11, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:53 IST" name="extractPopupText" finished-at="2024-02-01T15:19:56 IST" duration-ms="3027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractPopupText -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:56 IST" name="getResult" finished-at="2024-02-01T15:19:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractPopupText status=SUCCESS method=AttenderLiveSessions.extractPopupText()[pri:11, instance:com.selenium.AttenderLiveSessions@548a24a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusOK()[pri:12, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:19:56 IST" name="statusOK" finished-at="2024-02-01T15:20:02 IST" duration-ms="5231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusOK -->
        <test-method signature="selectSitesListTwice()[pri:13, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:20:02 IST" name="selectSitesListTwice" finished-at="2024-02-01T15:20:10 IST" duration-ms="8549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectSitesListTwice -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:20:02 IST" name="getResult" finished-at="2024-02-01T15:20:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusOK status=SUCCESS method=AttenderLiveSessions.statusOK()[pri:12, instance:com.selenium.AttenderLiveSessions@548a24a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:14, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:20:10 IST" name="logout" finished-at="2024-02-01T15:20:15 IST" duration-ms="5299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:20:10 IST" name="getResult" finished-at="2024-02-01T15:20:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectSitesListTwice status=SUCCESS method=AttenderLiveSessions.selectSitesListTwice()[pri:13, instance:com.selenium.AttenderLiveSessions@548a24a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:20:15 IST" name="getResult" finished-at="2024-02-01T15:20:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=AttenderLiveSessions.logout()[pri:14, instance:com.selenium.AttenderLiveSessions@548a24a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.AttenderLiveSessions@548a24a]" started-at="2024-02-01T15:20:15 IST" name="tearDown" finished-at="2024-02-01T15:20:16 IST" duration-ms="844" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.AttenderLiveSessions -->
    </test> <!-- AttenderLiveSessions -->
    <test started-at="2024-02-01T15:20:16 IST" name="Coupons" finished-at="2024-02-01T15:20:59 IST" duration-ms="42481">
      <class name="com.selenium.Coupons">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:16 IST" name="setUp" finished-at="2024-02-01T15:20:19 IST" duration-ms="2390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:19 IST" name="login" finished-at="2024-02-01T15:20:25 IST" duration-ms="6222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:25 IST" name="getResult" finished-at="2024-02-01T15:20:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=Coupons.login()[pri:1, instance:com.selenium.Coupons@45d84a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="revenueDashboard()[pri:2, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:25 IST" name="revenueDashboard" finished-at="2024-02-01T15:20:30 IST" duration-ms="5218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboard -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:30 IST" name="getResult" finished-at="2024-02-01T15:20:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboard status=SUCCESS method=Coupons.revenueDashboard()[pri:2, instance:com.selenium.Coupons@45d84a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="attenderLiveSessionsPage()[pri:3, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:30 IST" name="attenderLiveSessionsPage" finished-at="2024-02-01T15:20:33 IST" duration-ms="3317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- attenderLiveSessionsPage -->
        <test-method signature="selectSitesList()[pri:4, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:33 IST" name="selectSitesList" finished-at="2024-02-01T15:20:42 IST" duration-ms="8564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectSitesList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:33 IST" name="getResult" finished-at="2024-02-01T15:20:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=attenderLiveSessionsPage status=SUCCESS method=Coupons.attenderLiveSessionsPage()[pri:3, instance:com.selenium.Coupons@45d84a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:42 IST" name="getResult" finished-at="2024-02-01T15:20:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectSitesList status=SUCCESS method=Coupons.selectSitesList()[pri:4, instance:com.selenium.Coupons@45d84a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="enterVehicleNumber()[pri:5, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:42 IST" name="enterVehicleNumber" finished-at="2024-02-01T15:20:42 IST" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterVehicleNumber -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:42 IST" name="getResult" finished-at="2024-02-01T15:20:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterVehicleNumber status=SUCCESS method=Coupons.enterVehicleNumber()[pri:5, instance:com.selenium.Coupons@45d84a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="enterMobileNumber()[pri:6, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:42 IST" name="enterMobileNumber" finished-at="2024-02-01T15:20:42 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterMobileNumber -->
        <test-method signature="entercouponAmount()[pri:7, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:42 IST" name="entercouponAmount" finished-at="2024-02-01T15:20:42 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- entercouponAmount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:42 IST" name="getResult" finished-at="2024-02-01T15:20:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterMobileNumber status=SUCCESS method=Coupons.enterMobileNumber()[pri:6, instance:com.selenium.Coupons@45d84a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:42 IST" name="getResult" finished-at="2024-02-01T15:20:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=entercouponAmount status=SUCCESS method=Coupons.entercouponAmount()[pri:7, instance:com.selenium.Coupons@45d84a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="enterCouponCode()[pri:8, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:42 IST" name="enterCouponCode" finished-at="2024-02-01T15:20:42 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterCouponCode -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:42 IST" name="getResult" finished-at="2024-02-01T15:20:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterCouponCode status=SUCCESS method=Coupons.enterCouponCode()[pri:8, instance:com.selenium.Coupons@45d84a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="generateButton()[pri:9, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:42 IST" name="generateButton" finished-at="2024-02-01T15:20:48 IST" duration-ms="6232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateButton -->
        <test-method signature="extractPopupText()[pri:10, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:48 IST" name="extractPopupText" finished-at="2024-02-01T15:20:50 IST" duration-ms="2025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extractPopupText -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:48 IST" name="getResult" finished-at="2024-02-01T15:20:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=generateButton status=SUCCESS method=Coupons.generateButton()[pri:9, instance:com.selenium.Coupons@45d84a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:50 IST" name="getResult" finished-at="2024-02-01T15:20:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=extractPopupText status=SUCCESS method=Coupons.extractPopupText()[pri:10, instance:com.selenium.Coupons@45d84a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="statusOK()[pri:11, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:50 IST" name="statusOK" finished-at="2024-02-01T15:20:53 IST" duration-ms="2224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusOK -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:53 IST" name="getResult" finished-at="2024-02-01T15:20:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=statusOK status=SUCCESS method=Coupons.statusOK()[pri:11, instance:com.selenium.Coupons@45d84a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logout()[pri:25, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:53 IST" name="logout" finished-at="2024-02-01T15:20:58 IST" duration-ms="5282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:58 IST" name="getResult" finished-at="2024-02-01T15:20:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=Coupons.logout()[pri:25, instance:com.selenium.Coupons@45d84a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.Coupons@45d84a20]" started-at="2024-02-01T15:20:58 IST" name="tearDown" finished-at="2024-02-01T15:20:59 IST" duration-ms="911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.Coupons -->
    </test> <!-- Coupons -->
    <test started-at="2024-02-01T15:20:59 IST" name="Feedback" finished-at="2024-02-01T15:22:15 IST" duration-ms="76021">
      <class name="com.selenium.BaseTestReport">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.BaseTestReport@71075444]" started-at="2024-02-01T14:08:26 IST" name="setUp" finished-at="2024-02-01T14:08:26 IST" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.BaseTestReport@71075444]" started-at="2024-02-01T15:22:15 IST" name="tearDown" finished-at="2024-02-01T15:22:15 IST" duration-ms="103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.BaseTestReport -->
      <class name="com.selenium.Feedback">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:20:59 IST" name="setUp" finished-at="2024-02-01T15:21:02 IST" duration-ms="2850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:21:02 IST" name="login" finished-at="2024-02-01T15:21:09 IST" duration-ms="7489" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="revenueDashboard()[pri:2, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:21:09 IST" name="revenueDashboard" finished-at="2024-02-01T15:21:14 IST" duration-ms="5192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revenueDashboard -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:21:09 IST" name="getResult" finished-at="2024-02-01T15:21:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=Feedback.login()[pri:1, instance:com.selenium.Feedback@4f32a3ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="redirectFeedBackPage()[pri:3, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:21:14 IST" name="redirectFeedBackPage" finished-at="2024-02-01T15:21:18 IST" duration-ms="3229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectFeedBackPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:21:14 IST" name="getResult" finished-at="2024-02-01T15:21:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revenueDashboard status=SUCCESS method=Feedback.revenueDashboard()[pri:2, instance:com.selenium.Feedback@4f32a3ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:21:18 IST" name="getResult" finished-at="2024-02-01T15:21:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectFeedBackPage status=SUCCESS method=Feedback.redirectFeedBackPage()[pri:3, instance:com.selenium.Feedback@4f32a3ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectFeedbackSitesList()[pri:4, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:21:18 IST" name="selectFeedbackSitesList" finished-at="2024-02-01T15:21:26 IST" duration-ms="8600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectFeedbackSitesList -->
        <test-method signature="feedbackDatesEnabled()[pri:5, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:21:26 IST" name="feedbackDatesEnabled" finished-at="2024-02-01T15:21:30 IST" duration-ms="3710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feedbackDatesEnabled -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:21:26 IST" name="getResult" finished-at="2024-02-01T15:21:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectFeedbackSitesList status=SUCCESS method=Feedback.selectFeedbackSitesList()[pri:4, instance:com.selenium.Feedback@4f32a3ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectFeedbackStartDate()[pri:6, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:21:30 IST" name="selectFeedbackStartDate" finished-at="2024-02-01T15:21:38 IST" duration-ms="7712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectFeedbackStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:21:30 IST" name="getResult" finished-at="2024-02-01T15:21:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feedbackDatesEnabled status=SUCCESS method=Feedback.feedbackDatesEnabled()[pri:5, instance:com.selenium.Feedback@4f32a3ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:21:38 IST" name="getResult" finished-at="2024-02-01T15:21:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectFeedbackStartDate status=SUCCESS method=Feedback.selectFeedbackStartDate()[pri:6, instance:com.selenium.Feedback@4f32a3ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectFeedbackEndDate()[pri:7, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:21:38 IST" name="selectFeedbackEndDate" finished-at="2024-02-01T15:21:46 IST" duration-ms="8468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectFeedbackEndDate -->
        <test-method signature="clickComplaintsTab()[pri:8, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:21:46 IST" name="clickComplaintsTab" finished-at="2024-02-01T15:21:51 IST" duration-ms="5213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickComplaintsTab -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:21:46 IST" name="getResult" finished-at="2024-02-01T15:21:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectFeedbackEndDate status=SUCCESS method=Feedback.selectFeedbackEndDate()[pri:7, instance:com.selenium.Feedback@4f32a3ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:21:51 IST" name="getResult" finished-at="2024-02-01T15:21:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickComplaintsTab status=SUCCESS method=Feedback.clickComplaintsTab()[pri:8, instance:com.selenium.Feedback@4f32a3ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectComplaintSitesList()[pri:9, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:21:51 IST" name="selectComplaintSitesList" finished-at="2024-02-01T15:22:00 IST" duration-ms="8509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectComplaintSitesList -->
        <test-method signature="complaintsDatesEnabled()[pri:10, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:22:00 IST" name="complaintsDatesEnabled" finished-at="2024-02-01T15:22:03 IST" duration-ms="3710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- complaintsDatesEnabled -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:22:00 IST" name="getResult" finished-at="2024-02-01T15:22:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectComplaintSitesList status=SUCCESS method=Feedback.selectComplaintSitesList()[pri:9, instance:com.selenium.Feedback@4f32a3ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectComplaintStartDate()[pri:11, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:22:03 IST" name="selectComplaintStartDate" finished-at="2024-02-01T15:22:07 IST" duration-ms="3242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectComplaintStartDate -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:22:03 IST" name="getResult" finished-at="2024-02-01T15:22:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=complaintsDatesEnabled status=SUCCESS method=Feedback.complaintsDatesEnabled()[pri:10, instance:com.selenium.Feedback@4f32a3ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:22:07 IST" name="getResult" finished-at="2024-02-01T15:22:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectComplaintStartDate status=SUCCESS method=Feedback.selectComplaintStartDate()[pri:11, instance:com.selenium.Feedback@4f32a3ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="selectComplaintEndDate()[pri:12, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:22:07 IST" name="selectComplaintEndDate" finished-at="2024-02-01T15:22:09 IST" duration-ms="2005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectComplaintEndDate -->
        <test-method signature="logout()[pri:20, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:22:09 IST" name="logout" finished-at="2024-02-01T15:22:14 IST" duration-ms="5272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:22:09 IST" name="getResult" finished-at="2024-02-01T15:22:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectComplaintEndDate status=SUCCESS method=Feedback.selectComplaintEndDate()[pri:12, instance:com.selenium.Feedback@4f32a3ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:22:14 IST" name="getResult" finished-at="2024-02-01T15:22:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=Feedback.logout()[pri:20, instance:com.selenium.Feedback@4f32a3ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.selenium.Feedback@4f32a3ad]" started-at="2024-02-01T15:22:14 IST" name="tearDown" finished-at="2024-02-01T15:22:15 IST" duration-ms="813" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.selenium.Feedback -->
    </test> <!-- Feedback -->
  </suite> <!-- SampleTestSuite -->
</testng-results>
